// Glen - github.com/willcrichton/glen
var Glen;!function(){"use strict";Physijs.scripts.worker="physijs_worker.js";Physijs.scripts.ammo="ammo.js";Glen={}}();if(!window.requestAnimationFrame){window.requestAnimationFrame=function(){return window.webkitRequestAnimationFrame||window.mozRequestAnimationFrame||window.oRequestAnimationFrame||window.msRequestAnimationFrame||function(callback,element){window.setTimeout(callback,1e3/60)}}()}THREE.Vector3.prototype.toString=function(){return"("+this.x+", "+this.y+", "+this.z+")"};THREE.Vector3.prototype.equals=function(vector){return this.x==vector.x&&this.y==vector.y&&this.z==vector.z};THREE.Object3D.prototype.hasEntity=function(){return typeof this.entity!=="undefined"};THREE.Object3D.prototype.getEntity=function(){return this.entity};Glen.Vector=function(x,y,z){if(x===undefined)return new THREE.Vector3;else if(typeof x=="string"){var nums=x.replace(/[()\s]/gi,"").split(",");return new THREE.Vector3(nums[0],nums[1],nums[2])}else return new THREE.Vector3(x,y,z)};Glen.VectorRandom=function(){return Vector((Math.random()>.5?-1:1)*Math.random(),(Math.random()>.5?-1:1)*Math.random(),(Math.random()>.5?-1:1)*Math.random())};Glen.Color=function(r,g,b){r=Math.floor(r);g=Math.floor(g);b=Math.floor(b);return parseInt((r<16?"0":"")+r.toString(16)+(g<16?"0":"")+g.toString(16)+(b<16?"0":"")+b.toString(16),16)};Glen.ColorRandom=function(){return Color(Math.floor(Math.random()*255),Math.floor(Math.random()*255),Math.floor(Math.random()*255))};Glen.Material=function(path,args){args=args||{};var material=Physijs.createMaterial(new THREE.MeshPhongMaterial({map:THREE.ImageUtils.loadTexture(path),shading:THREE.FlatShading}),args.friction||.4,args.restitution||.6);material.map.wrapS=material.map.wrapT=THREE.RepeatWrapping;material.map.repeat.set(args.repeatX||2.5,args.repeatY||2.5);return material};Glen.ColorMaterial=function(r,g,b,lambert,friction,restitution){var color;if(typeof r!="number")color=r;else color=Glen.Color(r,g,b);return new Physijs.createMaterial(lambert?new THREE.MeshLambertMaterial({color:color,shading:THREE.FlatShading}):new THREE.MeshPhongMaterial({color:color,shading:THREE.FlatShading}),friction||.4,restitution||.6)};Glen.loadModel=function(model,callback){var loader=new THREE.JSONLoader;loader.load({model:model,callback:callback})};Glen._timers=[];Glen.createTimer=function(name,delay,reps,func){var t={delay:delay,reps:reps,active:false,func:func};this._timers[name]=t;this.runTimer(name)};Glen.singleTimer=function(delay,func){var index=this.timers.push({reps:1,delay:delay,active:false,func:func});this.runTimer(index-1)};Glen.runTimer=function(name,runFunc){var t=this._timers[name];if(t&&t.reps>=0){t.reps--;t.active=true;if(runFunc)t.func();var self=this;setTimeout(function(){self.tunTimer(name,true)},t.delay)}else if(t){t.active=false}};Glen.removeTimer=function(name){this._timers[name]=undefined};var _mouseX=0,_mouseY=0,_projector=new THREE.Projector;document.addEventListener("mousemove",function(event){_mouseX=event.clientX/window.innerWidth*2-1;_mouseY=-(event.clientY/window.innerHeight)*2+1});Glen.mouseTrace=function(){var vector=new Glen.Vector(_mouseX,_mouseY,1);_projector.unprojectVector(vector,Glen._world.camera);var raycaster=new THREE.Raycaster(Glen._world.camera.position,vector.sub(Glen._world.camera.position).normalize());return raycaster.intersectObjects(Glen._world.scene.children)[0]};!function(){"use strict";THREE.MaskPass=function(scene,camera){this.scene=scene;this.camera=camera;this.enabled=true;this.clear=true;this.needsSwap=false;this.inverse=false};THREE.MaskPass.prototype={render:function(renderer,writeBuffer,readBuffer,delta){var context=renderer.context;context.colorMask(false,false,false,false);context.depthMask(false);var writeValue,clearValue;if(this.inverse){writeValue=0;clearValue=1}else{writeValue=1;clearValue=0}context.enable(context.STENCIL_TEST);context.stencilOp(context.REPLACE,context.REPLACE,context.REPLACE);context.stencilFunc(context.ALWAYS,writeValue,4294967295);context.clearStencil(clearValue);renderer.render(this.scene,this.camera,readBuffer,this.clear);renderer.render(this.scene,this.camera,writeBuffer,this.clear);context.colorMask(true,true,true,true);context.depthMask(true);context.stencilFunc(context.EQUAL,1,4294967295);context.stencilOp(context.KEEP,context.KEEP,context.KEEP)}};THREE.ClearMaskPass=function(){this.enabled=true};THREE.ClearMaskPass.prototype={render:function(renderer,writeBuffer,readBuffer,delta){var context=renderer.context;context.disable(context.STENCIL_TEST)}};THREE.RenderPass=function(scene,camera,overrideMaterial,clearColor,clearAlpha){this.scene=scene;this.camera=camera;this.overrideMaterial=overrideMaterial;this.clearColor=clearColor;this.clearAlpha=clearAlpha!==undefined?clearAlpha:1;this.oldClearColor=new THREE.Color;this.oldClearAlpha=1;this.enabled=true;this.clear=true;this.needsSwap=false};THREE.RenderPass.prototype={render:function(renderer,writeBuffer,readBuffer,delta){this.scene.overrideMaterial=this.overrideMaterial;if(this.clearColor){this.oldClearColor.copy(renderer.getClearColor());this.oldClearAlpha=renderer.getClearAlpha();renderer.setClearColor(this.clearColor,this.clearAlpha)}renderer.render(this.scene,this.camera,readBuffer,this.clear);if(this.clearColor){renderer.setClearColor(this.oldClearColor,this.oldClearAlpha)}this.scene.overrideMaterial=null}};THREE.ShaderPass=function(shader,textureID){this.textureID=textureID!==undefined?textureID:"tDiffuse";this.uniforms=THREE.UniformsUtils.clone(shader.uniforms);this.material=new THREE.ShaderMaterial({uniforms:this.uniforms,vertexShader:shader.vertexShader,fragmentShader:shader.fragmentShader});this.renderToScreen=false;this.enabled=true;this.needsSwap=true;this.clear=false};THREE.ShaderPass.prototype={render:function(renderer,writeBuffer,readBuffer,delta){if(this.uniforms[this.textureID]){this.uniforms[this.textureID].value=readBuffer}THREE.EffectComposer.quad.material=this.material;if(this.renderToScreen){renderer.render(THREE.EffectComposer.scene,THREE.EffectComposer.camera)}else{renderer.render(THREE.EffectComposer.scene,THREE.EffectComposer.camera,writeBuffer,this.clear)}}};THREE.CopyShader={uniforms:{tDiffuse:{type:"t",value:null},opacity:{type:"f",value:1}},vertexShader:["varying vec2 vUv;","void main() {","vUv = uv;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform float opacity;","uniform sampler2D tDiffuse;","varying vec2 vUv;","void main() {","vec4 texel = texture2D( tDiffuse, vUv );","gl_FragColor = opacity * texel;","}"].join("\n")};THREE.EffectComposer=function(renderer,renderTarget){this.renderer=renderer;if(renderTarget===undefined){var width=window.innerWidth||1;var height=window.innerHeight||1;var parameters={minFilter:THREE.LinearFilter,magFilter:THREE.LinearFilter,format:THREE.RGBFormat,stencilBuffer:false};renderTarget=new THREE.WebGLRenderTarget(width,height,parameters)}this.renderTarget1=renderTarget;this.renderTarget2=renderTarget.clone();this.writeBuffer=this.renderTarget1;this.readBuffer=this.renderTarget2;this.passes=[];if(THREE.CopyShader===undefined)console.error("THREE.EffectComposer relies on THREE.CopyShader");this.copyPass=new THREE.ShaderPass(THREE.CopyShader)};THREE.EffectComposer.prototype={swapBuffers:function(){var tmp=this.readBuffer;this.readBuffer=this.writeBuffer;this.writeBuffer=tmp},addPass:function(pass){this.passes.push(pass)},insertPass:function(pass,index){this.passes.splice(index,0,pass)},render:function(delta){this.writeBuffer=this.renderTarget1;this.readBuffer=this.renderTarget2;var maskActive=false;var pass,i,il=this.passes.length;for(i=0;i<il;i++){pass=this.passes[i];if(!pass.enabled)continue;pass.render(this.renderer,this.writeBuffer,this.readBuffer,delta,maskActive);if(pass.needsSwap){if(maskActive){var context=this.renderer.context;context.stencilFunc(context.NOTEQUAL,1,4294967295);this.copyPass.render(this.renderer,this.writeBuffer,this.readBuffer,delta);context.stencilFunc(context.EQUAL,1,4294967295)}this.swapBuffers()}if(pass instanceof THREE.MaskPass){maskActive=true}else if(pass instanceof THREE.ClearMaskPass){maskActive=false}}},reset:function(renderTarget){if(renderTarget===undefined){renderTarget=this.renderTarget1.clone();renderTarget.width=window.innerWidth;renderTarget.height=window.innerHeight}this.renderTarget1=renderTarget;this.renderTarget2=renderTarget.clone();this.writeBuffer=this.renderTarget1;this.readBuffer=this.renderTarget2},setSize:function(width,height){var renderTarget=this.renderTarget1.clone();renderTarget.width=width;renderTarget.height=height;this.reset(renderTarget)}};THREE.EffectComposer.camera=new THREE.OrthographicCamera(-1,1,1,-1,0,1);THREE.EffectComposer.quad=new THREE.Mesh(new THREE.PlaneGeometry(2,2),null);THREE.EffectComposer.scene=new THREE.Scene;THREE.EffectComposer.scene.add(THREE.EffectComposer.quad)}();!function(){"use strict";THREE.FirstPersonControls=function(object,domElement){this.object=object;this.target=new THREE.Vector3(0,0,0);this.domElement=domElement!==undefined?domElement:document;this.movementSpeed=1;this.lookSpeed=.005;this.lookVertical=true;this.autoForward=false;this.activeLook=true;this.heightSpeed=false;this.heightCoef=1;this.heightMin=0;this.heightMax=1;this.constrainVertical=false;this.verticalMin=0;this.verticalMax=Math.PI;this.autoSpeedFactor=0;this.mouseX=0;this.mouseY=0;this.lat=0;this.lon=0;this.phi=0;this.theta=0;this.moveForward=false;this.moveBackward=false;this.moveLeft=false;this.moveRight=false;this.freeze=false;this.mouseDragOn=false;this.viewHalfX=0;this.viewHalfY=0;if(this.domElement!==document){this.domElement.setAttribute("tabindex",-1)}this.handleResize=function(){if(this.domElement===document){this.viewHalfX=window.innerWidth/2;this.viewHalfY=window.innerHeight/2}else{this.viewHalfX=this.domElement.offsetWidth/2;this.viewHalfY=this.domElement.offsetHeight/2}};this.onMouseDown=function(event){if(this.domElement!==document){this.domElement.focus()}event.preventDefault();event.stopPropagation();if(this.activeLook){switch(event.button){case 0:this.moveForward=true;break;case 2:this.moveBackward=true;break}}this.mouseDragOn=true};this.onMouseUp=function(event){event.preventDefault();event.stopPropagation();if(this.activeLook){switch(event.button){case 0:this.moveForward=false;break;case 2:this.moveBackward=false;break}}this.mouseDragOn=false};this.onMouseMove=function(event){if(this.domElement===document){this.mouseX=event.pageX-this.viewHalfX;this.mouseY=event.pageY-this.viewHalfY}else{this.mouseX=event.pageX-this.domElement.offsetLeft-this.viewHalfX;this.mouseY=event.pageY-this.domElement.offsetTop-this.viewHalfY}};this.onKeyDown=function(event){switch(event.keyCode){case 38:case 87:this.moveForward=true;break;case 37:case 65:this.moveLeft=true;break;case 40:case 83:this.moveBackward=true;break;case 39:case 68:this.moveRight=true;break;case 82:this.moveUp=true;break;case 70:this.moveDown=true;break;case 81:this.freeze=!this.freeze;break}};this.onKeyUp=function(event){switch(event.keyCode){case 38:case 87:this.moveForward=false;break;case 37:case 65:this.moveLeft=false;break;case 40:case 83:this.moveBackward=false;break;case 39:case 68:this.moveRight=false;break;case 82:this.moveUp=false;break;case 70:this.moveDown=false;break}};this.update=function(delta){if(this.freeze){return}if(this.heightSpeed){var y=THREE.Math.clamp(this.object.position.y,this.heightMin,this.heightMax);var heightDelta=y-this.heightMin;this.autoSpeedFactor=delta*heightDelta*this.heightCoef}else{this.autoSpeedFactor=0}var actualMoveSpeed=delta*this.movementSpeed;if(this.moveForward||this.autoForward&&!this.moveBackward)this.object.translateZ(-(actualMoveSpeed+this.autoSpeedFactor));if(this.moveBackward)this.object.translateZ(actualMoveSpeed);if(this.moveLeft)this.object.translateX(-actualMoveSpeed);if(this.moveRight)this.object.translateX(actualMoveSpeed);if(this.moveUp)this.object.translateY(actualMoveSpeed);if(this.moveDown)this.object.translateY(-actualMoveSpeed);var actualLookSpeed=delta*this.lookSpeed;if(!this.activeLook){actualLookSpeed=0}var verticalLookRatio=1;if(this.constrainVertical){verticalLookRatio=Math.PI/(this.verticalMax-this.verticalMin)}this.lon+=this.mouseX*actualLookSpeed;if(this.lookVertical)this.lat-=this.mouseY*actualLookSpeed*verticalLookRatio;this.lat=Math.max(-85,Math.min(85,this.lat));this.phi=THREE.Math.degToRad(90-this.lat);this.theta=THREE.Math.degToRad(this.lon);if(this.constrainVertical){this.phi=THREE.Math.mapLinear(this.phi,0,Math.PI,this.verticalMin,this.verticalMax)}var targetPosition=this.target,position=this.object.position;targetPosition.x=position.x+100*Math.sin(this.phi)*Math.cos(this.theta);targetPosition.y=position.y+100*Math.cos(this.phi);targetPosition.z=position.z+100*Math.sin(this.phi)*Math.sin(this.theta);this.object.lookAt(targetPosition)};this.domElement.addEventListener("contextmenu",function(event){event.preventDefault()},false);this.domElement.addEventListener("mousemove",bind(this,this.onMouseMove),false);this.domElement.addEventListener("keydown",bind(this,this.onKeyDown),false);this.domElement.addEventListener("keyup",bind(this,this.onKeyUp),false);function bind(scope,fn){return function(){fn.apply(scope,arguments)}}this.handleResize()};Glen.FPSControls=function(args){THREE.FirstPersonControls.call(this,args);this.lastX=[];this.lastY=[];this.xDiff=0;this.yDiff=0;this.mouseSensitivity=5;this.useTarget=true;this.constrainHorizontal=true;this.onMouseMove=function(event){if(this.domElement===document){this.mouseX=event.pageX-this.viewHalfX;this.mouseY=event.pageY-this.viewHalfY}else{this.mouseX=event.pageX-this.domElement.offsetLeft-this.viewHalfX;this.mouseY=event.pageY-this.domElement.offsetTop-this.viewHalfY}if(document.webkitPointerLockElement!==null){this.xDiff=event.webkitMovementX;this.yDiff=event.webkitMovementY}else{var lx=this.lastX.length>1?this.lastX.pop():0;var ly=this.lastY.length>1?this.lastY.pop():0;this.xDiff=this.mouseX-lx;this.yDiff=this.mouseY-ly;this.lastX.unshift(this.mouseX);this.lastY.unshift(this.mouseY)}};this.domElement.addEventListener("mousemove",bind(this,this.onMouseMove),false);this.update=function(delta){if(this.freeze){return}if(this.heightSpeed){var y=THREE.Math.clamp(this.object.position.y,this.heightMin,this.heightMax);var heightDelta=y-this.heightMin;this.autoSpeedFactor=delta*heightDelta*this.heightCoef}else{this.autoSpeedFactor=0}var actualMoveSpeed=delta*this.movementSpeed;if(this.moveForward||this.autoForward&&!this.moveBackward)this.object.translateZ(-(actualMoveSpeed+this.autoSpeedFactor));if(this.moveBackward)this.object.translateZ(actualMoveSpeed);if(this.moveLeft)this.object.translateX(-actualMoveSpeed);if(this.moveRight)this.object.translateX(actualMoveSpeed);if(this.moveUp)this.object.translateY(actualMoveSpeed);if(this.moveDown)this.object.translateY(-actualMoveSpeed);var actualLookSpeed=delta*this.lookSpeed;if(!this.activeLook){actualLookSpeed=0}var verticalLookRatio=1;if(this.constrainVertical){verticalLookRatio=Math.PI/(this.verticalMax-this.verticalMin)}if(this.constrainHorizontal){this.lon+=this.xDiff/this.mouseSensitivity;this.lat-=this.yDiff/this.mouseSensitivity}else{this.lon+=this.mouseX*actualLookSpeed;if(this.lookVertical)this.lat-=this.mouseY*actualLookSpeed*verticalLookRatio}this.lat=Math.max(-85,Math.min(85,this.lat));this.phi=THREE.Math.degToRad(90-this.lat);this.theta=THREE.Math.degToRad(this.lon);if(this.constrainVertical){this.phi=THREE.Math.mapLinear(this.phi,0,Math.PI,this.verticalMin,this.verticalMax)}var targetPosition=this.target,position=this.object.position;targetPosition.x=position.x+100*Math.sin(this.phi)*Math.cos(this.theta);targetPosition.y=position.y+100*Math.cos(this.phi);targetPosition.z=position.z+100*Math.sin(this.phi)*Math.sin(this.theta);this.xDiff=this.xDiff/2;this.yDiff=this.yDiff/2;this.object.lookAt(targetPosition);if(this.moveForward||this.moveBackward||this.moveRight||this.moveLeft||this.moveUp||this.moveDown||this.xDiff>.01||this.yDiff>.01){Glen._world.callHook("Move",this)}};function bind(scope,fn){return function(){fn.apply(scope,arguments)}}};Glen.FPSControls.prototype=new THREE.FirstPersonControls;Glen.FPSControls.prototype.constructor=Glen.FPSControls}();!function(){"use strict";Glen._entities={};function _extend(a,b){for(var key in b)if(b.hasOwnProperty(key))a[key]=b[key];return a}Glen.registerEntity=function(name,construct,extender,extendArgs){if(typeof Glen._entities[name]!="undefined"){throw new Error('"'+name+'" is already defined, cannot reigster it')}Glen._entities[name]={construct:construct,extender:extender,extendArgs:extendArgs}};Glen.Entity=function(ent,args){this.hooks={};this.entType=ent;var entInfo=Glen._entities[this.entType];var entObj;var entArgs=args;var queue=[];do{if(entInfo.construct)queue.unshift(entInfo.construct);entArgs=_extend(entArgs,typeof entInfo.extendArgs=="function"?entInfo.extendArgs(entArgs):entInfo.extendArgs);entInfo=Glen._entities[entInfo.extender]}while(typeof entInfo!="undefined");for(var i=0;i<queue.length;i++){var newObj=queue[i].call(entObj,entArgs);if(newObj!==undefined)entObj=newObj}_extend(entObj,this);Glen._world.addEntity(entObj);return entObj};Glen.Entity.constructor=Glen.Entity;Glen.Entity.prototype=new THREE.Object3D;_extend(Glen.Entity.prototype,{getType:function(){return this.entType},getPos:function(){return this.getMesh().position.clone()},setPos:function(vector){this.getMesh().position=vector.clone()},getRotation:function(){return this.getMesh().rotation.clone()},setRotation:function(vector){this.getMesh().rotation=vector.clone()},rotate:function(vector){this.setRotation(this.getRotation().add(vector))},getMaterial:function(){return this.getMesh().materials[0]},setMaterial:function(material){this.getMesh().materials[0]=material},addHook:function(hook,callback){if(!this.hooks[hook])this.hooks[hook]=[];this.hooks[hook].push(callback)},callHook:function(hook){var args=Array.prototype.slice.call(arguments);args.splice(0,1);if(this.hooks[hook]){for(var i in this.hooks[hook]){this.hooks[hook][i].apply(this,args)}}},remove:function(){Glen._world.removeEntity(this)}});Glen.registerEntity("basic",function(args){var material;if(args.material){material=args.material}else if(args.color){material=Glen.ColorMaterial(args.color)}else{material=new Glen.ColorMaterial(16777215)}if(!args.meshfn)throw new Error("Basic entity type requires Physijs mesh constructor");if(!args.geometry)throw new Error("Basic entity type requires some THREE.Geometry type");var mesh=new args.meshfn(args.geometry,material,typeof args.mass=="undefined"?10:args.mass);if(args.rotation)mesh.rotation.copy(args.rotation);mesh.position.copy(args.position||Glen.Vector(0,0,0));mesh.castShadow=true;return mesh});Glen.registerEntity("block",undefined,"basic",function(args){return{geometry:new THREE.CubeGeometry(args.width,args.height,args.depth),meshfn:Physijs.BoxMesh}});Glen.registerEntity("floor",function(){this.castShadow=false;this.receiveShadow=true},"block",{height:1,mass:0});Glen.registerEntity("sphere",undefined,"basic",function(args){return{geometry:new THREE.SphereGeometry(args.radius,args.segments,args.rings),meshfn:Physijs.SphereMesh}});Glen.registerEntity("text",undefined,"basic",function(args){return{geometry:new THREE.TextGeometry(args.text,args),meshfn:Physijs.ConvexMesh}});Glen.registerEntity("pointLight",function(args){var light=new THREE.PointLight(args.color||16777215);light.position.copy(args.position||Glen.Vector(0,0,0));light.intensity=args.intensity;return light});Glen.registerEntity("directionalLight",function(args){var light=new THREE.DirectionalLight(args.color||16777215,args.intensity,args.distance);light.position.copy(args.position||Glen.Vector(0,0,0));light.target.position.copy(args.target||Glen._world.scene.position);light.castShadow=true;light.shadowCameraLeft=-60;light.shadowCameraTop=-60;light.shadowCameraRight=60;light.shadowCameraBottom=60;light.shadowCameraNear=20;light.shadowCameraFar=200;light.shadowBias=-1e-4;light.shadowMapWidth=light.shadowMapHeight=2048;light.shadowDarkness=.7;return light});Glen.registerEntity("ambientLight",function(args){return new THREE.AmbientLight(args.color||16777215)});Glen.registerEntity("model",function(args){if(typeof args.geometry=="undefined"){var loader=new THREE.JSONLoader;var ent=this;loader.load({model:args.model,callback:function(geometry){var mesh=new Physijs.ConvexMesh(geometry,new THREE.MeshLambertMaterial);ent.setMesh(mesh);world.scene.Object(mesh)}});return undefined}else{return new Physijs.ConvexMesh(args.geometry,new THREE.MeshLambertMaterial)}})}();!function(){"use strict";Glen.World=function(args){args=args||{};this._clock=new THREE.Clock;this._clock.start();this._entities={};this._eid=0;this._hooks={};Glen._world=this;var self=this;if(!args.container){this.container=document.body;this.canvasWidth=args.width||window.innerWidth;this.canvasHeight=args.height||window.innerHeight-5}else{this.container=args.container;this.canvasWidth=args.width||this.container.offsetWidth;this.canvasHeight=args.height||this.container.offsetHeight}this.scene=new Physijs.Scene;this.scene.setGravity(args.gravity||Glen.Vector(0,-30,0));this.renderer=new THREE.WebGLRenderer;this.renderer.shadowMapEnabled=true;this.renderer.shadowMapSoft=true;this.renderer.setSize(this.canvasWidth,this.canvasHeight);this.container.appendChild(this.renderer.domElement);if(args.camera){if(args.camera.constructor.toString().indexOf("Array")==-1)this.camera=args.camera;else{this.camera=new THREE.PerspectiveCamera(args.camera.fov,args.camera.aspect,args.camera.near,args.camera.far)}}else{this.camera=new THREE.PerspectiveCamera(60,this.canvasWidth/this.canvasHeight,1,1e5)}this.camera.position=args.position||Glen.Vector(0,0,0);this.composer=new THREE.EffectComposer(this.renderer);this.composer.addPass(new THREE.RenderPass(this.scene,this.camera));this._fx=false;if(args.controls){var controls=new Glen.FPSControls(this.camera);controls.movementSpeed=100;controls.lookSpeed=.125;controls.lookVertical=true;controls.noFly=true;controls.constrainVertical=true;controls.constrainHorizontal=typeof args.constrainLook!="undefined"?args.constrainLook:true;this.controls=controls}else if(args.look){var mouseX=0,mouseY=0;document.addEventListener("mousemove",function(event){mouseX=event.clientX-window.innerWidth/2;mouseY=event.clientY-window.innerHeight/2},false);this.addHook("Think","_CameraUpdate",function(){var camera=this.camera;camera.position.x+=(mouseX-camera.position.x)*.01;camera.position.y+=(-mouseY-camera.position.y)*.01;camera.lookAt(this.scene.position)})}this.camera.lookAt(args.lookAt||this.scene.position);if(args.autoStart)this.render();if(args.skybox)this.setSkybox(args.skybox.path,args.skybox.ext);if(args.fog)this.setFog(args.fog.color,args.fog.distance);if(args.fullscreen){var event=typeof args.fullscreen=="string"?args.fullscreen:"dblclick";this.listenFullScreen(event)}document.addEventListener("click",function(){var ent=Glen.mouseTrace().object._entity;self.callHook("Click",ent);if(ent)ent.callHook("Click")});document.addEventListener("keypress",function(e){self.callHook("KeyPress",e.which)})};Glen.World.prototype={render:function(){var self=this;requestAnimationFrame(function(){self.render()});if(this.controls){this.controls.update(this._clock.getDelta())}this.scene.simulate();this._think();if(this._fx)this.composer.render();else this.renderer.render(this.scene,this.camera);this.callHook("Render")},_think:function(){var trace=Glen.mouseTrace();if(typeof trace!="undefined"&&typeof trace.object._entity!="undefined"){var hoverEnt=trace.object._entity;if(hoverEnt!=this._hovering){world.callHook("MouseEnter",hoverEnt);hoverEnt.callHook("MouseEnter");this._hovering=hoverEnt}world.callHook("MouseHover",hoverEnt);hoverEnt.callHook("MouseHover")}else{this._hovering=undefined}this.callHook("Think",this);for(var i in this._entities)if(this._entities[i]instanceof Glen.Entity)this._entities[i].callHook("Think")},addHook:function(hook,name,callback){if(typeof this._hooks[hook]=="undefined")this._hooks[hook]={};this._hooks[hook][name]=callback},callHook:function(hook){var args=Array.prototype.slice.call(arguments);args.splice(0,1);var retval;if(this._hooks[hook]){for(var i in this._hooks[hook]){var tmp=this._hooks[hook][i].apply(this,args);if(typeof tmp!="undefined"&&typeof retval=="undefined"){retval=tmp}}}return retval},removeHook:function(hook,name){if(!this._hooks[hook])this._hooks[hook]={};delete this._hooks[hook][name]},addEntity:function(ent){if(!ent)return;this.scene.add(ent);this._entities[ent.id]=ent},removeEntity:function(obj){if(!obj)return;delete this._entities[obj.id];this.scene.removeChildRecurse(obj)},listenFullScreen:function(event){document.addEventListener(event,function(){var el=this.documentElement,rfs=el.requestFullScreen||el.webkitRequestFullScreen||el.mozRequestFullScreen;rfs.call(el,Element.ALLOW_KEYBOARD_INPUT);el.ALLOW_KEYBOARD_INPUT=1},false);var self=this;document.addEventListener("webkitfullscreenchange",function(e){setTimeout(function(){if(document.webkitIsFullScreen)self.renderer.setSize(window.innerWidth,window.innerHeight);else self.renderer.setSize(self.canvasWidth,self.canvasHeight)},100);if(document.webkitIsFullScreen&&document.body.webkitRequestPointerLock){document.body.webkitRequestPointerLock()}},false)},setSkybox:function(path,extension){var ext=ext||".jpg";var urls=[path+"px"+ext,path+"nx"+ext,path+"py"+ext,path+"ny"+ext,path+"pz"+ext,path+"nz"+ext];var textureCube=THREE.ImageUtils.loadTextureCube(urls,new THREE.CubeRefractionMapping);var shader=THREE.ShaderLib.cube;shader.uniforms.tCube.value=textureCube;var material=new THREE.ShaderMaterial({fragmentShader:shader.fragmentShader,vertexShader:shader.vertexShader,uniforms:shader.uniforms,depthWrite:false,side:THREE.BackSide});var mesh=new THREE.Mesh(new THREE.CubeGeometry(1e5,1e5,1e5),material);mesh.castShadow=false;mesh.name="skybox";this.addEntity(mesh)},setFog:function(color,density){if(color){this.scene.fog=new THREE.FogExp2(color||16777215,density||15e-5);this._fog=this.scene.fog}else{this.scene.fog=this._fog}},removeFog:function(){this.scene.fog=undefined},addShaderEffect:function(args){var pass=new THREE.ShaderPass(args.shader);if(args.uniforms){for(var k in args.uniforms){pass.uniforms[k].value=args.uniforms[k]}}this.composer.addPass(pass);this._fx=true;if(args.last){var copy=new THREE.ShaderPass(THREE.CopyShader);copy.renderToScreen=true;this.composer.addPass(copy)}}}}();