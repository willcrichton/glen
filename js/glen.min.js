var THREE=THREE||{REVISION:"56"};self.console=self.console||{info:function(){},log:function(){},debug:function(){},warn:function(){},error:function(){}};self.Int32Array=self.Int32Array||Array;self.Float32Array=self.Float32Array||Array;String.prototype.trim=String.prototype.trim||function(){return this.replace(/^\s+|\s+$/g,"")};
THREE.extend=function(a,b){if(Object.keys)for(var c=Object.keys(b),d=0,f=c.length;d<f;d++){var e=c[d];Object.defineProperty(a,e,Object.getOwnPropertyDescriptor(b,e))}else for(e in c={}.hasOwnProperty,b)c.call(b,e)&&(a[e]=b[e]);return a};
(function(){for(var a=0,b=["ms","moz","webkit","o"],c=0;c<b.length&&!window.requestAnimationFrame;++c)window.requestAnimationFrame=window[b[c]+"RequestAnimationFrame"],window.cancelAnimationFrame=window[b[c]+"CancelAnimationFrame"]||window[b[c]+"CancelRequestAnimationFrame"];void 0===window.requestAnimationFrame&&(window.requestAnimationFrame=function(b){var c=Date.now(),e=Math.max(0,16-(c-a)),g=window.setTimeout(function(){b(c+e)},e);a=c+e;return g});window.cancelAnimationFrame=window.cancelAnimationFrame||
function(a){window.clearTimeout(a)}})();THREE.CullFaceNone=0;THREE.CullFaceBack=1;THREE.CullFaceFront=2;THREE.CullFaceFrontBack=3;THREE.FrontFaceDirectionCW=0;THREE.FrontFaceDirectionCCW=1;THREE.BasicShadowMap=0;THREE.PCFShadowMap=1;THREE.PCFSoftShadowMap=2;THREE.FrontSide=0;THREE.BackSide=1;THREE.DoubleSide=2;THREE.NoShading=0;THREE.FlatShading=1;THREE.SmoothShading=2;THREE.NoColors=0;THREE.FaceColors=1;THREE.VertexColors=2;THREE.NoBlending=0;THREE.NormalBlending=1;THREE.AdditiveBlending=2;
THREE.SubtractiveBlending=3;THREE.MultiplyBlending=4;THREE.CustomBlending=5;THREE.AddEquation=100;THREE.SubtractEquation=101;THREE.ReverseSubtractEquation=102;THREE.ZeroFactor=200;THREE.OneFactor=201;THREE.SrcColorFactor=202;THREE.OneMinusSrcColorFactor=203;THREE.SrcAlphaFactor=204;THREE.OneMinusSrcAlphaFactor=205;THREE.DstAlphaFactor=206;THREE.OneMinusDstAlphaFactor=207;THREE.DstColorFactor=208;THREE.OneMinusDstColorFactor=209;THREE.SrcAlphaSaturateFactor=210;THREE.MultiplyOperation=0;
THREE.MixOperation=1;THREE.AddOperation=2;THREE.UVMapping=function(){};THREE.CubeReflectionMapping=function(){};THREE.CubeRefractionMapping=function(){};THREE.SphericalReflectionMapping=function(){};THREE.SphericalRefractionMapping=function(){};THREE.RepeatWrapping=1E3;THREE.ClampToEdgeWrapping=1001;THREE.MirroredRepeatWrapping=1002;THREE.NearestFilter=1003;THREE.NearestMipMapNearestFilter=1004;THREE.NearestMipMapLinearFilter=1005;THREE.LinearFilter=1006;THREE.LinearMipMapNearestFilter=1007;
THREE.LinearMipMapLinearFilter=1008;THREE.UnsignedByteType=1009;THREE.ByteType=1010;THREE.ShortType=1011;THREE.UnsignedShortType=1012;THREE.IntType=1013;THREE.UnsignedIntType=1014;THREE.FloatType=1015;THREE.UnsignedShort4444Type=1016;THREE.UnsignedShort5551Type=1017;THREE.UnsignedShort565Type=1018;THREE.AlphaFormat=1019;THREE.RGBFormat=1020;THREE.RGBAFormat=1021;THREE.LuminanceFormat=1022;THREE.LuminanceAlphaFormat=1023;THREE.RGB_S3TC_DXT1_Format=2001;THREE.RGBA_S3TC_DXT1_Format=2002;
THREE.RGBA_S3TC_DXT3_Format=2003;THREE.RGBA_S3TC_DXT5_Format=2004;THREE.Color=function(a){void 0!==a&&this.set(a);return this};
THREE.extend(THREE.Color.prototype,{r:1,g:1,b:1,set:function(a){switch(typeof a){case "number":this.setHex(a);break;case "string":this.setStyle(a)}},setHex:function(a){a=Math.floor(a);this.r=(a>>16&255)/255;this.g=(a>>8&255)/255;this.b=(a&255)/255;return this},setRGB:function(a,b,c){this.r=a;this.g=b;this.b=c;return this},setHSV:function(a,b,c){console.log("DEPRECATED: Color's .setHSV() will be removed. Use .setHSL( h, s, l ) instead.");return this.setHSL(a,b*c/(1>(a=(2-b)*c)?a:2-a),a/2)},setHSL:function(a,
b,c){if(0===b)this.r=this.g=this.b=c;else{var d=function(a,b,c){0>c&&(c+=1);1<c&&(c-=1);return c<1/6?a+6*(b-a)*c:0.5>c?b:c<2/3?a+6*(b-a)*(2/3-c):a},b=0.5>=c?c*(1+b):c+b-c*b,c=2*c-b;this.r=d(c,b,a+1/3);this.g=d(c,b,a);this.b=d(c,b,a-1/3)}return this},setStyle:function(a){if(/^rgb\((\d+),(\d+),(\d+)\)$/i.test(a))return a=/^rgb\((\d+),(\d+),(\d+)\)$/i.exec(a),this.r=Math.min(255,parseInt(a[1],10))/255,this.g=Math.min(255,parseInt(a[2],10))/255,this.b=Math.min(255,parseInt(a[3],10))/255,this;if(/^rgb\((\d+)\%,(\d+)\%,(\d+)\%\)$/i.test(a))return a=
/^rgb\((\d+)\%,(\d+)\%,(\d+)\%\)$/i.exec(a),this.r=Math.min(100,parseInt(a[1],10))/100,this.g=Math.min(100,parseInt(a[2],10))/100,this.b=Math.min(100,parseInt(a[3],10))/100,this;if(/^\#([0-9a-f]{6})$/i.test(a))return a=/^\#([0-9a-f]{6})$/i.exec(a),this.setHex(parseInt(a[1],16)),this;if(/^\#([0-9a-f])([0-9a-f])([0-9a-f])$/i.test(a))return a=/^\#([0-9a-f])([0-9a-f])([0-9a-f])$/i.exec(a),this.setHex(parseInt(a[1]+a[1]+a[2]+a[2]+a[3]+a[3],16)),this;if(/^(\w+)$/i.test(a))return this.setHex(THREE.ColorKeywords[a]),
this},copy:function(a){this.r=a.r;this.g=a.g;this.b=a.b;return this},copyGammaToLinear:function(a){this.r=a.r*a.r;this.g=a.g*a.g;this.b=a.b*a.b;return this},copyLinearToGamma:function(a){this.r=Math.sqrt(a.r);this.g=Math.sqrt(a.g);this.b=Math.sqrt(a.b);return this},convertGammaToLinear:function(){var a=this.r,b=this.g,c=this.b;this.r=a*a;this.g=b*b;this.b=c*c;return this},convertLinearToGamma:function(){this.r=Math.sqrt(this.r);this.g=Math.sqrt(this.g);this.b=Math.sqrt(this.b);return this},getHex:function(){return 255*
this.r<<16^255*this.g<<8^255*this.b<<0},getHexString:function(){return("000000"+this.getHex().toString(16)).slice(-6)},getHSL:function(){var a={h:0,s:0,l:0};return function(){var b=this.r,c=this.g,d=this.b,f=Math.max(b,c,d),e=Math.min(b,c,d),g,h=(e+f)/2;if(e===f)e=g=0;else{var j=f-e,e=0.5>=h?j/(f+e):j/(2-f-e);switch(f){case b:g=(c-d)/j+(c<d?6:0);break;case c:g=(d-b)/j+2;break;case d:g=(b-c)/j+4}g/=6}a.h=g;a.s=e;a.l=h;return a}}(),getStyle:function(){return"rgb("+(255*this.r|0)+","+(255*this.g|0)+
","+(255*this.b|0)+")"},offsetHSL:function(a,b,c){var d=this.getHSL();d.h+=a;d.s+=b;d.l+=c;this.setHSL(d.h,d.s,d.l);return this},add:function(a){this.r+=a.r;this.g+=a.g;this.b+=a.b;return this},addColors:function(a,b){this.r=a.r+b.r;this.g=a.g+b.g;this.b=a.b+b.b;return this},addScalar:function(a){this.r+=a;this.g+=a;this.b+=a;return this},multiply:function(a){this.r*=a.r;this.g*=a.g;this.b*=a.b;return this},multiplyScalar:function(a){this.r*=a;this.g*=a;this.b*=a;return this},lerp:function(a,b){this.r+=
(a.r-this.r)*b;this.g+=(a.g-this.g)*b;this.b+=(a.b-this.b)*b;return this},clone:function(){return(new THREE.Color).setRGB(this.r,this.g,this.b)}});
THREE.ColorKeywords={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,
darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,
grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,
lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,
palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,
tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074};THREE.Quaternion=function(a,b,c,d){this.x=a||0;this.y=b||0;this.z=c||0;this.w=void 0!==d?d:1};
THREE.extend(THREE.Quaternion.prototype,{set:function(a,b,c,d){this.x=a;this.y=b;this.z=c;this.w=d;return this},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;this.w=a.w;return this},setFromEuler:function(a,b){var c=Math.cos(a.x/2),d=Math.cos(a.y/2),f=Math.cos(a.z/2),e=Math.sin(a.x/2),g=Math.sin(a.y/2),h=Math.sin(a.z/2);void 0===b||"XYZ"===b?(this.x=e*d*f+c*g*h,this.y=c*g*f-e*d*h,this.z=c*d*h+e*g*f,this.w=c*d*f-e*g*h):"YXZ"===b?(this.x=e*d*f+c*g*h,this.y=c*g*f-e*d*h,this.z=c*d*h-e*g*f,this.w=c*
d*f+e*g*h):"ZXY"===b?(this.x=e*d*f-c*g*h,this.y=c*g*f+e*d*h,this.z=c*d*h+e*g*f,this.w=c*d*f-e*g*h):"ZYX"===b?(this.x=e*d*f-c*g*h,this.y=c*g*f+e*d*h,this.z=c*d*h-e*g*f,this.w=c*d*f+e*g*h):"YZX"===b?(this.x=e*d*f+c*g*h,this.y=c*g*f+e*d*h,this.z=c*d*h-e*g*f,this.w=c*d*f-e*g*h):"XZY"===b&&(this.x=e*d*f-c*g*h,this.y=c*g*f-e*d*h,this.z=c*d*h+e*g*f,this.w=c*d*f+e*g*h);return this},setFromAxisAngle:function(a,b){var c=b/2,d=Math.sin(c);this.x=a.x*d;this.y=a.y*d;this.z=a.z*d;this.w=Math.cos(c);return this},
setFromRotationMatrix:function(a){var b=a.elements,c=b[0],a=b[4],d=b[8],f=b[1],e=b[5],g=b[9],h=b[2],j=b[6],b=b[10],l=c+e+b;0<l?(c=0.5/Math.sqrt(l+1),this.w=0.25/c,this.x=(j-g)*c,this.y=(d-h)*c,this.z=(f-a)*c):c>e&&c>b?(c=2*Math.sqrt(1+c-e-b),this.w=(j-g)/c,this.x=0.25*c,this.y=(a+f)/c,this.z=(d+h)/c):e>b?(c=2*Math.sqrt(1+e-c-b),this.w=(d-h)/c,this.x=(a+f)/c,this.y=0.25*c,this.z=(g+j)/c):(c=2*Math.sqrt(1+b-c-e),this.w=(f-a)/c,this.x=(d+h)/c,this.y=(g+j)/c,this.z=0.25*c);return this},inverse:function(){this.conjugate().normalize();
return this},conjugate:function(){this.x*=-1;this.y*=-1;this.z*=-1;return this},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},normalize:function(){var a=this.length();0===a?(this.z=this.y=this.x=0,this.w=1):(a=1/a,this.x*=a,this.y*=a,this.z*=a,this.w*=a);return this},multiply:function(a,b){return void 0!==b?(console.warn("DEPRECATED: Quaternion's .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),
this.multiplyQuaternions(a,b)):this.multiplyQuaternions(this,a)},multiplyQuaternions:function(a,b){var c=a.x,d=a.y,f=a.z,e=a.w,g=b.x,h=b.y,j=b.z,l=b.w;this.x=c*l+e*g+d*j-f*h;this.y=d*l+e*h+f*g-c*j;this.z=f*l+e*j+c*h-d*g;this.w=e*l-c*g-d*h-f*j;return this},multiplyVector3:function(a){console.warn("DEPRECATED: Quaternion's .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.");return a.applyQuaternion(this)},slerp:function(a,b){var c=this.x,d=this.y,f=this.z,
e=this.w,g=e*a.w+c*a.x+d*a.y+f*a.z;0>g?(this.w=-a.w,this.x=-a.x,this.y=-a.y,this.z=-a.z,g=-g):this.copy(a);if(1<=g)return this.w=e,this.x=c,this.y=d,this.z=f,this;var h=Math.acos(g),j=Math.sqrt(1-g*g);if(0.0010>Math.abs(j))return this.w=0.5*(e+this.w),this.x=0.5*(c+this.x),this.y=0.5*(d+this.y),this.z=0.5*(f+this.z),this;g=Math.sin((1-b)*h)/j;h=Math.sin(b*h)/j;this.w=e*g+this.w*h;this.x=c*g+this.x*h;this.y=d*g+this.y*h;this.z=f*g+this.z*h;return this},equals:function(a){return a.x===this.x&&a.y===
this.y&&a.z===this.z&&a.w===this.w},clone:function(){return new THREE.Quaternion(this.x,this.y,this.z,this.w)}});THREE.Quaternion.slerp=function(a,b,c,d){return c.copy(a).slerp(b,d)};THREE.Vector2=function(a,b){this.x=a||0;this.y=b||0};
THREE.extend(THREE.Vector2.prototype,{set:function(a,b){this.x=a;this.y=b;return this},setX:function(a){this.x=a;return this},setY:function(a){this.y=a;return this},setComponent:function(a,b){switch(a){case 0:this.x=b;break;case 1:this.y=b;break;default:throw Error("index is out of range: "+a);}},getComponent:function(a){switch(a){case 0:return this.x;case 1:return this.y;default:throw Error("index is out of range: "+a);}},copy:function(a){this.x=a.x;this.y=a.y;return this},add:function(a,b){if(void 0!==
b)return console.warn("DEPRECATED: Vector2's .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(a,b);this.x+=a.x;this.y+=a.y;return this},addVectors:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;return this},addScalar:function(a){this.x+=a;this.y+=a;return this},sub:function(a,b){if(void 0!==b)return console.warn("DEPRECATED: Vector2's .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(a,b);this.x-=a.x;this.y-=a.y;return this},
subVectors:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;return this},multiplyScalar:function(a){this.x*=a;this.y*=a;return this},divideScalar:function(a){0!==a?(this.x/=a,this.y/=a):this.set(0,0);return this},min:function(a){this.x>a.x&&(this.x=a.x);this.y>a.y&&(this.y=a.y);return this},max:function(a){this.x<a.x&&(this.x=a.x);this.y<a.y&&(this.y=a.y);return this},clamp:function(a,b){this.x<a.x?this.x=a.x:this.x>b.x&&(this.x=b.x);this.y<a.y?this.y=a.y:this.y>b.y&&(this.y=b.y);return this},negate:function(){return this.multiplyScalar(-1)},
dot:function(a){return this.x*a.x+this.y*a.y},lengthSq:function(){return this.x*this.x+this.y*this.y},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y)},normalize:function(){return this.divideScalar(this.length())},distanceTo:function(a){return Math.sqrt(this.distanceToSquared(a))},distanceToSquared:function(a){var b=this.x-a.x,a=this.y-a.y;return b*b+a*a},setLength:function(a){var b=this.length();0!==b&&a!==b&&this.multiplyScalar(a/b);return this},lerp:function(a,b){this.x+=(a.x-this.x)*
b;this.y+=(a.y-this.y)*b;return this},equals:function(a){return a.x===this.x&&a.y===this.y},toArray:function(){return[this.x,this.y]},clone:function(){return new THREE.Vector2(this.x,this.y)}});THREE.Vector3=function(a,b,c){this.x=a||0;this.y=b||0;this.z=c||0};
THREE.extend(THREE.Vector3.prototype,{set:function(a,b,c){this.x=a;this.y=b;this.z=c;return this},setX:function(a){this.x=a;return this},setY:function(a){this.y=a;return this},setZ:function(a){this.z=a;return this},setComponent:function(a,b){switch(a){case 0:this.x=b;break;case 1:this.y=b;break;case 2:this.z=b;break;default:throw Error("index is out of range: "+a);}},getComponent:function(a){switch(a){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw Error("index is out of range: "+
a);}},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;return this},add:function(a,b){if(void 0!==b)return console.warn("DEPRECATED: Vector3's .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(a,b);this.x+=a.x;this.y+=a.y;this.z+=a.z;return this},addScalar:function(a){this.x+=a;this.y+=a;this.z+=a;return this},addVectors:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;this.z=a.z+b.z;return this},sub:function(a,b){if(void 0!==b)return console.warn("DEPRECATED: Vector3's .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),
this.subVectors(a,b);this.x-=a.x;this.y-=a.y;this.z-=a.z;return this},subVectors:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;this.z=a.z-b.z;return this},multiply:function(a,b){if(void 0!==b)return console.warn("DEPRECATED: Vector3's .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(a,b);this.x*=a.x;this.y*=a.y;this.z*=a.z;return this},multiplyScalar:function(a){this.x*=a;this.y*=a;this.z*=a;return this},multiplyVectors:function(a,b){this.x=a.x*
b.x;this.y=a.y*b.y;this.z=a.z*b.z;return this},applyMatrix3:function(a){var b=this.x,c=this.y,d=this.z,a=a.elements;this.x=a[0]*b+a[3]*c+a[6]*d;this.y=a[1]*b+a[4]*c+a[7]*d;this.z=a[2]*b+a[5]*c+a[8]*d;return this},applyMatrix4:function(a){var b=this.x,c=this.y,d=this.z,a=a.elements;this.x=a[0]*b+a[4]*c+a[8]*d+a[12];this.y=a[1]*b+a[5]*c+a[9]*d+a[13];this.z=a[2]*b+a[6]*c+a[10]*d+a[14];return this},applyProjection:function(a){var b=this.x,c=this.y,d=this.z,a=a.elements,f=1/(a[3]*b+a[7]*c+a[11]*d+a[15]);
this.x=(a[0]*b+a[4]*c+a[8]*d+a[12])*f;this.y=(a[1]*b+a[5]*c+a[9]*d+a[13])*f;this.z=(a[2]*b+a[6]*c+a[10]*d+a[14])*f;return this},applyQuaternion:function(a){var b=this.x,c=this.y,d=this.z,f=a.x,e=a.y,g=a.z,a=a.w,h=a*b+e*d-g*c,j=a*c+g*b-f*d,l=a*d+f*c-e*b,b=-f*b-e*c-g*d;this.x=h*a+b*-f+j*-g-l*-e;this.y=j*a+b*-e+l*-f-h*-g;this.z=l*a+b*-g+h*-e-j*-f;return this},applyEuler:function(){var a=new THREE.Quaternion;return function(b,c){var d=a.setFromEuler(b,c);this.applyQuaternion(d);return this}}(),applyAxisAngle:function(){var a=
new THREE.Quaternion;return function(b,c){var d=a.setFromAxisAngle(b,c);this.applyQuaternion(d);return this}}(),transformDirection:function(a){var b=this.x,c=this.y,d=this.z,a=a.elements;this.x=a[0]*b+a[4]*c+a[8]*d;this.y=a[1]*b+a[5]*c+a[9]*d;this.z=a[2]*b+a[6]*c+a[10]*d;this.normalize();return this},divide:function(a){this.x/=a.x;this.y/=a.y;this.z/=a.z;return this},divideScalar:function(a){0!==a?(this.x/=a,this.y/=a,this.z/=a):this.z=this.y=this.x=0;return this},min:function(a){this.x>a.x&&(this.x=
a.x);this.y>a.y&&(this.y=a.y);this.z>a.z&&(this.z=a.z);return this},max:function(a){this.x<a.x&&(this.x=a.x);this.y<a.y&&(this.y=a.y);this.z<a.z&&(this.z=a.z);return this},clamp:function(a,b){this.x<a.x?this.x=a.x:this.x>b.x&&(this.x=b.x);this.y<a.y?this.y=a.y:this.y>b.y&&(this.y=b.y);this.z<a.z?this.z=a.z:this.z>b.z&&(this.z=b.z);return this},negate:function(){return this.multiplyScalar(-1)},dot:function(a){return this.x*a.x+this.y*a.y+this.z*a.z},lengthSq:function(){return this.x*this.x+this.y*
this.y+this.z*this.z},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)},normalize:function(){return this.divideScalar(this.length())},setLength:function(a){var b=this.length();0!==b&&a!==b&&this.multiplyScalar(a/b);return this},lerp:function(a,b){this.x+=(a.x-this.x)*b;this.y+=(a.y-this.y)*b;this.z+=(a.z-this.z)*b;return this},cross:function(a,b){if(void 0!==b)return console.warn("DEPRECATED: Vector3's .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),
this.crossVectors(a,b);var c=this.x,d=this.y,f=this.z;this.x=d*a.z-f*a.y;this.y=f*a.x-c*a.z;this.z=c*a.y-d*a.x;return this},crossVectors:function(a,b){this.x=a.y*b.z-a.z*b.y;this.y=a.z*b.x-a.x*b.z;this.z=a.x*b.y-a.y*b.x;return this},projectOnVector:function(){var a=new THREE.Vector3;return function(b){a.copy(b).normalize();b=this.dot(a);return this.copy(a).multiplyScalar(b)}}(),projectOnPlane:function(){var a=new THREE.Vector3;return function(b){a.copy(this).projectOnVector(b);return this.sub(a)}}(),
reflect:function(){var a=new THREE.Vector3;return function(b){a.copy(this).projectOnVector(b).multiplyScalar(2);return this.subVectors(a,this)}}(),angleTo:function(a){a=this.dot(a)/(this.length()*a.length());return Math.acos(THREE.Math.clamp(a,-1,1))},distanceTo:function(a){return Math.sqrt(this.distanceToSquared(a))},distanceToSquared:function(a){var b=this.x-a.x,c=this.y-a.y,a=this.z-a.z;return b*b+c*c+a*a},getPositionFromMatrix:function(a){this.x=a.elements[12];this.y=a.elements[13];this.z=a.elements[14];
return this},setEulerFromRotationMatrix:function(a,b){function c(a){return Math.min(Math.max(a,-1),1)}var d=a.elements,f=d[0],e=d[4],g=d[8],h=d[1],j=d[5],l=d[9],n=d[2],r=d[6],d=d[10];void 0===b||"XYZ"===b?(this.y=Math.asin(c(g)),0.99999>Math.abs(g)?(this.x=Math.atan2(-l,d),this.z=Math.atan2(-e,f)):(this.x=Math.atan2(r,j),this.z=0)):"YXZ"===b?(this.x=Math.asin(-c(l)),0.99999>Math.abs(l)?(this.y=Math.atan2(g,d),this.z=Math.atan2(h,j)):(this.y=Math.atan2(-n,f),this.z=0)):"ZXY"===b?(this.x=Math.asin(c(r)),
0.99999>Math.abs(r)?(this.y=Math.atan2(-n,d),this.z=Math.atan2(-e,j)):(this.y=0,this.z=Math.atan2(h,f))):"ZYX"===b?(this.y=Math.asin(-c(n)),0.99999>Math.abs(n)?(this.x=Math.atan2(r,d),this.z=Math.atan2(h,f)):(this.x=0,this.z=Math.atan2(-e,j))):"YZX"===b?(this.z=Math.asin(c(h)),0.99999>Math.abs(h)?(this.x=Math.atan2(-l,j),this.y=Math.atan2(-n,f)):(this.x=0,this.y=Math.atan2(g,d))):"XZY"===b&&(this.z=Math.asin(-c(e)),0.99999>Math.abs(e)?(this.x=Math.atan2(r,j),this.y=Math.atan2(g,f)):(this.x=Math.atan2(-l,
d),this.y=0));return this},setEulerFromQuaternion:function(a,b){function c(a){return Math.min(Math.max(a,-1),1)}var d=a.x*a.x,f=a.y*a.y,e=a.z*a.z,g=a.w*a.w;void 0===b||"XYZ"===b?(this.x=Math.atan2(2*(a.x*a.w-a.y*a.z),g-d-f+e),this.y=Math.asin(c(2*(a.x*a.z+a.y*a.w))),this.z=Math.atan2(2*(a.z*a.w-a.x*a.y),g+d-f-e)):"YXZ"===b?(this.x=Math.asin(c(2*(a.x*a.w-a.y*a.z))),this.y=Math.atan2(2*(a.x*a.z+a.y*a.w),g-d-f+e),this.z=Math.atan2(2*(a.x*a.y+a.z*a.w),g-d+f-e)):"ZXY"===b?(this.x=Math.asin(c(2*(a.x*a.w+
a.y*a.z))),this.y=Math.atan2(2*(a.y*a.w-a.z*a.x),g-d-f+e),this.z=Math.atan2(2*(a.z*a.w-a.x*a.y),g-d+f-e)):"ZYX"===b?(this.x=Math.atan2(2*(a.x*a.w+a.z*a.y),g-d-f+e),this.y=Math.asin(c(2*(a.y*a.w-a.x*a.z))),this.z=Math.atan2(2*(a.x*a.y+a.z*a.w),g+d-f-e)):"YZX"===b?(this.x=Math.atan2(2*(a.x*a.w-a.z*a.y),g-d+f-e),this.y=Math.atan2(2*(a.y*a.w-a.x*a.z),g+d-f-e),this.z=Math.asin(c(2*(a.x*a.y+a.z*a.w)))):"XZY"===b&&(this.x=Math.atan2(2*(a.x*a.w+a.y*a.z),g-d+f-e),this.y=Math.atan2(2*(a.x*a.z+a.y*a.w),g+d-
f-e),this.z=Math.asin(c(2*(a.z*a.w-a.x*a.y))));return this},getScaleFromMatrix:function(a){var b=this.set(a.elements[0],a.elements[1],a.elements[2]).length(),c=this.set(a.elements[4],a.elements[5],a.elements[6]).length(),a=this.set(a.elements[8],a.elements[9],a.elements[10]).length();this.x=b;this.y=c;this.z=a;return this},equals:function(a){return a.x===this.x&&a.y===this.y&&a.z===this.z},toArray:function(){return[this.x,this.y,this.z]},clone:function(){return new THREE.Vector3(this.x,this.y,this.z)}});
THREE.Vector4=function(a,b,c,d){this.x=a||0;this.y=b||0;this.z=c||0;this.w=void 0!==d?d:1};
THREE.extend(THREE.Vector4.prototype,{set:function(a,b,c,d){this.x=a;this.y=b;this.z=c;this.w=d;return this},setX:function(a){this.x=a;return this},setY:function(a){this.y=a;return this},setZ:function(a){this.z=a;return this},setW:function(a){this.w=a;return this},setComponent:function(a,b){switch(a){case 0:this.x=b;break;case 1:this.y=b;break;case 2:this.z=b;break;case 3:this.w=b;break;default:throw Error("index is out of range: "+a);}},getComponent:function(a){switch(a){case 0:return this.x;case 1:return this.y;
case 2:return this.z;case 3:return this.w;default:throw Error("index is out of range: "+a);}},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;this.w=void 0!==a.w?a.w:1;return this},add:function(a,b){if(void 0!==b)return console.warn("DEPRECATED: Vector4's .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(a,b);this.x+=a.x;this.y+=a.y;this.z+=a.z;this.w+=a.w;return this},addScalar:function(a){this.x+=a;this.y+=a;this.z+=a;this.w+=a;return this},addVectors:function(a,
b){this.x=a.x+b.x;this.y=a.y+b.y;this.z=a.z+b.z;this.w=a.w+b.w;return this},sub:function(a,b){if(void 0!==b)return console.warn("DEPRECATED: Vector4's .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(a,b);this.x-=a.x;this.y-=a.y;this.z-=a.z;this.w-=a.w;return this},subVectors:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;this.z=a.z-b.z;this.w=a.w-b.w;return this},multiplyScalar:function(a){this.x*=a;this.y*=a;this.z*=a;this.w*=a;return this},applyMatrix4:function(a){var b=
this.x,c=this.y,d=this.z,f=this.w,a=a.elements;this.x=a[0]*b+a[4]*c+a[8]*d+a[12]*f;this.y=a[1]*b+a[5]*c+a[9]*d+a[13]*f;this.z=a[2]*b+a[6]*c+a[10]*d+a[14]*f;this.w=a[3]*b+a[7]*c+a[11]*d+a[15]*f;return this},divideScalar:function(a){0!==a?(this.x/=a,this.y/=a,this.z/=a,this.w/=a):(this.z=this.y=this.x=0,this.w=1);return this},setAxisAngleFromQuaternion:function(a){this.w=2*Math.acos(a.w);var b=Math.sqrt(1-a.w*a.w);1E-4>b?(this.x=1,this.z=this.y=0):(this.x=a.x/b,this.y=a.y/b,this.z=a.z/b);return this},
setAxisAngleFromRotationMatrix:function(a){var b,c,d,a=a.elements,f=a[0];d=a[4];var e=a[8],g=a[1],h=a[5],j=a[9];c=a[2];b=a[6];var l=a[10];if(0.01>Math.abs(d-g)&&0.01>Math.abs(e-c)&&0.01>Math.abs(j-b)){if(0.1>Math.abs(d+g)&&0.1>Math.abs(e+c)&&0.1>Math.abs(j+b)&&0.1>Math.abs(f+h+l-3))return this.set(1,0,0,0),this;a=Math.PI;f=(f+1)/2;h=(h+1)/2;l=(l+1)/2;d=(d+g)/4;e=(e+c)/4;j=(j+b)/4;f>h&&f>l?0.01>f?(b=0,d=c=0.707106781):(b=Math.sqrt(f),c=d/b,d=e/b):h>l?0.01>h?(b=0.707106781,c=0,d=0.707106781):(c=Math.sqrt(h),
b=d/c,d=j/c):0.01>l?(c=b=0.707106781,d=0):(d=Math.sqrt(l),b=e/d,c=j/d);this.set(b,c,d,a);return this}a=Math.sqrt((b-j)*(b-j)+(e-c)*(e-c)+(g-d)*(g-d));0.0010>Math.abs(a)&&(a=1);this.x=(b-j)/a;this.y=(e-c)/a;this.z=(g-d)/a;this.w=Math.acos((f+h+l-1)/2);return this},min:function(a){this.x>a.x&&(this.x=a.x);this.y>a.y&&(this.y=a.y);this.z>a.z&&(this.z=a.z);this.w>a.w&&(this.w=a.w);return this},max:function(a){this.x<a.x&&(this.x=a.x);this.y<a.y&&(this.y=a.y);this.z<a.z&&(this.z=a.z);this.w<a.w&&(this.w=
a.w);return this},clamp:function(a,b){this.x<a.x?this.x=a.x:this.x>b.x&&(this.x=b.x);this.y<a.y?this.y=a.y:this.y>b.y&&(this.y=b.y);this.z<a.z?this.z=a.z:this.z>b.z&&(this.z=b.z);this.w<a.w?this.w=a.w:this.w>b.w&&(this.w=b.w);return this},negate:function(){return this.multiplyScalar(-1)},dot:function(a){return this.x*a.x+this.y*a.y+this.z*a.z+this.w*a.w},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+
this.z*this.z+this.w*this.w)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)},normalize:function(){return this.divideScalar(this.length())},setLength:function(a){var b=this.length();0!==b&&a!==b&&this.multiplyScalar(a/b);return this},lerp:function(a,b){this.x+=(a.x-this.x)*b;this.y+=(a.y-this.y)*b;this.z+=(a.z-this.z)*b;this.w+=(a.w-this.w)*b;return this},equals:function(a){return a.x===this.x&&a.y===this.y&&a.z===this.z&&a.w===this.w},toArray:function(){return[this.x,
this.y,this.z,this.w]},clone:function(){return new THREE.Vector4(this.x,this.y,this.z,this.w)}});THREE.Line3=function(a,b){this.start=void 0!==a?a:new THREE.Vector3;this.end=void 0!==b?b:new THREE.Vector3};
THREE.extend(THREE.Line3.prototype,{set:function(a,b){this.start.copy(a);this.end.copy(b);return this},copy:function(a){this.start.copy(a.start);this.end.copy(a.end);return this},center:function(a){return(a||new THREE.Vector3).addVectors(this.start,this.end).multiplyScalar(0.5)},delta:function(a){return(a||new THREE.Vector3).subVectors(this.end,this.start)},distanceSq:function(){return this.start.distanceToSquared(this.end)},distance:function(){return this.start.distanceTo(this.end)},at:function(a,
b){var c=b||new THREE.Vector3;return this.delta(c).multiplyScalar(a).add(this.start)},closestPointToPointParameter:function(){var a=new THREE.Vector3,b=new THREE.Vector3;return function(c,d){a.subVectors(c,this.start);b.subVectors(this.end,this.start);var f=b.dot(b),f=b.dot(a)/f;d&&(f=THREE.Math.clamp(f,0,1));return f}}(),closestPointToPoint:function(a,b,c){a=this.closestPointToPointParameter(a,b);c=c||new THREE.Vector3;return this.delta(c).multiplyScalar(a).add(this.start)},applyMatrix4:function(a){this.start.applyMatrix4(a);
this.end.applyMatrix4(a);return this},equals:function(a){return a.start.equals(this.start)&&a.end.equals(this.end)},clone:function(){return(new THREE.Line3).copy(this)}});THREE.Box2=function(a,b){this.min=void 0!==a?a:new THREE.Vector2(Infinity,Infinity);this.max=void 0!==b?b:new THREE.Vector2(-Infinity,-Infinity)};
THREE.extend(THREE.Box2.prototype,{set:function(a,b){this.min.copy(a);this.max.copy(b);return this},setFromPoints:function(a){if(0<a.length){var b=a[0];this.min.copy(b);this.max.copy(b);for(var c=1,d=a.length;c<d;c++)b=a[c],b.x<this.min.x?this.min.x=b.x:b.x>this.max.x&&(this.max.x=b.x),b.y<this.min.y?this.min.y=b.y:b.y>this.max.y&&(this.max.y=b.y)}else this.makeEmpty();return this},setFromCenterAndSize:function(){var a=new THREE.Vector2;return function(b,c){var d=a.copy(c).multiplyScalar(0.5);this.min.copy(b).sub(d);
this.max.copy(b).add(d);return this}}(),copy:function(a){this.min.copy(a.min);this.max.copy(a.max);return this},makeEmpty:function(){this.min.x=this.min.y=Infinity;this.max.x=this.max.y=-Infinity;return this},empty:function(){return this.max.x<this.min.x||this.max.y<this.min.y},center:function(a){return(a||new THREE.Vector2).addVectors(this.min,this.max).multiplyScalar(0.5)},size:function(a){return(a||new THREE.Vector2).subVectors(this.max,this.min)},expandByPoint:function(a){this.min.min(a);this.max.max(a);
return this},expandByVector:function(a){this.min.sub(a);this.max.add(a);return this},expandByScalar:function(a){this.min.addScalar(-a);this.max.addScalar(a);return this},containsPoint:function(a){return a.x<this.min.x||a.x>this.max.x||a.y<this.min.y||a.y>this.max.y?!1:!0},containsBox:function(a){return this.min.x<=a.min.x&&a.max.x<=this.max.x&&this.min.y<=a.min.y&&a.max.y<=this.max.y?!0:!1},getParameter:function(a){return new THREE.Vector2((a.x-this.min.x)/(this.max.x-this.min.x),(a.y-this.min.y)/
(this.max.y-this.min.y))},isIntersectionBox:function(a){return a.max.x<this.min.x||a.min.x>this.max.x||a.max.y<this.min.y||a.min.y>this.max.y?!1:!0},clampPoint:function(a,b){return(b||new THREE.Vector2).copy(a).clamp(this.min,this.max)},distanceToPoint:function(){var a=new THREE.Vector2;return function(b){return a.copy(b).clamp(this.min,this.max).sub(b).length()}}(),intersect:function(a){this.min.max(a.min);this.max.min(a.max);return this},union:function(a){this.min.min(a.min);this.max.max(a.max);
return this},translate:function(a){this.min.add(a);this.max.add(a);return this},equals:function(a){return a.min.equals(this.min)&&a.max.equals(this.max)},clone:function(){return(new THREE.Box2).copy(this)}});THREE.Box3=function(a,b){this.min=void 0!==a?a:new THREE.Vector3(Infinity,Infinity,Infinity);this.max=void 0!==b?b:new THREE.Vector3(-Infinity,-Infinity,-Infinity)};
THREE.extend(THREE.Box3.prototype,{set:function(a,b){this.min.copy(a);this.max.copy(b);return this},setFromPoints:function(a){if(0<a.length){var b=a[0];this.min.copy(b);this.max.copy(b);for(var c=1,d=a.length;c<d;c++)b=a[c],b.x<this.min.x?this.min.x=b.x:b.x>this.max.x&&(this.max.x=b.x),b.y<this.min.y?this.min.y=b.y:b.y>this.max.y&&(this.max.y=b.y),b.z<this.min.z?this.min.z=b.z:b.z>this.max.z&&(this.max.z=b.z)}else this.makeEmpty();return this},setFromCenterAndSize:function(){var a=new THREE.Vector3;
return function(b,c){var d=a.copy(c).multiplyScalar(0.5);this.min.copy(b).sub(d);this.max.copy(b).add(d);return this}}(),copy:function(a){this.min.copy(a.min);this.max.copy(a.max);return this},makeEmpty:function(){this.min.x=this.min.y=this.min.z=Infinity;this.max.x=this.max.y=this.max.z=-Infinity;return this},empty:function(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z},center:function(a){return(a||new THREE.Vector3).addVectors(this.min,this.max).multiplyScalar(0.5)},
size:function(a){return(a||new THREE.Vector3).subVectors(this.max,this.min)},expandByPoint:function(a){this.min.min(a);this.max.max(a);return this},expandByVector:function(a){this.min.sub(a);this.max.add(a);return this},expandByScalar:function(a){this.min.addScalar(-a);this.max.addScalar(a);return this},containsPoint:function(a){return a.x<this.min.x||a.x>this.max.x||a.y<this.min.y||a.y>this.max.y||a.z<this.min.z||a.z>this.max.z?!1:!0},containsBox:function(a){return this.min.x<=a.min.x&&a.max.x<=
this.max.x&&this.min.y<=a.min.y&&a.max.y<=this.max.y&&this.min.z<=a.min.z&&a.max.z<=this.max.z?!0:!1},getParameter:function(a){return new THREE.Vector3((a.x-this.min.x)/(this.max.x-this.min.x),(a.y-this.min.y)/(this.max.y-this.min.y),(a.z-this.min.z)/(this.max.z-this.min.z))},isIntersectionBox:function(a){return a.max.x<this.min.x||a.min.x>this.max.x||a.max.y<this.min.y||a.min.y>this.max.y||a.max.z<this.min.z||a.min.z>this.max.z?!1:!0},clampPoint:function(a,b){return(b||new THREE.Vector3).copy(a).clamp(this.min,
this.max)},distanceToPoint:function(){var a=new THREE.Vector3;return function(b){return a.copy(b).clamp(this.min,this.max).sub(b).length()}}(),getBoundingSphere:function(){var a=new THREE.Vector3;return function(b){b=b||new THREE.Sphere;b.center=this.center();b.radius=0.5*this.size(a).length();return b}}(),intersect:function(a){this.min.max(a.min);this.max.min(a.max);return this},union:function(a){this.min.min(a.min);this.max.max(a.max);return this},applyMatrix4:function(){var a=[new THREE.Vector3,
new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3];return function(b){a[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(b);a[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(b);a[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(b);a[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(b);a[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(b);a[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(b);a[6].set(this.max.x,
this.max.y,this.min.z).applyMatrix4(b);a[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(b);this.makeEmpty();this.setFromPoints(a);return this}}(),translate:function(a){this.min.add(a);this.max.add(a);return this},equals:function(a){return a.min.equals(this.min)&&a.max.equals(this.max)},clone:function(){return(new THREE.Box3).copy(this)}});
THREE.Matrix3=function(a,b,c,d,f,e,g,h,j){this.elements=new Float32Array(9);this.set(void 0!==a?a:1,b||0,c||0,d||0,void 0!==f?f:1,e||0,g||0,h||0,void 0!==j?j:1)};
THREE.extend(THREE.Matrix3.prototype,{set:function(a,b,c,d,f,e,g,h,j){var l=this.elements;l[0]=a;l[3]=b;l[6]=c;l[1]=d;l[4]=f;l[7]=e;l[2]=g;l[5]=h;l[8]=j;return this},identity:function(){this.set(1,0,0,0,1,0,0,0,1);return this},copy:function(a){a=a.elements;this.set(a[0],a[3],a[6],a[1],a[4],a[7],a[2],a[5],a[8]);return this},multiplyVector3:function(a){console.warn("DEPRECATED: Matrix3's .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.");return a.applyMatrix3(this)},multiplyVector3Array:function(){var a=
new THREE.Vector3;return function(b){for(var c=0,d=b.length;c<d;c+=3)a.x=b[c],a.y=b[c+1],a.z=b[c+2],a.applyMatrix3(this),b[c]=a.x,b[c+1]=a.y,b[c+2]=a.z;return b}}(),multiplyScalar:function(a){var b=this.elements;b[0]*=a;b[3]*=a;b[6]*=a;b[1]*=a;b[4]*=a;b[7]*=a;b[2]*=a;b[5]*=a;b[8]*=a;return this},determinant:function(){var a=this.elements,b=a[0],c=a[1],d=a[2],f=a[3],e=a[4],g=a[5],h=a[6],j=a[7],a=a[8];return b*e*a-b*g*j-c*f*a+c*g*h+d*f*j-d*e*h},getInverse:function(a,b){var c=a.elements,d=this.elements;
d[0]=c[10]*c[5]-c[6]*c[9];d[1]=-c[10]*c[1]+c[2]*c[9];d[2]=c[6]*c[1]-c[2]*c[5];d[3]=-c[10]*c[4]+c[6]*c[8];d[4]=c[10]*c[0]-c[2]*c[8];d[5]=-c[6]*c[0]+c[2]*c[4];d[6]=c[9]*c[4]-c[5]*c[8];d[7]=-c[9]*c[0]+c[1]*c[8];d[8]=c[5]*c[0]-c[1]*c[4];c=c[0]*d[0]+c[1]*d[3]+c[2]*d[6];if(0===c){if(b)throw Error("Matrix3.getInverse(): can't invert matrix, determinant is 0");console.warn("Matrix3.getInverse(): can't invert matrix, determinant is 0");this.identity();return this}this.multiplyScalar(1/c);return this},transpose:function(){var a,
b=this.elements;a=b[1];b[1]=b[3];b[3]=a;a=b[2];b[2]=b[6];b[6]=a;a=b[5];b[5]=b[7];b[7]=a;return this},getNormalMatrix:function(a){this.getInverse(a).transpose();return this},transposeIntoArray:function(a){var b=this.elements;a[0]=b[0];a[1]=b[3];a[2]=b[6];a[3]=b[1];a[4]=b[4];a[5]=b[7];a[6]=b[2];a[7]=b[5];a[8]=b[8];return this},clone:function(){var a=this.elements;return new THREE.Matrix3(a[0],a[3],a[6],a[1],a[4],a[7],a[2],a[5],a[8])}});
THREE.Matrix4=function(a,b,c,d,f,e,g,h,j,l,n,r,p,s,t,m){var v=this.elements=new Float32Array(16);v[0]=void 0!==a?a:1;v[4]=b||0;v[8]=c||0;v[12]=d||0;v[1]=f||0;v[5]=void 0!==e?e:1;v[9]=g||0;v[13]=h||0;v[2]=j||0;v[6]=l||0;v[10]=void 0!==n?n:1;v[14]=r||0;v[3]=p||0;v[7]=s||0;v[11]=t||0;v[15]=void 0!==m?m:1};
THREE.extend(THREE.Matrix4.prototype,{set:function(a,b,c,d,f,e,g,h,j,l,n,r,p,s,t,m){var v=this.elements;v[0]=a;v[4]=b;v[8]=c;v[12]=d;v[1]=f;v[5]=e;v[9]=g;v[13]=h;v[2]=j;v[6]=l;v[10]=n;v[14]=r;v[3]=p;v[7]=s;v[11]=t;v[15]=m;return this},identity:function(){this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1);return this},copy:function(a){a=a.elements;this.set(a[0],a[4],a[8],a[12],a[1],a[5],a[9],a[13],a[2],a[6],a[10],a[14],a[3],a[7],a[11],a[15]);return this},setRotationFromEuler:function(a,b){var c=this.elements,
d=a.x,f=a.y,e=a.z,g=Math.cos(d),d=Math.sin(d),h=Math.cos(f),f=Math.sin(f),j=Math.cos(e),e=Math.sin(e);if(void 0===b||"XYZ"===b){var l=g*j,n=g*e,r=d*j,p=d*e;c[0]=h*j;c[4]=-h*e;c[8]=f;c[1]=n+r*f;c[5]=l-p*f;c[9]=-d*h;c[2]=p-l*f;c[6]=r+n*f;c[10]=g*h}else"YXZ"===b?(l=h*j,n=h*e,r=f*j,p=f*e,c[0]=l+p*d,c[4]=r*d-n,c[8]=g*f,c[1]=g*e,c[5]=g*j,c[9]=-d,c[2]=n*d-r,c[6]=p+l*d,c[10]=g*h):"ZXY"===b?(l=h*j,n=h*e,r=f*j,p=f*e,c[0]=l-p*d,c[4]=-g*e,c[8]=r+n*d,c[1]=n+r*d,c[5]=g*j,c[9]=p-l*d,c[2]=-g*f,c[6]=d,c[10]=g*h):
"ZYX"===b?(l=g*j,n=g*e,r=d*j,p=d*e,c[0]=h*j,c[4]=r*f-n,c[8]=l*f+p,c[1]=h*e,c[5]=p*f+l,c[9]=n*f-r,c[2]=-f,c[6]=d*h,c[10]=g*h):"YZX"===b?(l=g*h,n=g*f,r=d*h,p=d*f,c[0]=h*j,c[4]=p-l*e,c[8]=r*e+n,c[1]=e,c[5]=g*j,c[9]=-d*j,c[2]=-f*j,c[6]=n*e+r,c[10]=l-p*e):"XZY"===b&&(l=g*h,n=g*f,r=d*h,p=d*f,c[0]=h*j,c[4]=-e,c[8]=f*j,c[1]=l*e+p,c[5]=g*j,c[9]=n*e-r,c[2]=r*e-n,c[6]=d*j,c[10]=p*e+l);return this},setRotationFromQuaternion:function(a){var b=this.elements,c=a.x,d=a.y,f=a.z,e=a.w,g=c+c,h=d+d,j=f+f,a=c*g,l=c*h,
c=c*j,n=d*h,d=d*j,f=f*j,g=e*g,h=e*h,e=e*j;b[0]=1-(n+f);b[4]=l-e;b[8]=c+h;b[1]=l+e;b[5]=1-(a+f);b[9]=d-g;b[2]=c-h;b[6]=d+g;b[10]=1-(a+n);return this},lookAt:function(){var a=new THREE.Vector3,b=new THREE.Vector3,c=new THREE.Vector3;return function(d,f,e){var g=this.elements;c.subVectors(d,f).normalize();0===c.length()&&(c.z=1);a.crossVectors(e,c).normalize();0===a.length()&&(c.x+=1E-4,a.crossVectors(e,c).normalize());b.crossVectors(c,a);g[0]=a.x;g[4]=b.x;g[8]=c.x;g[1]=a.y;g[5]=b.y;g[9]=c.y;g[2]=a.z;
g[6]=b.z;g[10]=c.z;return this}}(),multiply:function(a,b){return void 0!==b?(console.warn("DEPRECATED: Matrix4's .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(a,b)):this.multiplyMatrices(this,a)},multiplyMatrices:function(a,b){var c=a.elements,d=b.elements,f=this.elements,e=c[0],g=c[4],h=c[8],j=c[12],l=c[1],n=c[5],r=c[9],p=c[13],s=c[2],t=c[6],m=c[10],v=c[14],B=c[3],q=c[7],A=c[11],c=c[15],u=d[0],x=d[4],I=d[8],C=d[12],z=d[1],J=d[5],K=d[9],
G=d[13],H=d[2],D=d[6],X=d[10],F=d[14],L=d[3],M=d[7],V=d[11],d=d[15];f[0]=e*u+g*z+h*H+j*L;f[4]=e*x+g*J+h*D+j*M;f[8]=e*I+g*K+h*X+j*V;f[12]=e*C+g*G+h*F+j*d;f[1]=l*u+n*z+r*H+p*L;f[5]=l*x+n*J+r*D+p*M;f[9]=l*I+n*K+r*X+p*V;f[13]=l*C+n*G+r*F+p*d;f[2]=s*u+t*z+m*H+v*L;f[6]=s*x+t*J+m*D+v*M;f[10]=s*I+t*K+m*X+v*V;f[14]=s*C+t*G+m*F+v*d;f[3]=B*u+q*z+A*H+c*L;f[7]=B*x+q*J+A*D+c*M;f[11]=B*I+q*K+A*X+c*V;f[15]=B*C+q*G+A*F+c*d;return this},multiplyToArray:function(a,b,c){var d=this.elements;this.multiplyMatrices(a,b);
c[0]=d[0];c[1]=d[1];c[2]=d[2];c[3]=d[3];c[4]=d[4];c[5]=d[5];c[6]=d[6];c[7]=d[7];c[8]=d[8];c[9]=d[9];c[10]=d[10];c[11]=d[11];c[12]=d[12];c[13]=d[13];c[14]=d[14];c[15]=d[15];return this},multiplyScalar:function(a){var b=this.elements;b[0]*=a;b[4]*=a;b[8]*=a;b[12]*=a;b[1]*=a;b[5]*=a;b[9]*=a;b[13]*=a;b[2]*=a;b[6]*=a;b[10]*=a;b[14]*=a;b[3]*=a;b[7]*=a;b[11]*=a;b[15]*=a;return this},multiplyVector3:function(a){console.warn("DEPRECATED: Matrix4's .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) or vector.applyProjection( matrix ) instead.");
return a.applyProjection(this)},multiplyVector4:function(a){console.warn("DEPRECATED: Matrix4's .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.");return a.applyMatrix4(this)},multiplyVector3Array:function(){var a=new THREE.Vector3;return function(b){for(var c=0,d=b.length;c<d;c+=3)a.x=b[c],a.y=b[c+1],a.z=b[c+2],a.applyProjection(this),b[c]=a.x,b[c+1]=a.y,b[c+2]=a.z;return b}}(),rotateAxis:function(a){var b=this.elements,c=a.x,d=a.y,f=a.z;a.x=c*b[0]+d*b[4]+f*b[8];a.y=
c*b[1]+d*b[5]+f*b[9];a.z=c*b[2]+d*b[6]+f*b[10];a.normalize();return a},crossVector:function(a){var b=this.elements,c=new THREE.Vector4;c.x=b[0]*a.x+b[4]*a.y+b[8]*a.z+b[12]*a.w;c.y=b[1]*a.x+b[5]*a.y+b[9]*a.z+b[13]*a.w;c.z=b[2]*a.x+b[6]*a.y+b[10]*a.z+b[14]*a.w;c.w=a.w?b[3]*a.x+b[7]*a.y+b[11]*a.z+b[15]*a.w:1;return c},determinant:function(){var a=this.elements,b=a[0],c=a[4],d=a[8],f=a[12],e=a[1],g=a[5],h=a[9],j=a[13],l=a[2],n=a[6],r=a[10],p=a[14];return a[3]*(+f*h*n-d*j*n-f*g*r+c*j*r+d*g*p-c*h*p)+a[7]*
(+b*h*p-b*j*r+f*e*r-d*e*p+d*j*l-f*h*l)+a[11]*(+b*j*n-b*g*p-f*e*n+c*e*p+f*g*l-c*j*l)+a[15]*(-d*g*l-b*h*n+b*g*r+d*e*n-c*e*r+c*h*l)},transpose:function(){var a=this.elements,b;b=a[1];a[1]=a[4];a[4]=b;b=a[2];a[2]=a[8];a[8]=b;b=a[6];a[6]=a[9];a[9]=b;b=a[3];a[3]=a[12];a[12]=b;b=a[7];a[7]=a[13];a[13]=b;b=a[11];a[11]=a[14];a[14]=b;return this},flattenToArray:function(a){var b=this.elements;a[0]=b[0];a[1]=b[1];a[2]=b[2];a[3]=b[3];a[4]=b[4];a[5]=b[5];a[6]=b[6];a[7]=b[7];a[8]=b[8];a[9]=b[9];a[10]=b[10];a[11]=
b[11];a[12]=b[12];a[13]=b[13];a[14]=b[14];a[15]=b[15];return a},flattenToArrayOffset:function(a,b){var c=this.elements;a[b]=c[0];a[b+1]=c[1];a[b+2]=c[2];a[b+3]=c[3];a[b+4]=c[4];a[b+5]=c[5];a[b+6]=c[6];a[b+7]=c[7];a[b+8]=c[8];a[b+9]=c[9];a[b+10]=c[10];a[b+11]=c[11];a[b+12]=c[12];a[b+13]=c[13];a[b+14]=c[14];a[b+15]=c[15];return a},getPosition:function(){var a=new THREE.Vector3;return function(){console.warn("DEPRECATED: Matrix4's .getPosition() has been removed. Use Vector3.getPositionFromMatrix( matrix ) instead.");
var b=this.elements;return a.set(b[12],b[13],b[14])}}(),setPosition:function(a){var b=this.elements;b[12]=a.x;b[13]=a.y;b[14]=a.z;return this},getInverse:function(a,b){var c=this.elements,d=a.elements,f=d[0],e=d[4],g=d[8],h=d[12],j=d[1],l=d[5],n=d[9],r=d[13],p=d[2],s=d[6],t=d[10],m=d[14],v=d[3],B=d[7],q=d[11],A=d[15];c[0]=n*m*B-r*t*B+r*s*q-l*m*q-n*s*A+l*t*A;c[4]=h*t*B-g*m*B-h*s*q+e*m*q+g*s*A-e*t*A;c[8]=g*r*B-h*n*B+h*l*q-e*r*q-g*l*A+e*n*A;c[12]=h*n*s-g*r*s-h*l*t+e*r*t+g*l*m-e*n*m;c[1]=r*t*v-n*m*v-
r*p*q+j*m*q+n*p*A-j*t*A;c[5]=g*m*v-h*t*v+h*p*q-f*m*q-g*p*A+f*t*A;c[9]=h*n*v-g*r*v-h*j*q+f*r*q+g*j*A-f*n*A;c[13]=g*r*p-h*n*p+h*j*t-f*r*t-g*j*m+f*n*m;c[2]=l*m*v-r*s*v+r*p*B-j*m*B-l*p*A+j*s*A;c[6]=h*s*v-e*m*v-h*p*B+f*m*B+e*p*A-f*s*A;c[10]=e*r*v-h*l*v+h*j*B-f*r*B-e*j*A+f*l*A;c[14]=h*l*p-e*r*p-h*j*s+f*r*s+e*j*m-f*l*m;c[3]=n*s*v-l*t*v-n*p*B+j*t*B+l*p*q-j*s*q;c[7]=e*t*v-g*s*v+g*p*B-f*t*B-e*p*q+f*s*q;c[11]=g*l*v-e*n*v-g*j*B+f*n*B+e*j*q-f*l*q;c[15]=e*n*p-g*l*p+g*j*s-f*n*s-e*j*t+f*l*t;c=d[0]*c[0]+d[1]*c[4]+
d[2]*c[8]+d[3]*c[12];if(0==c){if(b)throw Error("Matrix4.getInverse(): can't invert matrix, determinant is 0");console.warn("Matrix4.getInverse(): can't invert matrix, determinant is 0");this.identity();return this}this.multiplyScalar(1/c);return this},compose:function(){var a=new THREE.Matrix4,b=new THREE.Matrix4;return function(c,d,f){var e=this.elements;a.identity();a.setRotationFromQuaternion(d);b.makeScale(f.x,f.y,f.z);this.multiplyMatrices(a,b);e[12]=c.x;e[13]=c.y;e[14]=c.z;return this}}(),decompose:function(){var a=
new THREE.Vector3,b=new THREE.Vector3,c=new THREE.Vector3,d=new THREE.Matrix4;return function(f,e,g){var h=this.elements;a.set(h[0],h[1],h[2]);b.set(h[4],h[5],h[6]);c.set(h[8],h[9],h[10]);f=f instanceof THREE.Vector3?f:new THREE.Vector3;e=e instanceof THREE.Quaternion?e:new THREE.Quaternion;g=g instanceof THREE.Vector3?g:new THREE.Vector3;g.x=a.length();g.y=b.length();g.z=c.length();f.x=h[12];f.y=h[13];f.z=h[14];d.copy(this);d.elements[0]/=g.x;d.elements[1]/=g.x;d.elements[2]/=g.x;d.elements[4]/=
g.y;d.elements[5]/=g.y;d.elements[6]/=g.y;d.elements[8]/=g.z;d.elements[9]/=g.z;d.elements[10]/=g.z;e.setFromRotationMatrix(d);return[f,e,g]}}(),extractPosition:function(a){var b=this.elements,a=a.elements;b[12]=a[12];b[13]=a[13];b[14]=a[14];return this},extractRotation:function(){var a=new THREE.Vector3;return function(b){var c=this.elements,b=b.elements,d=1/a.set(b[0],b[1],b[2]).length(),f=1/a.set(b[4],b[5],b[6]).length(),e=1/a.set(b[8],b[9],b[10]).length();c[0]=b[0]*d;c[1]=b[1]*d;c[2]=b[2]*d;c[4]=
b[4]*f;c[5]=b[5]*f;c[6]=b[6]*f;c[8]=b[8]*e;c[9]=b[9]*e;c[10]=b[10]*e;return this}}(),translate:function(a){var b=this.elements,c=a.x,d=a.y,a=a.z;b[12]=b[0]*c+b[4]*d+b[8]*a+b[12];b[13]=b[1]*c+b[5]*d+b[9]*a+b[13];b[14]=b[2]*c+b[6]*d+b[10]*a+b[14];b[15]=b[3]*c+b[7]*d+b[11]*a+b[15];return this},rotateX:function(a){var b=this.elements,c=b[4],d=b[5],f=b[6],e=b[7],g=b[8],h=b[9],j=b[10],l=b[11],n=Math.cos(a),a=Math.sin(a);b[4]=n*c+a*g;b[5]=n*d+a*h;b[6]=n*f+a*j;b[7]=n*e+a*l;b[8]=n*g-a*c;b[9]=n*h-a*d;b[10]=
n*j-a*f;b[11]=n*l-a*e;return this},rotateY:function(a){var b=this.elements,c=b[0],d=b[1],f=b[2],e=b[3],g=b[8],h=b[9],j=b[10],l=b[11],n=Math.cos(a),a=Math.sin(a);b[0]=n*c-a*g;b[1]=n*d-a*h;b[2]=n*f-a*j;b[3]=n*e-a*l;b[8]=n*g+a*c;b[9]=n*h+a*d;b[10]=n*j+a*f;b[11]=n*l+a*e;return this},rotateZ:function(a){var b=this.elements,c=b[0],d=b[1],f=b[2],e=b[3],g=b[4],h=b[5],j=b[6],l=b[7],n=Math.cos(a),a=Math.sin(a);b[0]=n*c+a*g;b[1]=n*d+a*h;b[2]=n*f+a*j;b[3]=n*e+a*l;b[4]=n*g-a*c;b[5]=n*h-a*d;b[6]=n*j-a*f;b[7]=n*
l-a*e;return this},rotateByAxis:function(a,b){var c=this.elements;if(1===a.x&&0===a.y&&0===a.z)return this.rotateX(b);if(0===a.x&&1===a.y&&0===a.z)return this.rotateY(b);if(0===a.x&&0===a.y&&1===a.z)return this.rotateZ(b);var d=a.x,f=a.y,e=a.z,g=Math.sqrt(d*d+f*f+e*e),d=d/g,f=f/g,e=e/g,g=d*d,h=f*f,j=e*e,l=Math.cos(b),n=Math.sin(b),r=1-l,p=d*f*r,s=d*e*r,r=f*e*r,d=d*n,t=f*n,n=e*n,e=g+(1-g)*l,g=p+n,f=s-t,p=p-n,h=h+(1-h)*l,n=r+d,s=s+t,r=r-d,j=j+(1-j)*l,l=c[0],d=c[1],t=c[2],m=c[3],v=c[4],B=c[5],q=c[6],
A=c[7],u=c[8],x=c[9],I=c[10],C=c[11];c[0]=e*l+g*v+f*u;c[1]=e*d+g*B+f*x;c[2]=e*t+g*q+f*I;c[3]=e*m+g*A+f*C;c[4]=p*l+h*v+n*u;c[5]=p*d+h*B+n*x;c[6]=p*t+h*q+n*I;c[7]=p*m+h*A+n*C;c[8]=s*l+r*v+j*u;c[9]=s*d+r*B+j*x;c[10]=s*t+r*q+j*I;c[11]=s*m+r*A+j*C;return this},scale:function(a){var b=this.elements,c=a.x,d=a.y,a=a.z;b[0]*=c;b[4]*=d;b[8]*=a;b[1]*=c;b[5]*=d;b[9]*=a;b[2]*=c;b[6]*=d;b[10]*=a;b[3]*=c;b[7]*=d;b[11]*=a;return this},getMaxScaleOnAxis:function(){var a=this.elements;return Math.sqrt(Math.max(a[0]*
a[0]+a[1]*a[1]+a[2]*a[2],Math.max(a[4]*a[4]+a[5]*a[5]+a[6]*a[6],a[8]*a[8]+a[9]*a[9]+a[10]*a[10])))},makeTranslation:function(a,b,c){this.set(1,0,0,a,0,1,0,b,0,0,1,c,0,0,0,1);return this},makeRotationX:function(a){var b=Math.cos(a),a=Math.sin(a);this.set(1,0,0,0,0,b,-a,0,0,a,b,0,0,0,0,1);return this},makeRotationY:function(a){var b=Math.cos(a),a=Math.sin(a);this.set(b,0,a,0,0,1,0,0,-a,0,b,0,0,0,0,1);return this},makeRotationZ:function(a){var b=Math.cos(a),a=Math.sin(a);this.set(b,-a,0,0,a,b,0,0,0,
0,1,0,0,0,0,1);return this},makeRotationAxis:function(a,b){var c=Math.cos(b),d=Math.sin(b),f=1-c,e=a.x,g=a.y,h=a.z,j=f*e,l=f*g;this.set(j*e+c,j*g-d*h,j*h+d*g,0,j*g+d*h,l*g+c,l*h-d*e,0,j*h-d*g,l*h+d*e,f*h*h+c,0,0,0,0,1);return this},makeScale:function(a,b,c){this.set(a,0,0,0,0,b,0,0,0,0,c,0,0,0,0,1);return this},makeFrustum:function(a,b,c,d,f,e){var g=this.elements;g[0]=2*f/(b-a);g[4]=0;g[8]=(b+a)/(b-a);g[12]=0;g[1]=0;g[5]=2*f/(d-c);g[9]=(d+c)/(d-c);g[13]=0;g[2]=0;g[6]=0;g[10]=-(e+f)/(e-f);g[14]=-2*
e*f/(e-f);g[3]=0;g[7]=0;g[11]=-1;g[15]=0;return this},makePerspective:function(a,b,c,d){var a=c*Math.tan(THREE.Math.degToRad(0.5*a)),f=-a;return this.makeFrustum(f*b,a*b,f,a,c,d)},makeOrthographic:function(a,b,c,d,f,e){var g=this.elements,h=b-a,j=c-d,l=e-f;g[0]=2/h;g[4]=0;g[8]=0;g[12]=-((b+a)/h);g[1]=0;g[5]=2/j;g[9]=0;g[13]=-((c+d)/j);g[2]=0;g[6]=0;g[10]=-2/l;g[14]=-((e+f)/l);g[3]=0;g[7]=0;g[11]=0;g[15]=1;return this},clone:function(){var a=this.elements;return new THREE.Matrix4(a[0],a[4],a[8],a[12],
a[1],a[5],a[9],a[13],a[2],a[6],a[10],a[14],a[3],a[7],a[11],a[15])}});THREE.Ray=function(a,b){this.origin=void 0!==a?a:new THREE.Vector3;this.direction=void 0!==b?b:new THREE.Vector3};
THREE.extend(THREE.Ray.prototype,{set:function(a,b){this.origin.copy(a);this.direction.copy(b);return this},copy:function(a){this.origin.copy(a.origin);this.direction.copy(a.direction);return this},at:function(a,b){return(b||new THREE.Vector3).copy(this.direction).multiplyScalar(a).add(this.origin)},recast:function(){var a=new THREE.Vector3;return function(b){this.origin.copy(this.at(b,a));return this}}(),closestPointToPoint:function(a,b){var c=b||new THREE.Vector3;c.subVectors(a,this.origin);var d=
c.dot(this.direction);return c.copy(this.direction).multiplyScalar(d).add(this.origin)},distanceToPoint:function(){var a=new THREE.Vector3;return function(b){var c=a.subVectors(b,this.origin).dot(this.direction);a.copy(this.direction).multiplyScalar(c).add(this.origin);return a.distanceTo(b)}}(),isIntersectionSphere:function(a){return this.distanceToPoint(a.center)<=a.radius},isIntersectionPlane:function(a){return 0!=a.normal.dot(this.direction)||0==a.distanceToPoint(this.origin)?!0:!1},distanceToPlane:function(a){var b=
a.normal.dot(this.direction);if(0==b){if(0==a.distanceToPoint(this.origin))return 0}else return-(this.origin.dot(a.normal)+a.constant)/b},intersectPlane:function(a,b){var c=this.distanceToPlane(a);return void 0===c?void 0:this.at(c,b)},applyMatrix4:function(a){this.direction.add(this.origin).applyMatrix4(a);this.origin.applyMatrix4(a);this.direction.sub(this.origin);return this},equals:function(a){return a.origin.equals(this.origin)&&a.direction.equals(this.direction)},clone:function(){return(new THREE.Ray).copy(this)}});
THREE.Sphere=function(a,b){this.center=void 0!==a?a:new THREE.Vector3;this.radius=void 0!==b?b:0};
THREE.extend(THREE.Sphere.prototype,{set:function(a,b){this.center.copy(a);this.radius=b;return this},setFromCenterAndPoints:function(a,b){for(var c=0,d=0,f=b.length;d<f;d++)var e=a.distanceToSquared(b[d]),c=Math.max(c,e);this.center=a;this.radius=Math.sqrt(c);return this},copy:function(a){this.center.copy(a.center);this.radius=a.radius;return this},empty:function(){return 0>=this.radius},containsPoint:function(a){return a.distanceToSquared(this.center)<=this.radius*this.radius},distanceToPoint:function(a){return a.distanceTo(this.center)-
this.radius},intersectsSphere:function(a){var b=this.radius+a.radius;return a.center.distanceToSquared(this.center)<=b*b},clampPoint:function(a,b){var c=this.center.distanceToSquared(a),d=b||new THREE.Vector3;d.copy(a);c>this.radius*this.radius&&(d.sub(this.center).normalize(),d.multiplyScalar(this.radius).add(this.center));return d},getBoundingBox:function(a){a=a||new THREE.Box3;a.set(this.center,this.center);a.expandByScalar(this.radius);return a},applyMatrix4:function(a){this.center.applyMatrix4(a);
this.radius*=a.getMaxScaleOnAxis();return this},translate:function(a){this.center.add(a);return this},equals:function(a){return a.center.equals(this.center)&&a.radius===this.radius},clone:function(){return(new THREE.Sphere).copy(this)}});THREE.Frustum=function(a,b,c,d,f,e){this.planes=[void 0!==a?a:new THREE.Plane,void 0!==b?b:new THREE.Plane,void 0!==c?c:new THREE.Plane,void 0!==d?d:new THREE.Plane,void 0!==f?f:new THREE.Plane,void 0!==e?e:new THREE.Plane]};
THREE.extend(THREE.Frustum.prototype,{set:function(a,b,c,d,f,e){var g=this.planes;g[0].copy(a);g[1].copy(b);g[2].copy(c);g[3].copy(d);g[4].copy(f);g[5].copy(e);return this},copy:function(a){for(var b=this.planes,c=0;6>c;c++)b[c].copy(a.planes[c]);return this},setFromMatrix:function(a){var b=this.planes,c=a.elements,a=c[0],d=c[1],f=c[2],e=c[3],g=c[4],h=c[5],j=c[6],l=c[7],n=c[8],r=c[9],p=c[10],s=c[11],t=c[12],m=c[13],v=c[14],c=c[15];b[0].setComponents(e-a,l-g,s-n,c-t).normalize();b[1].setComponents(e+
a,l+g,s+n,c+t).normalize();b[2].setComponents(e+d,l+h,s+r,c+m).normalize();b[3].setComponents(e-d,l-h,s-r,c-m).normalize();b[4].setComponents(e-f,l-j,s-p,c-v).normalize();b[5].setComponents(e+f,l+j,s+p,c+v).normalize();return this},intersectsObject:function(){var a=new THREE.Vector3;return function(b){var c=b.matrixWorld,d=this.planes,b=-b.geometry.boundingSphere.radius*c.getMaxScaleOnAxis();a.getPositionFromMatrix(c);for(c=0;6>c;c++)if(d[c].distanceToPoint(a)<b)return!1;return!0}}(),intersectsSphere:function(a){for(var b=
this.planes,c=a.center,a=-a.radius,d=0;6>d;d++)if(b[d].distanceToPoint(c)<a)return!1;return!0},containsPoint:function(a){for(var b=this.planes,c=0;6>c;c++)if(0>b[c].distanceToPoint(a))return!1;return!0},clone:function(){return(new THREE.Frustum).copy(this)}});THREE.Plane=function(a,b){this.normal=void 0!==a?a:new THREE.Vector3(1,0,0);this.constant=void 0!==b?b:0};
THREE.extend(THREE.Plane.prototype,{set:function(a,b){this.normal.copy(a);this.constant=b;return this},setComponents:function(a,b,c,d){this.normal.set(a,b,c);this.constant=d;return this},setFromNormalAndCoplanarPoint:function(a,b){this.normal.copy(a);this.constant=-b.dot(this.normal);return this},setFromCoplanarPoints:function(){var a=new THREE.Vector3,b=new THREE.Vector3;return function(c,d,f){d=a.subVectors(f,d).cross(b.subVectors(c,d)).normalize();this.setFromNormalAndCoplanarPoint(d,c);return this}}(),
copy:function(a){this.normal.copy(a.normal);this.constant=a.constant;return this},normalize:function(){var a=1/this.normal.length();this.normal.multiplyScalar(a);this.constant*=a;return this},negate:function(){this.constant*=-1;this.normal.negate();return this},distanceToPoint:function(a){return this.normal.dot(a)+this.constant},distanceToSphere:function(a){return this.distanceToPoint(a.center)-a.radius},projectPoint:function(a,b){return this.orthoPoint(a,b).sub(a).negate()},orthoPoint:function(a,
b){var c=this.distanceToPoint(a);return(b||new THREE.Vector3).copy(this.normal).multiplyScalar(c)},isIntersectionLine:function(a){var b=this.distanceToPoint(a.start),a=this.distanceToPoint(a.end);return 0>b&&0<a||0>a&&0<b},intersectLine:function(){var a=new THREE.Vector3;return function(b,c){var d=c||new THREE.Vector3,f=b.delta(a),e=this.normal.dot(f);if(0==e){if(0==this.distanceToPoint(b.start))return d.copy(b.start)}else return e=-(b.start.dot(this.normal)+this.constant)/e,0>e||1<e?void 0:d.copy(f).multiplyScalar(e).add(b.start)}}(),
coplanarPoint:function(a){return(a||new THREE.Vector3).copy(this.normal).multiplyScalar(-this.constant)},applyMatrix4:function(){var a=new THREE.Vector3,b=new THREE.Vector3;return function(c,d){var d=d||(new THREE.Matrix3).getInverse(c).transpose(),f=a.copy(this.normal).applyMatrix3(d),e=this.coplanarPoint(b);e.applyMatrix4(c);this.setFromNormalAndCoplanarPoint(f,e);return this}}(),translate:function(a){this.constant-=a.dot(this.normal);return this},equals:function(a){return a.normal.equals(this.normal)&&
a.constant==this.constant},clone:function(){return(new THREE.Plane).copy(this)}});
THREE.Math={clamp:function(a,b,c){return a<b?b:a>c?c:a},clampBottom:function(a,b){return a<b?b:a},mapLinear:function(a,b,c,d,f){return d+(a-b)*(f-d)/(c-b)},smoothstep:function(a,b,c){if(a<=b)return 0;if(a>=c)return 1;a=(a-b)/(c-b);return a*a*(3-2*a)},smootherstep:function(a,b,c){if(a<=b)return 0;if(a>=c)return 1;a=(a-b)/(c-b);return a*a*a*(a*(6*a-15)+10)},random16:function(){return(65280*Math.random()+255*Math.random())/65535},randInt:function(a,b){return a+Math.floor(Math.random()*(b-a+1))},randFloat:function(a,
b){return a+Math.random()*(b-a)},randFloatSpread:function(a){return a*(0.5-Math.random())},sign:function(a){return 0>a?-1:0<a?1:0},degToRad:function(){var a=Math.PI/180;return function(b){return b*a}}(),radToDeg:function(){var a=180/Math.PI;return function(b){return b*a}}()};
THREE.Spline=function(a){function b(a,b,c,d,f,e,g){a=0.5*(c-a);d=0.5*(d-b);return(2*(b-c)+a+d)*g+(-3*(b-c)-2*a-d)*e+a*f+b}this.points=a;var c=[],d={x:0,y:0,z:0},f,e,g,h,j,l,n,r,p;this.initFromArray=function(a){this.points=[];for(var b=0;b<a.length;b++)this.points[b]={x:a[b][0],y:a[b][1],z:a[b][2]}};this.getPoint=function(a){f=(this.points.length-1)*a;e=Math.floor(f);g=f-e;c[0]=0===e?e:e-1;c[1]=e;c[2]=e>this.points.length-2?this.points.length-1:e+1;c[3]=e>this.points.length-3?this.points.length-1:
e+2;l=this.points[c[0]];n=this.points[c[1]];r=this.points[c[2]];p=this.points[c[3]];h=g*g;j=g*h;d.x=b(l.x,n.x,r.x,p.x,g,h,j);d.y=b(l.y,n.y,r.y,p.y,g,h,j);d.z=b(l.z,n.z,r.z,p.z,g,h,j);return d};this.getControlPointsArray=function(){var a,b,c=this.points.length,d=[];for(a=0;a<c;a++)b=this.points[a],d[a]=[b.x,b.y,b.z];return d};this.getLength=function(a){var b,c,d,f=0,e=new THREE.Vector3,g=new THREE.Vector3,h=[],j=0;h[0]=0;a||(a=100);c=this.points.length*a;e.copy(this.points[0]);for(a=1;a<c;a++)b=a/
c,d=this.getPoint(b),g.copy(d),j+=g.distanceTo(e),e.copy(d),b*=this.points.length-1,b=Math.floor(b),b!=f&&(h[b]=j,f=b);h[h.length]=j;return{chunks:h,total:j}};this.reparametrizeByArcLength=function(a){var b,c,d,f,e,g,h=[],j=new THREE.Vector3,l=this.getLength();h.push(j.copy(this.points[0]).clone());for(b=1;b<this.points.length;b++){c=l.chunks[b]-l.chunks[b-1];g=Math.ceil(a*c/l.total);f=(b-1)/(this.points.length-1);e=b/(this.points.length-1);for(c=1;c<g-1;c++)d=f+c*(1/g)*(e-f),d=this.getPoint(d),h.push(j.copy(d).clone());
h.push(j.copy(this.points[b]).clone())}this.points=h}};THREE.Triangle=function(a,b,c){this.a=void 0!==a?a:new THREE.Vector3;this.b=void 0!==b?b:new THREE.Vector3;this.c=void 0!==c?c:new THREE.Vector3};THREE.Triangle.normal=function(){var a=new THREE.Vector3;return function(b,c,d,f){f=f||new THREE.Vector3;f.subVectors(d,c);a.subVectors(b,c);f.cross(a);b=f.lengthSq();return 0<b?f.multiplyScalar(1/Math.sqrt(b)):f.set(0,0,0)}}();
THREE.Triangle.barycoordFromPoint=function(){var a=new THREE.Vector3,b=new THREE.Vector3,c=new THREE.Vector3;return function(d,f,e,g,h){a.subVectors(g,f);b.subVectors(e,f);c.subVectors(d,f);var d=a.dot(a),f=a.dot(b),e=a.dot(c),j=b.dot(b),g=b.dot(c),l=d*j-f*f,h=h||new THREE.Vector3;if(0==l)return h.set(-2,-1,-1);l=1/l;j=(j*e-f*g)*l;d=(d*g-f*e)*l;return h.set(1-j-d,d,j)}}();
THREE.Triangle.containsPoint=function(){var a=new THREE.Vector3;return function(b,c,d,f){b=THREE.Triangle.barycoordFromPoint(b,c,d,f,a);return 0<=b.x&&0<=b.y&&1>=b.x+b.y}}();
THREE.extend(THREE.Triangle.prototype,{constructor:THREE.Triangle,set:function(a,b,c){this.a.copy(a);this.b.copy(b);this.c.copy(c);return this},setFromPointsAndIndices:function(a,b,c,d){this.a.copy(a[b]);this.b.copy(a[c]);this.c.copy(a[d]);return this},copy:function(a){this.a.copy(a.a);this.b.copy(a.b);this.c.copy(a.c);return this},area:function(){var a=new THREE.Vector3,b=new THREE.Vector3;return function(){a.subVectors(this.c,this.b);b.subVectors(this.a,this.b);return 0.5*a.cross(b).length()}}(),
midpoint:function(a){return(a||new THREE.Vector3).addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)},normal:function(a){return THREE.Triangle.normal(this.a,this.b,this.c,a)},plane:function(a){return(a||new THREE.Plane).setFromCoplanarPoints(this.a,this.b,this.c)},barycoordFromPoint:function(a,b){return THREE.Triangle.barycoordFromPoint(a,this.a,this.b,this.c,b)},containsPoint:function(a){return THREE.Triangle.containsPoint(a,this.a,this.b,this.c)},equals:function(a){return a.a.equals(this.a)&&
a.b.equals(this.b)&&a.c.equals(this.c)},clone:function(){return(new THREE.Triangle).copy(this)}});THREE.Vertex=function(a){console.warn("THREE.Vertex has been DEPRECATED. Use THREE.Vector3 instead.");return a};THREE.UV=function(a,b){console.warn("THREE.UV has been DEPRECATED. Use THREE.Vector2 instead.");return new THREE.Vector2(a,b)};THREE.Clock=function(a){this.autoStart=void 0!==a?a:!0;this.elapsedTime=this.oldTime=this.startTime=0;this.running=!1};
THREE.extend(THREE.Clock.prototype,{start:function(){this.oldTime=this.startTime=void 0!==window.performance&&void 0!==window.performance.now?window.performance.now():Date.now();this.running=!0},stop:function(){this.getElapsedTime();this.running=!1},getElapsedTime:function(){this.getDelta();return this.elapsedTime},getDelta:function(){var a=0;this.autoStart&&!this.running&&this.start();if(this.running){var b=void 0!==window.performance&&void 0!==window.performance.now?window.performance.now():Date.now(),
a=0.0010*(b-this.oldTime);this.oldTime=b;this.elapsedTime+=a}return a}});THREE.EventDispatcher=function(){var a={};this.addEventListener=function(b,c){void 0===a[b]&&(a[b]=[]);-1===a[b].indexOf(c)&&a[b].push(c)};this.removeEventListener=function(b,c){var d=a[b].indexOf(c);-1!==d&&a[b].splice(d,1)};this.dispatchEvent=function(b){var c=a[b.type];if(void 0!==c){b.target=this;for(var d=0,f=c.length;d<f;d++)c[d].call(this,b)}}};
(function(a){a.Raycaster=function(b,c,d,f){this.ray=new a.Ray(b,c);0<this.ray.direction.lengthSq()&&this.ray.direction.normalize();this.near=d||0;this.far=f||Infinity};var b=new a.Sphere,c=new a.Ray,d=new a.Plane,f=new a.Vector3,e=new a.Vector3,g=new a.Matrix4,h=function(a,b){return a.distance-b.distance},j=function(h,j,l){if(h instanceof a.Particle){e.getPositionFromMatrix(h.matrixWorld);j=j.ray.distanceToPoint(e);if(j>h.scale.x)return l;l.push({distance:j,point:h.position,face:null,object:h})}else if(h instanceof
a.Mesh){e.getPositionFromMatrix(h.matrixWorld);b.set(e,h.geometry.boundingSphere.radius*h.matrixWorld.getMaxScaleOnAxis());if(!j.ray.isIntersectionSphere(b))return l;var s=h.geometry,t=s.vertices,m=h.material instanceof a.MeshFaceMaterial,v=!0===m?h.material.materials:null,B=h.material.side,q,A,u,x=j.precision;h.matrixRotationWorld.extractRotation(h.matrixWorld);g.getInverse(h.matrixWorld);c.copy(j.ray).applyMatrix4(g);for(var I=0,C=s.faces.length;I<C;I++){var z=s.faces[I],B=!0===m?v[z.materialIndex]:
h.material;if(void 0!==B){d.setFromNormalAndCoplanarPoint(z.normal,t[z.a]);var J=c.distanceToPlane(d);if(!(Math.abs(J)<x)&&!(0>J)&&(B=B.side,!(B!==a.DoubleSide&&(q=c.direction.dot(d.normal),!(B===a.FrontSide?0>q:0<q)))))if(!(J<j.near||J>j.far)){f=c.at(J,f);if(z instanceof a.Face3){if(B=t[z.a],q=t[z.b],A=t[z.c],!a.Triangle.containsPoint(f,B,q,A))continue}else if(z instanceof a.Face4){if(B=t[z.a],q=t[z.b],A=t[z.c],u=t[z.d],!a.Triangle.containsPoint(f,B,q,u)&&!a.Triangle.containsPoint(f,q,A,u))continue}else throw Error("face type not supported");
l.push({distance:J,point:j.ray.at(J),face:z,faceIndex:I,object:h})}}}}},l=function(a,b,c){for(var a=a.getDescendants(),d=0,f=a.length;d<f;d++)j(a[d],b,c)};a.Raycaster.prototype.precision=1E-4;a.Raycaster.prototype.set=function(a,b){this.ray.set(a,b);0<this.ray.direction.length()&&this.ray.direction.normalize()};a.Raycaster.prototype.intersectObject=function(a,b){var c=[];!0===b&&l(a,this,c);j(a,this,c);c.sort(h);return c};a.Raycaster.prototype.intersectObjects=function(a,b){for(var c=[],d=0,f=a.length;d<
f;d++)j(a[d],this,c),!0===b&&l(a[d],this,c);c.sort(h);return c}})(THREE);
THREE.Object3D=function(){this.id=THREE.Object3DIdCount++;this.name="";this.properties={};this.parent=void 0;this.children=[];this.up=new THREE.Vector3(0,1,0);this.position=new THREE.Vector3;this.rotation=new THREE.Vector3;this.eulerOrder=THREE.Object3D.defaultEulerOrder;this.scale=new THREE.Vector3(1,1,1);this.renderDepth=null;this.rotationAutoUpdate=!0;this.matrix=new THREE.Matrix4;this.matrixWorld=new THREE.Matrix4;this.matrixRotationWorld=new THREE.Matrix4;this.matrixWorldNeedsUpdate=this.matrixAutoUpdate=
!0;this.quaternion=new THREE.Quaternion;this.useQuaternion=!1;this.visible=!0;this.receiveShadow=this.castShadow=!1;this.frustumCulled=!0;this._vector=new THREE.Vector3};
THREE.Object3D.prototype={constructor:THREE.Object3D,applyMatrix:function(a){this.matrix.multiplyMatrices(a,this.matrix);this.scale.getScaleFromMatrix(this.matrix);a=(new THREE.Matrix4).extractRotation(this.matrix);this.rotation.setEulerFromRotationMatrix(a,this.eulerOrder);this.position.getPositionFromMatrix(this.matrix)},translate:function(a,b){this.matrix.rotateAxis(b);this.position.add(b.multiplyScalar(a))},translateX:function(a){this.translate(a,this._vector.set(1,0,0))},translateY:function(a){this.translate(a,
this._vector.set(0,1,0))},translateZ:function(a){this.translate(a,this._vector.set(0,0,1))},localToWorld:function(a){return a.applyMatrix4(this.matrixWorld)},worldToLocal:function(a){return a.applyMatrix4(THREE.Object3D.__m1.getInverse(this.matrixWorld))},lookAt:function(a){this.matrix.lookAt(a,this.position,this.up);this.rotationAutoUpdate&&(!1===this.useQuaternion?this.rotation.setEulerFromRotationMatrix(this.matrix,this.eulerOrder):this.quaternion.copy(this.matrix.decompose()[1]))},add:function(a){if(a===
this)console.warn("THREE.Object3D.add: An object can't be added as a child of itself.");else if(a instanceof THREE.Object3D){void 0!==a.parent&&a.parent.remove(a);a.parent=this;this.children.push(a);for(var b=this;void 0!==b.parent;)b=b.parent;void 0!==b&&b instanceof THREE.Scene&&b.__addObject(a)}},remove:function(a){var b=this.children.indexOf(a);if(-1!==b){a.parent=void 0;this.children.splice(b,1);for(b=this;void 0!==b.parent;)b=b.parent;void 0!==b&&b instanceof THREE.Scene&&b.__removeObject(a)}},
traverse:function(a){a(this);for(var b=0,c=this.children.length;b<c;b++)this.children[b].traverse(a)},getChildByName:function(a,b){for(var c=0,d=this.children.length;c<d;c++){var f=this.children[c];if(f.name===a||!0===b&&(f=f.getChildByName(a,b),void 0!==f))return f}},getDescendants:function(a){void 0===a&&(a=[]);Array.prototype.push.apply(a,this.children);for(var b=0,c=this.children.length;b<c;b++)this.children[b].getDescendants(a);return a},updateMatrix:function(){this.matrix.setPosition(this.position);
!1===this.useQuaternion?this.matrix.setRotationFromEuler(this.rotation,this.eulerOrder):this.matrix.setRotationFromQuaternion(this.quaternion);(1!==this.scale.x||1!==this.scale.y||1!==this.scale.z)&&this.matrix.scale(this.scale);this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(a){!0===this.matrixAutoUpdate&&this.updateMatrix();if(!0===this.matrixWorldNeedsUpdate||!0===a)void 0===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),
this.matrixWorldNeedsUpdate=!1,a=!0;for(var b=0,c=this.children.length;b<c;b++)this.children[b].updateMatrixWorld(a)},clone:function(a){void 0===a&&(a=new THREE.Object3D);a.name=this.name;a.up.copy(this.up);a.position.copy(this.position);a.rotation instanceof THREE.Vector3&&a.rotation.copy(this.rotation);a.eulerOrder=this.eulerOrder;a.scale.copy(this.scale);a.renderDepth=this.renderDepth;a.rotationAutoUpdate=this.rotationAutoUpdate;a.matrix.copy(this.matrix);a.matrixWorld.copy(this.matrixWorld);a.matrixRotationWorld.copy(this.matrixRotationWorld);
a.matrixAutoUpdate=this.matrixAutoUpdate;a.matrixWorldNeedsUpdate=this.matrixWorldNeedsUpdate;a.quaternion.copy(this.quaternion);a.useQuaternion=this.useQuaternion;a.visible=this.visible;a.castShadow=this.castShadow;a.receiveShadow=this.receiveShadow;a.frustumCulled=this.frustumCulled;for(var b=0;b<this.children.length;b++)a.add(this.children[b].clone());return a}};THREE.Object3D.__m1=new THREE.Matrix4;THREE.Object3D.defaultEulerOrder="XYZ";THREE.Object3DIdCount=0;
THREE.Projector=function(){function a(){if(e===h){var a=new THREE.RenderableObject;g.push(a);h++;e++;return a}return g[e++]}function b(){if(l===r){var a=new THREE.RenderableVertex;n.push(a);r++;l++;return a}return n[l++]}function c(a,b){return b.z-a.z}function d(a,b){var c=0,d=1,f=a.z+a.w,e=b.z+b.w,g=-a.z+a.w,h=-b.z+b.w;if(0<=f&&0<=e&&0<=g&&0<=h)return!0;if(0>f&&0>e||0>g&&0>h)return!1;0>f?c=Math.max(c,f/(f-e)):0>e&&(d=Math.min(d,f/(f-e)));0>g?c=Math.max(c,g/(g-h)):0>h&&(d=Math.min(d,g/(g-h)));if(d<
c)return!1;a.lerp(b,c);b.lerp(a,1-d);return!0}var f,e,g=[],h=0,j,l,n=[],r=0,p,s,t=[],m=0,v,B=[],q=0,A,u,x=[],I=0,C,z,J=[],K=0,G={objects:[],sprites:[],lights:[],elements:[]},H=new THREE.Vector3,D=new THREE.Vector4,X=new THREE.Box3(new THREE.Vector3(-1,-1,-1),new THREE.Vector3(1,1,1)),F=new THREE.Box3,L=Array(3),M=Array(4),V=new THREE.Matrix4,ga=new THREE.Matrix4,Da,ab=new THREE.Matrix4,N=new THREE.Matrix3,da=new THREE.Matrix3,ra=new THREE.Vector3,ia=new THREE.Frustum,sa=new THREE.Vector4,O=new THREE.Vector4;
this.projectVector=function(a,b){b.matrixWorldInverse.getInverse(b.matrixWorld);ga.multiplyMatrices(b.projectionMatrix,b.matrixWorldInverse);return a.applyProjection(ga)};this.unprojectVector=function(a,b){b.projectionMatrixInverse.getInverse(b.projectionMatrix);ga.multiplyMatrices(b.matrixWorld,b.projectionMatrixInverse);return a.applyProjection(ga)};this.pickingRay=function(a,b){a.z=-1;var c=new THREE.Vector3(a.x,a.y,1);this.unprojectVector(a,b);this.unprojectVector(c,b);c.sub(a).normalize();return new THREE.Raycaster(a,
c)};this.projectScene=function(g,h,r,Qa){var ua=!1,la,ba,qa,Z,ea,ma,$,pa,hb,nb,ja,Xa,bb;z=u=v=s=0;G.elements.length=0;g.updateMatrixWorld();void 0===h.parent&&h.updateMatrixWorld();V.copy(h.matrixWorldInverse.getInverse(h.matrixWorld));ga.multiplyMatrices(h.projectionMatrix,V);da.getInverse(V);da.transpose();ia.setFromMatrix(ga);e=0;G.objects.length=0;G.sprites.length=0;G.lights.length=0;var Ga=function(b){for(var c=0,d=b.children.length;c<d;c++){var e=b.children[c];if(!1!==e.visible){if(e instanceof
THREE.Light)G.lights.push(e);else if(e instanceof THREE.Mesh||e instanceof THREE.Line){if(!1===e.frustumCulled||!0===ia.intersectsObject(e))f=a(),f.object=e,null!==e.renderDepth?f.z=e.renderDepth:(H.getPositionFromMatrix(e.matrixWorld),H.applyProjection(ga),f.z=H.z),G.objects.push(f)}else e instanceof THREE.Sprite||e instanceof THREE.Particle?(f=a(),f.object=e,null!==e.renderDepth?f.z=e.renderDepth:(H.getPositionFromMatrix(e.matrixWorld),H.applyProjection(ga),f.z=H.z),G.sprites.push(f)):(f=a(),f.object=
e,null!==e.renderDepth?f.z=e.renderDepth:(H.getPositionFromMatrix(e.matrixWorld),H.applyProjection(ga),f.z=H.z),G.objects.push(f));Ga(e)}}};Ga(g);!0===r&&G.objects.sort(c);g=0;for(r=G.objects.length;g<r;g++)if(pa=G.objects[g].object,Da=pa.matrixWorld,l=0,pa instanceof THREE.Mesh){hb=pa.geometry;qa=hb.vertices;nb=hb.faces;hb=hb.faceVertexUvs;N.getInverse(Da);N.transpose();Xa=pa.material instanceof THREE.MeshFaceMaterial;bb=!0===Xa?pa.material:null;la=0;for(ba=qa.length;la<ba;la++)j=b(),j.positionWorld.copy(qa[la]).applyMatrix4(Da),
j.positionScreen.copy(j.positionWorld).applyMatrix4(ga),j.positionScreen.x/=j.positionScreen.w,j.positionScreen.y/=j.positionScreen.w,j.positionScreen.z/=j.positionScreen.w,j.visible=!(-1>j.positionScreen.x||1<j.positionScreen.x||-1>j.positionScreen.y||1<j.positionScreen.y||-1>j.positionScreen.z||1<j.positionScreen.z);qa=0;for(la=nb.length;qa<la;qa++){ba=nb[qa];var Ya=!0===Xa?bb.materials[ba.materialIndex]:pa.material;if(void 0!==Ya){ma=Ya.side;if(ba instanceof THREE.Face3)if(Z=n[ba.a],ea=n[ba.b],
$=n[ba.c],L[0]=Z.positionScreen,L[1]=ea.positionScreen,L[2]=$.positionScreen,!0===Z.visible||!0===ea.visible||!0===$.visible||X.isIntersectionBox(F.setFromPoints(L)))if(ua=0>($.positionScreen.x-Z.positionScreen.x)*(ea.positionScreen.y-Z.positionScreen.y)-($.positionScreen.y-Z.positionScreen.y)*(ea.positionScreen.x-Z.positionScreen.x),ma===THREE.DoubleSide||ua===(ma===THREE.FrontSide))s===m?(ja=new THREE.RenderableFace3,t.push(ja),m++,s++,p=ja):p=t[s++],p.v1.copy(Z),p.v2.copy(ea),p.v3.copy($);else continue;
else continue;else if(ba instanceof THREE.Face4)if(Z=n[ba.a],ea=n[ba.b],$=n[ba.c],ja=n[ba.d],M[0]=Z.positionScreen,M[1]=ea.positionScreen,M[2]=$.positionScreen,M[3]=ja.positionScreen,!0===Z.visible||!0===ea.visible||!0===$.visible||!0===ja.visible||X.isIntersectionBox(F.setFromPoints(M)))if(ua=0>(ja.positionScreen.x-Z.positionScreen.x)*(ea.positionScreen.y-Z.positionScreen.y)-(ja.positionScreen.y-Z.positionScreen.y)*(ea.positionScreen.x-Z.positionScreen.x)||0>(ea.positionScreen.x-$.positionScreen.x)*
(ja.positionScreen.y-$.positionScreen.y)-(ea.positionScreen.y-$.positionScreen.y)*(ja.positionScreen.x-$.positionScreen.x),ma===THREE.DoubleSide||ua===(ma===THREE.FrontSide)){if(v===q){var ub=new THREE.RenderableFace4;B.push(ub);q++;v++;p=ub}else p=B[v++];p.v1.copy(Z);p.v2.copy(ea);p.v3.copy($);p.v4.copy(ja)}else continue;else continue;p.normalModel.copy(ba.normal);!1===ua&&(ma===THREE.BackSide||ma===THREE.DoubleSide)&&p.normalModel.negate();p.normalModel.applyMatrix3(N).normalize();p.normalModelView.copy(p.normalModel).applyMatrix3(da);
p.centroidModel.copy(ba.centroid).applyMatrix4(Da);$=ba.vertexNormals;Z=0;for(ea=$.length;Z<ea;Z++)ja=p.vertexNormalsModel[Z],ja.copy($[Z]),!1===ua&&(ma===THREE.BackSide||ma===THREE.DoubleSide)&&ja.negate(),ja.applyMatrix3(N).normalize(),p.vertexNormalsModelView[Z].copy(ja).applyMatrix3(da);p.vertexNormalsLength=$.length;Z=0;for(ea=hb.length;Z<ea;Z++)if(ja=hb[Z][qa],void 0!==ja){ma=0;for($=ja.length;ma<$;ma++)p.uvs[Z][ma]=ja[ma]}p.color=ba.color;p.material=Ya;ra.copy(p.centroidModel).applyProjection(ga);
p.z=ra.z;G.elements.push(p)}}}else if(pa instanceof THREE.Line){ab.multiplyMatrices(ga,Da);qa=pa.geometry.vertices;Z=b();Z.positionScreen.copy(qa[0]).applyMatrix4(ab);nb=pa.type===THREE.LinePieces?2:1;la=1;for(ba=qa.length;la<ba;la++)Z=b(),Z.positionScreen.copy(qa[la]).applyMatrix4(ab),0<(la+1)%nb||(ea=n[l-2],sa.copy(Z.positionScreen),O.copy(ea.positionScreen),!0===d(sa,O)&&(sa.multiplyScalar(1/sa.w),O.multiplyScalar(1/O.w),u===I?(hb=new THREE.RenderableLine,x.push(hb),I++,u++,A=hb):A=x[u++],A.v1.positionScreen.copy(sa),
A.v2.positionScreen.copy(O),A.z=Math.max(sa.z,O.z),A.material=pa.material,G.elements.push(A)))}g=0;for(r=G.sprites.length;g<r;g++)pa=G.sprites[g].object,Da=pa.matrixWorld,pa instanceof THREE.Particle&&(D.set(Da.elements[12],Da.elements[13],Da.elements[14],1),D.applyMatrix4(ga),D.z/=D.w,0<D.z&&1>D.z&&(z===K?(ua=new THREE.RenderableParticle,J.push(ua),K++,z++,C=ua):C=J[z++],C.object=pa,C.x=D.x/D.w,C.y=D.y/D.w,C.z=D.z,C.rotation=pa.rotation.z,C.scale.x=pa.scale.x*Math.abs(C.x-(D.x+h.projectionMatrix.elements[0])/
(D.w+h.projectionMatrix.elements[12])),C.scale.y=pa.scale.y*Math.abs(C.y-(D.y+h.projectionMatrix.elements[5])/(D.w+h.projectionMatrix.elements[13])),C.material=pa.material,G.elements.push(C)));!0===Qa&&G.elements.sort(c);return G}};
THREE.Face3=function(a,b,c,d,f,e){this.a=a;this.b=b;this.c=c;this.normal=d instanceof THREE.Vector3?d:new THREE.Vector3;this.vertexNormals=d instanceof Array?d:[];this.color=f instanceof THREE.Color?f:new THREE.Color;this.vertexColors=f instanceof Array?f:[];this.vertexTangents=[];this.materialIndex=void 0!==e?e:0;this.centroid=new THREE.Vector3};
THREE.Face3.prototype={constructor:THREE.Face3,clone:function(){var a=new THREE.Face3(this.a,this.b,this.c);a.normal.copy(this.normal);a.color.copy(this.color);a.centroid.copy(this.centroid);a.materialIndex=this.materialIndex;var b,c;b=0;for(c=this.vertexNormals.length;b<c;b++)a.vertexNormals[b]=this.vertexNormals[b].clone();b=0;for(c=this.vertexColors.length;b<c;b++)a.vertexColors[b]=this.vertexColors[b].clone();b=0;for(c=this.vertexTangents.length;b<c;b++)a.vertexTangents[b]=this.vertexTangents[b].clone();
return a}};THREE.Face4=function(a,b,c,d,f,e,g){this.a=a;this.b=b;this.c=c;this.d=d;this.normal=f instanceof THREE.Vector3?f:new THREE.Vector3;this.vertexNormals=f instanceof Array?f:[];this.color=e instanceof THREE.Color?e:new THREE.Color;this.vertexColors=e instanceof Array?e:[];this.vertexTangents=[];this.materialIndex=void 0!==g?g:0;this.centroid=new THREE.Vector3};
THREE.Face4.prototype={constructor:THREE.Face4,clone:function(){var a=new THREE.Face4(this.a,this.b,this.c,this.d);a.normal.copy(this.normal);a.color.copy(this.color);a.centroid.copy(this.centroid);a.materialIndex=this.materialIndex;var b,c;b=0;for(c=this.vertexNormals.length;b<c;b++)a.vertexNormals[b]=this.vertexNormals[b].clone();b=0;for(c=this.vertexColors.length;b<c;b++)a.vertexColors[b]=this.vertexColors[b].clone();b=0;for(c=this.vertexTangents.length;b<c;b++)a.vertexTangents[b]=this.vertexTangents[b].clone();
return a}};
THREE.Geometry=function(){THREE.EventDispatcher.call(this);this.id=THREE.GeometryIdCount++;this.name="";this.vertices=[];this.colors=[];this.normals=[];this.faces=[];this.faceUvs=[[]];this.faceVertexUvs=[[]];this.morphTargets=[];this.morphColors=[];this.morphNormals=[];this.skinWeights=[];this.skinIndices=[];this.lineDistances=[];this.boundingSphere=this.boundingBox=null;this.hasTangents=!1;this.dynamic=!0;this.buffersNeedUpdate=this.lineDistancesNeedUpdate=this.colorsNeedUpdate=this.tangentsNeedUpdate=this.normalsNeedUpdate=
this.uvsNeedUpdate=this.elementsNeedUpdate=this.verticesNeedUpdate=!1};
THREE.Geometry.prototype={constructor:THREE.Geometry,applyMatrix:function(a){for(var b=(new THREE.Matrix3).getInverse(a).transpose(),c=0,d=this.vertices.length;c<d;c++)this.vertices[c].applyMatrix4(a);c=0;for(d=this.faces.length;c<d;c++){var f=this.faces[c];f.normal.applyMatrix3(b).normalize();for(var e=0,g=f.vertexNormals.length;e<g;e++)f.vertexNormals[e].applyMatrix3(b).normalize();f.centroid.applyMatrix4(a)}},computeCentroids:function(){var a,b,c;a=0;for(b=this.faces.length;a<b;a++)c=this.faces[a],
c.centroid.set(0,0,0),c instanceof THREE.Face3?(c.centroid.add(this.vertices[c.a]),c.centroid.add(this.vertices[c.b]),c.centroid.add(this.vertices[c.c]),c.centroid.divideScalar(3)):c instanceof THREE.Face4&&(c.centroid.add(this.vertices[c.a]),c.centroid.add(this.vertices[c.b]),c.centroid.add(this.vertices[c.c]),c.centroid.add(this.vertices[c.d]),c.centroid.divideScalar(4))},computeFaceNormals:function(){for(var a=new THREE.Vector3,b=new THREE.Vector3,c=0,d=this.faces.length;c<d;c++){var f=this.faces[c],
e=this.vertices[f.a],g=this.vertices[f.b];a.subVectors(this.vertices[f.c],g);b.subVectors(e,g);a.cross(b);a.normalize();f.normal.copy(a)}},computeVertexNormals:function(a){var b,c,d,f;if(void 0===this.__tmpVertices){f=this.__tmpVertices=Array(this.vertices.length);b=0;for(c=this.vertices.length;b<c;b++)f[b]=new THREE.Vector3;b=0;for(c=this.faces.length;b<c;b++)d=this.faces[b],d instanceof THREE.Face3?d.vertexNormals=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3]:d instanceof THREE.Face4&&
(d.vertexNormals=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3])}else{f=this.__tmpVertices;b=0;for(c=this.vertices.length;b<c;b++)f[b].set(0,0,0)}if(a){var e,g,h,j=new THREE.Vector3,l=new THREE.Vector3,n=new THREE.Vector3,r=new THREE.Vector3,p=new THREE.Vector3;b=0;for(c=this.faces.length;b<c;b++)d=this.faces[b],d instanceof THREE.Face3?(a=this.vertices[d.a],e=this.vertices[d.b],g=this.vertices[d.c],j.subVectors(g,e),l.subVectors(a,e),j.cross(l),f[d.a].add(j),f[d.b].add(j),
f[d.c].add(j)):d instanceof THREE.Face4&&(a=this.vertices[d.a],e=this.vertices[d.b],g=this.vertices[d.c],h=this.vertices[d.d],n.subVectors(h,e),l.subVectors(a,e),n.cross(l),f[d.a].add(n),f[d.b].add(n),f[d.d].add(n),r.subVectors(h,g),p.subVectors(e,g),r.cross(p),f[d.b].add(r),f[d.c].add(r),f[d.d].add(r))}else{b=0;for(c=this.faces.length;b<c;b++)d=this.faces[b],d instanceof THREE.Face3?(f[d.a].add(d.normal),f[d.b].add(d.normal),f[d.c].add(d.normal)):d instanceof THREE.Face4&&(f[d.a].add(d.normal),f[d.b].add(d.normal),
f[d.c].add(d.normal),f[d.d].add(d.normal))}b=0;for(c=this.vertices.length;b<c;b++)f[b].normalize();b=0;for(c=this.faces.length;b<c;b++)d=this.faces[b],d instanceof THREE.Face3?(d.vertexNormals[0].copy(f[d.a]),d.vertexNormals[1].copy(f[d.b]),d.vertexNormals[2].copy(f[d.c])):d instanceof THREE.Face4&&(d.vertexNormals[0].copy(f[d.a]),d.vertexNormals[1].copy(f[d.b]),d.vertexNormals[2].copy(f[d.c]),d.vertexNormals[3].copy(f[d.d]))},computeMorphNormals:function(){var a,b,c,d,f;c=0;for(d=this.faces.length;c<
d;c++){f=this.faces[c];f.__originalFaceNormal?f.__originalFaceNormal.copy(f.normal):f.__originalFaceNormal=f.normal.clone();f.__originalVertexNormals||(f.__originalVertexNormals=[]);a=0;for(b=f.vertexNormals.length;a<b;a++)f.__originalVertexNormals[a]?f.__originalVertexNormals[a].copy(f.vertexNormals[a]):f.__originalVertexNormals[a]=f.vertexNormals[a].clone()}var e=new THREE.Geometry;e.faces=this.faces;a=0;for(b=this.morphTargets.length;a<b;a++){if(!this.morphNormals[a]){this.morphNormals[a]={};this.morphNormals[a].faceNormals=
[];this.morphNormals[a].vertexNormals=[];var g=this.morphNormals[a].faceNormals,h=this.morphNormals[a].vertexNormals,j,l;c=0;for(d=this.faces.length;c<d;c++)f=this.faces[c],j=new THREE.Vector3,l=f instanceof THREE.Face3?{a:new THREE.Vector3,b:new THREE.Vector3,c:new THREE.Vector3}:{a:new THREE.Vector3,b:new THREE.Vector3,c:new THREE.Vector3,d:new THREE.Vector3},g.push(j),h.push(l)}g=this.morphNormals[a];e.vertices=this.morphTargets[a].vertices;e.computeFaceNormals();e.computeVertexNormals();c=0;for(d=
this.faces.length;c<d;c++)f=this.faces[c],j=g.faceNormals[c],l=g.vertexNormals[c],j.copy(f.normal),f instanceof THREE.Face3?(l.a.copy(f.vertexNormals[0]),l.b.copy(f.vertexNormals[1]),l.c.copy(f.vertexNormals[2])):(l.a.copy(f.vertexNormals[0]),l.b.copy(f.vertexNormals[1]),l.c.copy(f.vertexNormals[2]),l.d.copy(f.vertexNormals[3]))}c=0;for(d=this.faces.length;c<d;c++)f=this.faces[c],f.normal=f.__originalFaceNormal,f.vertexNormals=f.__originalVertexNormals},computeTangents:function(){function a(a,b,c,
d,f,e,z){h=a.vertices[b];j=a.vertices[c];l=a.vertices[d];n=g[f];r=g[e];p=g[z];s=j.x-h.x;t=l.x-h.x;m=j.y-h.y;v=l.y-h.y;B=j.z-h.z;q=l.z-h.z;A=r.x-n.x;u=p.x-n.x;x=r.y-n.y;I=p.y-n.y;C=1/(A*I-u*x);G.set((I*s-x*t)*C,(I*m-x*v)*C,(I*B-x*q)*C);H.set((A*t-u*s)*C,(A*v-u*m)*C,(A*q-u*B)*C);J[b].add(G);J[c].add(G);J[d].add(G);K[b].add(H);K[c].add(H);K[d].add(H)}var b,c,d,f,e,g,h,j,l,n,r,p,s,t,m,v,B,q,A,u,x,I,C,z,J=[],K=[],G=new THREE.Vector3,H=new THREE.Vector3,D=new THREE.Vector3,X=new THREE.Vector3,F=new THREE.Vector3;
b=0;for(c=this.vertices.length;b<c;b++)J[b]=new THREE.Vector3,K[b]=new THREE.Vector3;b=0;for(c=this.faces.length;b<c;b++)e=this.faces[b],g=this.faceVertexUvs[0][b],e instanceof THREE.Face3?a(this,e.a,e.b,e.c,0,1,2):e instanceof THREE.Face4&&(a(this,e.a,e.b,e.d,0,1,3),a(this,e.b,e.c,e.d,1,2,3));var L=["a","b","c","d"];b=0;for(c=this.faces.length;b<c;b++){e=this.faces[b];for(d=0;d<e.vertexNormals.length;d++)F.copy(e.vertexNormals[d]),f=e[L[d]],z=J[f],D.copy(z),D.sub(F.multiplyScalar(F.dot(z))).normalize(),
X.crossVectors(e.vertexNormals[d],z),f=X.dot(K[f]),f=0>f?-1:1,e.vertexTangents[d]=new THREE.Vector4(D.x,D.y,D.z,f)}this.hasTangents=!0},computeLineDistances:function(){for(var a=0,b=this.vertices,c=0,d=b.length;c<d;c++)0<c&&(a+=b[c].distanceTo(b[c-1])),this.lineDistances[c]=a},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new THREE.Box3);this.boundingBox.setFromPoints(this.vertices)},computeBoundingSphere:function(){null===this.boundingSphere&&(this.boundingSphere=new THREE.Sphere);
this.boundingSphere.setFromCenterAndPoints(this.boundingSphere.center,this.vertices)},mergeVertices:function(){var a={},b=[],c=[],d,f=Math.pow(10,4),e,g,h,j,l;this.__tmpVertices=void 0;e=0;for(g=this.vertices.length;e<g;e++)d=this.vertices[e],d=[Math.round(d.x*f),Math.round(d.y*f),Math.round(d.z*f)].join("_"),void 0===a[d]?(a[d]=e,b.push(this.vertices[e]),c[e]=b.length-1):c[e]=c[a[d]];f=[];e=0;for(g=this.faces.length;e<g;e++)if(a=this.faces[e],a instanceof THREE.Face3){a.a=c[a.a];a.b=c[a.b];a.c=c[a.c];
h=[a.a,a.b,a.c];for(j=0;3>j;j++)if(h[j]==h[(j+1)%3]){f.push(e);break}}else if(a instanceof THREE.Face4){a.a=c[a.a];a.b=c[a.b];a.c=c[a.c];a.d=c[a.d];h=[a.a,a.b,a.c,a.d];d=-1;for(j=0;4>j;j++)h[j]==h[(j+1)%4]&&(0<=d&&f.push(e),d=j);if(0<=d){h.splice(d,1);var n=new THREE.Face3(h[0],h[1],h[2],a.normal,a.color,a.materialIndex);h=0;for(j=this.faceVertexUvs.length;h<j;h++)(l=this.faceVertexUvs[h][e])&&l.splice(d,1);a.vertexNormals&&0<a.vertexNormals.length&&(n.vertexNormals=a.vertexNormals,n.vertexNormals.splice(d,
1));a.vertexColors&&0<a.vertexColors.length&&(n.vertexColors=a.vertexColors,n.vertexColors.splice(d,1));this.faces[e]=n}}for(e=f.length-1;0<=e;e--){this.faces.splice(e,1);h=0;for(j=this.faceVertexUvs.length;h<j;h++)this.faceVertexUvs[h].splice(e,1)}c=this.vertices.length-b.length;this.vertices=b;return c},clone:function(){for(var a=new THREE.Geometry,b=this.vertices,c=0,d=b.length;c<d;c++)a.vertices.push(b[c].clone());b=this.faces;c=0;for(d=b.length;c<d;c++)a.faces.push(b[c].clone());b=this.faceVertexUvs[0];
c=0;for(d=b.length;c<d;c++){for(var f=b[c],e=[],g=0,h=f.length;g<h;g++)e.push(new THREE.Vector2(f[g].x,f[g].y));a.faceVertexUvs[0].push(e)}return a},dispose:function(){this.dispatchEvent({type:"dispose"})}};THREE.GeometryIdCount=0;THREE.BufferGeometry=function(){THREE.EventDispatcher.call(this);this.id=THREE.GeometryIdCount++;this.attributes={};this.dynamic=!1;this.offsets=[];this.boundingSphere=this.boundingBox=null;this.hasTangents=!1;this.morphTargets=[]};
THREE.BufferGeometry.prototype={constructor:THREE.BufferGeometry,applyMatrix:function(a){var b,c;this.attributes.position&&(b=this.attributes.position.array);this.attributes.normal&&(c=this.attributes.normal.array);void 0!==b&&(a.multiplyVector3Array(b),this.verticesNeedUpdate=!0);void 0!==c&&(b=new THREE.Matrix3,b.getInverse(a).transpose(),b.multiplyVector3Array(c),this.normalizeNormals(),this.normalsNeedUpdate=!0)},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new THREE.Box3);
var a=this.attributes.position.array;if(a){var b=this.boundingBox,c,d,f;3<=a.length&&(b.min.x=b.max.x=a[0],b.min.y=b.max.y=a[1],b.min.z=b.max.z=a[2]);for(var e=3,g=a.length;e<g;e+=3)c=a[e],d=a[e+1],f=a[e+2],c<b.min.x?b.min.x=c:c>b.max.x&&(b.max.x=c),d<b.min.y?b.min.y=d:d>b.max.y&&(b.max.y=d),f<b.min.z?b.min.z=f:f>b.max.z&&(b.max.z=f)}if(void 0===a||0===a.length)this.boundingBox.min.set(0,0,0),this.boundingBox.max.set(0,0,0)},computeBoundingSphere:function(){null===this.boundingSphere&&(this.boundingSphere=
new THREE.Sphere);var a=this.attributes.position.array;if(a){for(var b,c=0,d,f,e=0,g=a.length;e<g;e+=3)b=a[e],d=a[e+1],f=a[e+2],b=b*b+d*d+f*f,b>c&&(c=b);this.boundingSphere.radius=Math.sqrt(c)}},computeVertexNormals:function(){if(this.attributes.position){var a,b,c,d;a=this.attributes.position.array.length;if(void 0===this.attributes.normal)this.attributes.normal={itemSize:3,array:new Float32Array(a),numItems:a};else{a=0;for(b=this.attributes.normal.array.length;a<b;a++)this.attributes.normal.array[a]=
0}var f=this.attributes.position.array,e=this.attributes.normal.array,g,h,j,l,n,r,p=new THREE.Vector3,s=new THREE.Vector3,t=new THREE.Vector3,m=new THREE.Vector3,v=new THREE.Vector3;if(this.attributes.index){var B=this.attributes.index.array,q=this.offsets;c=0;for(d=q.length;c<d;++c){b=q[c].start;g=q[c].count;var A=q[c].index;a=b;for(b+=g;a<b;a+=3)g=A+B[a],h=A+B[a+1],j=A+B[a+2],l=f[3*g],n=f[3*g+1],r=f[3*g+2],p.set(l,n,r),l=f[3*h],n=f[3*h+1],r=f[3*h+2],s.set(l,n,r),l=f[3*j],n=f[3*j+1],r=f[3*j+2],t.set(l,
n,r),m.subVectors(t,s),v.subVectors(p,s),m.cross(v),e[3*g]+=m.x,e[3*g+1]+=m.y,e[3*g+2]+=m.z,e[3*h]+=m.x,e[3*h+1]+=m.y,e[3*h+2]+=m.z,e[3*j]+=m.x,e[3*j+1]+=m.y,e[3*j+2]+=m.z}}else{a=0;for(b=f.length;a<b;a+=9)l=f[a],n=f[a+1],r=f[a+2],p.set(l,n,r),l=f[a+3],n=f[a+4],r=f[a+5],s.set(l,n,r),l=f[a+6],n=f[a+7],r=f[a+8],t.set(l,n,r),m.subVectors(t,s),v.subVectors(p,s),m.cross(v),e[a]=m.x,e[a+1]=m.y,e[a+2]=m.z,e[a+3]=m.x,e[a+4]=m.y,e[a+5]=m.z,e[a+6]=m.x,e[a+7]=m.y,e[a+8]=m.z}this.normalizeNormals();this.normalsNeedUpdate=
!0}},normalizeNormals:function(){for(var a=this.attributes.normal.array,b,c,d,f=0,e=a.length;f<e;f+=3)b=a[f],c=a[f+1],d=a[f+2],b=1/Math.sqrt(b*b+c*c+d*d),a[f]*=b,a[f+1]*=b,a[f+2]*=b},computeTangents:function(){function a(a){Da.x=d[3*a];Da.y=d[3*a+1];Da.z=d[3*a+2];ab.copy(Da);da=j[a];V.copy(da);V.sub(Da.multiplyScalar(Da.dot(da))).normalize();ga.crossVectors(ab,da);ra=ga.dot(l[a]);N=0>ra?-1:1;h[4*a]=V.x;h[4*a+1]=V.y;h[4*a+2]=V.z;h[4*a+3]=N}if(void 0===this.attributes.index||void 0===this.attributes.position||
void 0===this.attributes.normal||void 0===this.attributes.uv)console.warn("Missing required attributes (index, position, normal or uv) in BufferGeometry.computeTangents()");else{var b=this.attributes.index.array,c=this.attributes.position.array,d=this.attributes.normal.array,f=this.attributes.uv.array,e=c.length/3;if(void 0===this.attributes.tangent){var g=4*e;this.attributes.tangent={itemSize:4,array:new Float32Array(g),numItems:g}}for(var h=this.attributes.tangent.array,j=[],l=[],g=0;g<e;g++)j[g]=
new THREE.Vector3,l[g]=new THREE.Vector3;var n,r,p,s,t,m,v,B,q,A,u,x,I,C,z,e=new THREE.Vector3,g=new THREE.Vector3,J,K,G,H,D,X,F,L=this.offsets;G=0;for(H=L.length;G<H;++G){K=L[G].start;D=L[G].count;var M=L[G].index;J=K;for(K+=D;J<K;J+=3)D=M+b[J],X=M+b[J+1],F=M+b[J+2],n=c[3*D],r=c[3*D+1],p=c[3*D+2],s=c[3*X],t=c[3*X+1],m=c[3*X+2],v=c[3*F],B=c[3*F+1],q=c[3*F+2],A=f[2*D],u=f[2*D+1],x=f[2*X],I=f[2*X+1],C=f[2*F],z=f[2*F+1],s-=n,n=v-n,t-=r,r=B-r,m-=p,p=q-p,x-=A,A=C-A,I-=u,u=z-u,z=1/(x*u-A*I),e.set((u*s-
I*n)*z,(u*t-I*r)*z,(u*m-I*p)*z),g.set((x*n-A*s)*z,(x*r-A*t)*z,(x*p-A*m)*z),j[D].add(e),j[X].add(e),j[F].add(e),l[D].add(g),l[X].add(g),l[F].add(g)}var V=new THREE.Vector3,ga=new THREE.Vector3,Da=new THREE.Vector3,ab=new THREE.Vector3,N,da,ra;G=0;for(H=L.length;G<H;++G){K=L[G].start;D=L[G].count;M=L[G].index;J=K;for(K+=D;J<K;J+=3)D=M+b[J],X=M+b[J+1],F=M+b[J+2],a(D),a(X),a(F)}this.tangentsNeedUpdate=this.hasTangents=!0}},dispose:function(){this.dispatchEvent({type:"dispose"})}};
THREE.Camera=function(){THREE.Object3D.call(this);this.matrixWorldInverse=new THREE.Matrix4;this.projectionMatrix=new THREE.Matrix4;this.projectionMatrixInverse=new THREE.Matrix4};THREE.Camera.prototype=Object.create(THREE.Object3D.prototype);THREE.Camera.prototype.lookAt=function(a){this.matrix.lookAt(this.position,a,this.up);!0===this.rotationAutoUpdate&&(!1===this.useQuaternion?this.rotation.setEulerFromRotationMatrix(this.matrix,this.eulerOrder):this.quaternion.copy(this.matrix.decompose()[1]))};
THREE.OrthographicCamera=function(a,b,c,d,f,e){THREE.Camera.call(this);this.left=a;this.right=b;this.top=c;this.bottom=d;this.near=void 0!==f?f:0.1;this.far=void 0!==e?e:2E3;this.updateProjectionMatrix()};THREE.OrthographicCamera.prototype=Object.create(THREE.Camera.prototype);THREE.OrthographicCamera.prototype.updateProjectionMatrix=function(){this.projectionMatrix.makeOrthographic(this.left,this.right,this.top,this.bottom,this.near,this.far)};
THREE.PerspectiveCamera=function(a,b,c,d){THREE.Camera.call(this);this.fov=void 0!==a?a:50;this.aspect=void 0!==b?b:1;this.near=void 0!==c?c:0.1;this.far=void 0!==d?d:2E3;this.updateProjectionMatrix()};THREE.PerspectiveCamera.prototype=Object.create(THREE.Camera.prototype);THREE.PerspectiveCamera.prototype.setLens=function(a,b){void 0===b&&(b=24);this.fov=2*THREE.Math.radToDeg(Math.atan(b/(2*a)));this.updateProjectionMatrix()};
THREE.PerspectiveCamera.prototype.setViewOffset=function(a,b,c,d,f,e){this.fullWidth=a;this.fullHeight=b;this.x=c;this.y=d;this.width=f;this.height=e;this.updateProjectionMatrix()};
THREE.PerspectiveCamera.prototype.updateProjectionMatrix=function(){if(this.fullWidth){var a=this.fullWidth/this.fullHeight,b=Math.tan(THREE.Math.degToRad(0.5*this.fov))*this.near,c=-b,d=a*c,a=Math.abs(a*b-d),c=Math.abs(b-c);this.projectionMatrix.makeFrustum(d+this.x*a/this.fullWidth,d+(this.x+this.width)*a/this.fullWidth,b-(this.y+this.height)*c/this.fullHeight,b-this.y*c/this.fullHeight,this.near,this.far)}else this.projectionMatrix.makePerspective(this.fov,this.aspect,this.near,this.far)};
THREE.Light=function(a){THREE.Object3D.call(this);this.color=new THREE.Color(a)};THREE.Light.prototype=Object.create(THREE.Object3D.prototype);THREE.AmbientLight=function(a){THREE.Light.call(this,a)};THREE.AmbientLight.prototype=Object.create(THREE.Light.prototype);
THREE.AreaLight=function(a,b){THREE.Light.call(this,a);this.normal=new THREE.Vector3(0,-1,0);this.right=new THREE.Vector3(1,0,0);this.intensity=void 0!==b?b:1;this.height=this.width=1;this.constantAttenuation=1.5;this.linearAttenuation=0.5;this.quadraticAttenuation=0.1};THREE.AreaLight.prototype=Object.create(THREE.Light.prototype);
THREE.DirectionalLight=function(a,b){THREE.Light.call(this,a);this.position=new THREE.Vector3(0,1,0);this.target=new THREE.Object3D;this.intensity=void 0!==b?b:1;this.onlyShadow=this.castShadow=!1;this.shadowCameraNear=50;this.shadowCameraFar=5E3;this.shadowCameraLeft=-500;this.shadowCameraTop=this.shadowCameraRight=500;this.shadowCameraBottom=-500;this.shadowCameraVisible=!1;this.shadowBias=0;this.shadowDarkness=0.5;this.shadowMapHeight=this.shadowMapWidth=512;this.shadowCascade=!1;this.shadowCascadeOffset=
new THREE.Vector3(0,0,-1E3);this.shadowCascadeCount=2;this.shadowCascadeBias=[0,0,0];this.shadowCascadeWidth=[512,512,512];this.shadowCascadeHeight=[512,512,512];this.shadowCascadeNearZ=[-1,0.99,0.998];this.shadowCascadeFarZ=[0.99,0.998,1];this.shadowCascadeArray=[];this.shadowMatrix=this.shadowCamera=this.shadowMapSize=this.shadowMap=null};THREE.DirectionalLight.prototype=Object.create(THREE.Light.prototype);
THREE.HemisphereLight=function(a,b,c){THREE.Light.call(this,a);this.groundColor=new THREE.Color(b);this.position=new THREE.Vector3(0,100,0);this.intensity=void 0!==c?c:1};THREE.HemisphereLight.prototype=Object.create(THREE.Light.prototype);THREE.PointLight=function(a,b,c){THREE.Light.call(this,a);this.position=new THREE.Vector3(0,0,0);this.intensity=void 0!==b?b:1;this.distance=void 0!==c?c:0};THREE.PointLight.prototype=Object.create(THREE.Light.prototype);
THREE.SpotLight=function(a,b,c,d,f){THREE.Light.call(this,a);this.position=new THREE.Vector3(0,1,0);this.target=new THREE.Object3D;this.intensity=void 0!==b?b:1;this.distance=void 0!==c?c:0;this.angle=void 0!==d?d:Math.PI/2;this.exponent=void 0!==f?f:10;this.onlyShadow=this.castShadow=!1;this.shadowCameraNear=50;this.shadowCameraFar=5E3;this.shadowCameraFov=50;this.shadowCameraVisible=!1;this.shadowBias=0;this.shadowDarkness=0.5;this.shadowMapHeight=this.shadowMapWidth=512;this.shadowMatrix=this.shadowCamera=
this.shadowMapSize=this.shadowMap=null};THREE.SpotLight.prototype=Object.create(THREE.Light.prototype);THREE.Loader=function(a){this.statusDomElement=(this.showStatus=a)?THREE.Loader.prototype.addStatusElement():null;this.onLoadStart=function(){};this.onLoadProgress=function(){};this.onLoadComplete=function(){}};
THREE.Loader.prototype={constructor:THREE.Loader,crossOrigin:"anonymous",addStatusElement:function(){var a=document.createElement("div");a.style.position="absolute";a.style.right="0px";a.style.top="0px";a.style.fontSize="0.8em";a.style.textAlign="left";a.style.background="rgba(0,0,0,0.25)";a.style.color="#fff";a.style.width="120px";a.style.padding="0.5em 0.5em 0.5em 0.5em";a.style.zIndex=1E3;a.innerHTML="Loading ...";return a},updateProgress:function(a){var b="Loaded ",b=a.total?b+((100*a.loaded/
a.total).toFixed(0)+"%"):b+((a.loaded/1E3).toFixed(2)+" KB");this.statusDomElement.innerHTML=b},extractUrlBase:function(a){a=a.split("/");a.pop();return(1>a.length?".":a.join("/"))+"/"},initMaterials:function(a,b){for(var c=[],d=0;d<a.length;++d)c[d]=THREE.Loader.prototype.createMaterial(a[d],b);return c},needsTangents:function(a){for(var b=0,c=a.length;b<c;b++)if(a[b]instanceof THREE.ShaderMaterial)return!0;return!1},createMaterial:function(a,b){function c(a){a=Math.log(a)/Math.LN2;return Math.floor(a)==
a}function d(a){a=Math.log(a)/Math.LN2;return Math.pow(2,Math.round(a))}function f(a,f,e,h,j,l,v){var B=/\.dds$/i.test(e),q=b+"/"+e;if(B){var A=THREE.ImageUtils.loadCompressedTexture(q);a[f]=A}else A=document.createElement("canvas"),a[f]=new THREE.Texture(A);a[f].sourceFile=e;h&&(a[f].repeat.set(h[0],h[1]),1!==h[0]&&(a[f].wrapS=THREE.RepeatWrapping),1!==h[1]&&(a[f].wrapT=THREE.RepeatWrapping));j&&a[f].offset.set(j[0],j[1]);l&&(e={repeat:THREE.RepeatWrapping,mirror:THREE.MirroredRepeatWrapping},void 0!==
e[l[0]]&&(a[f].wrapS=e[l[0]]),void 0!==e[l[1]]&&(a[f].wrapT=e[l[1]]));v&&(a[f].anisotropy=v);if(!B){var u=a[f],a=new Image;a.onload=function(){if(!c(this.width)||!c(this.height)){var a=d(this.width),b=d(this.height);u.image.width=a;u.image.height=b;u.image.getContext("2d").drawImage(this,0,0,a,b)}else u.image=this;u.needsUpdate=!0};a.crossOrigin=g.crossOrigin;a.src=q}}function e(a){return(255*a[0]<<16)+(255*a[1]<<8)+255*a[2]}var g=this,h="MeshLambertMaterial",j={color:15658734,opacity:1,map:null,
lightMap:null,normalMap:null,bumpMap:null,wireframe:!1};if(a.shading){var l=a.shading.toLowerCase();"phong"===l?h="MeshPhongMaterial":"basic"===l&&(h="MeshBasicMaterial")}void 0!==a.blending&&void 0!==THREE[a.blending]&&(j.blending=THREE[a.blending]);if(void 0!==a.transparent||1>a.opacity)j.transparent=a.transparent;void 0!==a.depthTest&&(j.depthTest=a.depthTest);void 0!==a.depthWrite&&(j.depthWrite=a.depthWrite);void 0!==a.visible&&(j.visible=a.visible);void 0!==a.flipSided&&(j.side=THREE.BackSide);
void 0!==a.doubleSided&&(j.side=THREE.DoubleSide);void 0!==a.wireframe&&(j.wireframe=a.wireframe);void 0!==a.vertexColors&&("face"===a.vertexColors?j.vertexColors=THREE.FaceColors:a.vertexColors&&(j.vertexColors=THREE.VertexColors));a.colorDiffuse?j.color=e(a.colorDiffuse):a.DbgColor&&(j.color=a.DbgColor);a.colorSpecular&&(j.specular=e(a.colorSpecular));a.colorAmbient&&(j.ambient=e(a.colorAmbient));a.transparency&&(j.opacity=a.transparency);a.specularCoef&&(j.shininess=a.specularCoef);a.mapDiffuse&&
b&&f(j,"map",a.mapDiffuse,a.mapDiffuseRepeat,a.mapDiffuseOffset,a.mapDiffuseWrap,a.mapDiffuseAnisotropy);a.mapLight&&b&&f(j,"lightMap",a.mapLight,a.mapLightRepeat,a.mapLightOffset,a.mapLightWrap,a.mapLightAnisotropy);a.mapBump&&b&&f(j,"bumpMap",a.mapBump,a.mapBumpRepeat,a.mapBumpOffset,a.mapBumpWrap,a.mapBumpAnisotropy);a.mapNormal&&b&&f(j,"normalMap",a.mapNormal,a.mapNormalRepeat,a.mapNormalOffset,a.mapNormalWrap,a.mapNormalAnisotropy);a.mapSpecular&&b&&f(j,"specularMap",a.mapSpecular,a.mapSpecularRepeat,
a.mapSpecularOffset,a.mapSpecularWrap,a.mapSpecularAnisotropy);a.mapBumpScale&&(j.bumpScale=a.mapBumpScale);a.mapNormal?(h=THREE.ShaderLib.normalmap,l=THREE.UniformsUtils.clone(h.uniforms),l.tNormal.value=j.normalMap,a.mapNormalFactor&&l.uNormalScale.value.set(a.mapNormalFactor,a.mapNormalFactor),j.map&&(l.tDiffuse.value=j.map,l.enableDiffuse.value=!0),j.specularMap&&(l.tSpecular.value=j.specularMap,l.enableSpecular.value=!0),j.lightMap&&(l.tAO.value=j.lightMap,l.enableAO.value=!0),l.uDiffuseColor.value.setHex(j.color),
l.uSpecularColor.value.setHex(j.specular),l.uAmbientColor.value.setHex(j.ambient),l.uShininess.value=j.shininess,void 0!==j.opacity&&(l.uOpacity.value=j.opacity),h=new THREE.ShaderMaterial({fragmentShader:h.fragmentShader,vertexShader:h.vertexShader,uniforms:l,lights:!0,fog:!0}),j.transparent&&(h.transparent=!0)):h=new THREE[h](j);void 0!==a.DbgName&&(h.name=a.DbgName);return h}};THREE.ImageLoader=function(){THREE.EventDispatcher.call(this);this.crossOrigin=null};
THREE.ImageLoader.prototype={constructor:THREE.ImageLoader,load:function(a,b){var c=this;void 0===b&&(b=new Image);b.addEventListener("load",function(){c.dispatchEvent({type:"load",content:b})},!1);b.addEventListener("error",function(){c.dispatchEvent({type:"error",message:"Couldn't load URL ["+a+"]"})},!1);c.crossOrigin&&(b.crossOrigin=c.crossOrigin);b.src=a}};THREE.JSONLoader=function(a){THREE.Loader.call(this,a);this.withCredentials=!1};THREE.JSONLoader.prototype=Object.create(THREE.Loader.prototype);
THREE.JSONLoader.prototype.load=function(a,b,c){c=c&&"string"===typeof c?c:this.extractUrlBase(a);this.onLoadStart();this.loadAjaxJSON(this,a,b,c)};
THREE.JSONLoader.prototype.loadAjaxJSON=function(a,b,c,d,f){var e=new XMLHttpRequest,g=0;e.onreadystatechange=function(){if(e.readyState===e.DONE)if(200===e.status||0===e.status){if(e.responseText){var h=JSON.parse(e.responseText);a.createModel(h,c,d)}else console.warn("THREE.JSONLoader: ["+b+"] seems to be unreachable or file there is empty");a.onLoadComplete()}else console.error("THREE.JSONLoader: Couldn't load ["+b+"] ["+e.status+"]");else e.readyState===e.LOADING?f&&(0===g&&(g=e.getResponseHeader("Content-Length")),
f({total:g,loaded:e.responseText.length})):e.readyState===e.HEADERS_RECEIVED&&(g=e.getResponseHeader("Content-Length"))};e.open("GET",b,!0);e.withCredentials=this.withCredentials;e.send(null)};
THREE.JSONLoader.prototype.createModel=function(a,b,c){var d=new THREE.Geometry,f=void 0!==a.scale?1/a.scale:1,e,g,h,j,l,n,r,p,s,t,m,v,B,q,A,u=a.faces;t=a.vertices;var x=a.normals,I=a.colors,C=0;for(e=0;e<a.uvs.length;e++)a.uvs[e].length&&C++;for(e=0;e<C;e++)d.faceUvs[e]=[],d.faceVertexUvs[e]=[];j=0;for(l=t.length;j<l;)n=new THREE.Vector3,n.x=t[j++]*f,n.y=t[j++]*f,n.z=t[j++]*f,d.vertices.push(n);j=0;for(l=u.length;j<l;){t=u[j++];n=t&1;h=t&2;e=t&4;g=t&8;p=t&16;r=t&32;m=t&64;t&=128;n?(v=new THREE.Face4,
v.a=u[j++],v.b=u[j++],v.c=u[j++],v.d=u[j++],n=4):(v=new THREE.Face3,v.a=u[j++],v.b=u[j++],v.c=u[j++],n=3);h&&(h=u[j++],v.materialIndex=h);h=d.faces.length;if(e)for(e=0;e<C;e++)B=a.uvs[e],s=u[j++],A=B[2*s],s=B[2*s+1],d.faceUvs[e][h]=new THREE.Vector2(A,s);if(g)for(e=0;e<C;e++){B=a.uvs[e];q=[];for(g=0;g<n;g++)s=u[j++],A=B[2*s],s=B[2*s+1],q[g]=new THREE.Vector2(A,s);d.faceVertexUvs[e][h]=q}p&&(p=3*u[j++],g=new THREE.Vector3,g.x=x[p++],g.y=x[p++],g.z=x[p],v.normal=g);if(r)for(e=0;e<n;e++)p=3*u[j++],g=
new THREE.Vector3,g.x=x[p++],g.y=x[p++],g.z=x[p],v.vertexNormals.push(g);m&&(r=u[j++],r=new THREE.Color(I[r]),v.color=r);if(t)for(e=0;e<n;e++)r=u[j++],r=new THREE.Color(I[r]),v.vertexColors.push(r);d.faces.push(v)}if(a.skinWeights){j=0;for(l=a.skinWeights.length;j<l;j+=2)u=a.skinWeights[j],x=a.skinWeights[j+1],d.skinWeights.push(new THREE.Vector4(u,x,0,0))}if(a.skinIndices){j=0;for(l=a.skinIndices.length;j<l;j+=2)u=a.skinIndices[j],x=a.skinIndices[j+1],d.skinIndices.push(new THREE.Vector4(u,x,0,0))}d.bones=
a.bones;d.animation=a.animation;if(void 0!==a.morphTargets){j=0;for(l=a.morphTargets.length;j<l;j++){d.morphTargets[j]={};d.morphTargets[j].name=a.morphTargets[j].name;d.morphTargets[j].vertices=[];I=d.morphTargets[j].vertices;C=a.morphTargets[j].vertices;u=0;for(x=C.length;u<x;u+=3)t=new THREE.Vector3,t.x=C[u]*f,t.y=C[u+1]*f,t.z=C[u+2]*f,I.push(t)}}if(void 0!==a.morphColors){j=0;for(l=a.morphColors.length;j<l;j++){d.morphColors[j]={};d.morphColors[j].name=a.morphColors[j].name;d.morphColors[j].colors=
[];x=d.morphColors[j].colors;I=a.morphColors[j].colors;f=0;for(u=I.length;f<u;f+=3)C=new THREE.Color(16755200),C.setRGB(I[f],I[f+1],I[f+2]),x.push(C)}}d.computeCentroids();d.computeFaceNormals();a=this.initMaterials(a.materials,c);this.needsTangents(a)&&d.computeTangents();b(d,a)};
THREE.LoadingMonitor=function(){THREE.EventDispatcher.call(this);var a=this,b=0,c=0,d=function(){b++;a.dispatchEvent({type:"progress",loaded:b,total:c});b===c&&a.dispatchEvent({type:"load"})};this.add=function(a){c++;a.addEventListener("load",d,!1)}};
THREE.SceneLoader=function(){this.onLoadStart=function(){};this.onLoadProgress=function(){};this.onLoadComplete=function(){};this.callbackSync=function(){};this.callbackProgress=function(){};this.geometryHandlerMap={};this.hierarchyHandlerMap={};this.addGeometryHandler("ascii",THREE.JSONLoader)};THREE.SceneLoader.prototype.constructor=THREE.SceneLoader;
THREE.SceneLoader.prototype.load=function(a,b){var c=this,d=new XMLHttpRequest;d.onreadystatechange=function(){if(4===d.readyState)if(200===d.status||0===d.status){var f=JSON.parse(d.responseText);c.parse(f,b,a)}else console.error("THREE.SceneLoader: Couldn't load ["+a+"] ["+d.status+"]")};d.open("GET",a,!0);d.send(null)};THREE.SceneLoader.prototype.addGeometryHandler=function(a,b){this.geometryHandlerMap[a]={loaderClass:b}};
THREE.SceneLoader.prototype.addHierarchyHandler=function(a,b){this.hierarchyHandlerMap[a]={loaderClass:b}};
THREE.SceneLoader.prototype.parse=function(a,b,c){function d(a,b){return"relativeToHTML"==b?a:r+"/"+a}function f(){e(z.scene,K.objects)}function e(a,b){var c,f,g,j,l,r,u;for(u in b)if(void 0===z.objects[u]){var m=b[u],x=null;if(m.type&&m.type in n.hierarchyHandlerMap){if(void 0===m.loading){f={type:1,url:1,material:1,position:1,rotation:1,scale:1,visible:1,children:1,properties:1,skin:1,morph:1,mirroredLoop:1,duration:1};g={};for(var v in m)v in f||(g[v]=m[v]);s=z.materials[m.material];m.loading=
!0;f=n.hierarchyHandlerMap[m.type].loaderObject;f.options?f.load(d(m.url,K.urlBaseType),h(u,a,s,m)):f.load(d(m.url,K.urlBaseType),h(u,a,s,m),g)}}else if(void 0!==m.geometry){if(p=z.geometries[m.geometry]){s=z.materials[m.material];x=s instanceof THREE.ShaderMaterial;g=m.position;j=m.rotation;l=m.scale;c=m.matrix;r=m.quaternion;m.material||(s=new THREE.MeshFaceMaterial(z.face_materials[m.geometry]));s instanceof THREE.MeshFaceMaterial&&0===s.materials.length&&(s=new THREE.MeshFaceMaterial(z.face_materials[m.geometry]));
if(s instanceof THREE.MeshFaceMaterial)for(f=0;f<s.materials.length;f++)x=x||s.materials[f]instanceof THREE.ShaderMaterial;x&&p.computeTangents();m.skin?x=new THREE.SkinnedMesh(p,s):m.morph?(x=new THREE.MorphAnimMesh(p,s),void 0!==m.duration&&(x.duration=m.duration),void 0!==m.time&&(x.time=m.time),void 0!==m.mirroredLoop&&(x.mirroredLoop=m.mirroredLoop),s.morphNormals&&p.computeMorphNormals()):x=new THREE.Mesh(p,s);x.name=u;c?(x.matrixAutoUpdate=!1,x.matrix.set(c[0],c[1],c[2],c[3],c[4],c[5],c[6],
c[7],c[8],c[9],c[10],c[11],c[12],c[13],c[14],c[15])):(x.position.set(g[0],g[1],g[2]),r?(x.quaternion.set(r[0],r[1],r[2],r[3]),x.useQuaternion=!0):x.rotation.set(j[0],j[1],j[2]),x.scale.set(l[0],l[1],l[2]));x.visible=m.visible;x.castShadow=m.castShadow;x.receiveShadow=m.receiveShadow;a.add(x);z.objects[u]=x}}else"DirectionalLight"===m.type||"PointLight"===m.type||"AmbientLight"===m.type?(q=void 0!==m.color?m.color:16777215,A=void 0!==m.intensity?m.intensity:1,"DirectionalLight"===m.type?(g=m.direction,
B=new THREE.DirectionalLight(q,A),B.position.set(g[0],g[1],g[2]),m.target&&(J.push({object:B,targetName:m.target}),B.target=null)):"PointLight"===m.type?(g=m.position,f=m.distance,B=new THREE.PointLight(q,A,f),B.position.set(g[0],g[1],g[2])):"AmbientLight"===m.type&&(B=new THREE.AmbientLight(q)),a.add(B),B.name=u,z.lights[u]=B,z.objects[u]=B):"PerspectiveCamera"===m.type||"OrthographicCamera"===m.type?("PerspectiveCamera"===m.type?t=new THREE.PerspectiveCamera(m.fov,m.aspect,m.near,m.far):"OrthographicCamera"===
m.type&&(t=new THREE.OrthographicCamera(m.left,m.right,m.top,m.bottom,m.near,m.far)),g=m.position,t.position.set(g[0],g[1],g[2]),a.add(t),t.name=u,z.cameras[u]=t,z.objects[u]=t):(g=m.position,j=m.rotation,l=m.scale,r=m.quaternion,x=new THREE.Object3D,x.name=u,x.position.set(g[0],g[1],g[2]),r?(x.quaternion.set(r[0],r[1],r[2],r[3]),x.useQuaternion=!0):x.rotation.set(j[0],j[1],j[2]),x.scale.set(l[0],l[1],l[2]),x.visible=void 0!==m.visible?m.visible:!1,a.add(x),z.objects[u]=x,z.empties[u]=x);if(x){if(void 0!==
m.properties)for(var I in m.properties)x.properties[I]=m.properties[I];if(void 0!==m.groups)for(f=0;f<m.groups.length;f++)g=m.groups[f],void 0===z.groups[g]&&(z.groups[g]=[]),z.groups[g].push(u);void 0!==m.children&&e(x,m.children)}}}function g(a){return function(b,c){z.geometries[a]=b;z.face_materials[a]=c;f();u-=1;n.onLoadComplete();l()}}function h(a,b,c,d){return function(e){var e=e.content?e.content:e.dae?e.scene:e,g=d.position,h=d.rotation,j=d.quaternion,q=d.scale;e.position.set(g[0],g[1],g[2]);
j?(e.quaternion.set(j[0],j[1],j[2],j[3]),e.useQuaternion=!0):e.rotation.set(h[0],h[1],h[2]);e.scale.set(q[0],q[1],q[2]);c&&e.traverse(function(a){a.material=c});var m=void 0!==d.visible?d.visible:!0;e.traverse(function(a){a.visible=m});b.add(e);e.name=a;z.objects[a]=e;f();u-=1;n.onLoadComplete();l()}}function j(a){return function(b,c){z.geometries[a]=b;z.face_materials[a]=c}}function l(){n.callbackProgress({totalModels:I,totalTextures:C,loadedModels:I-u,loadedTextures:C-x},z);n.onLoadProgress();if(0===
u&&0===x){for(var a=0;a<J.length;a++){var c=J[a],d=z.objects[c.targetName];d?c.object.target=d:(c.object.target=new THREE.Object3D,z.scene.add(c.object.target));c.object.target.properties.targetInverse=c.object}b(z)}}var n=this,r=THREE.Loader.prototype.extractUrlBase(c),p,s,t,m,v,B,q,A,u,x,I,C,z,J=[],K=a,G;for(G in this.geometryHandlerMap)a=this.geometryHandlerMap[G].loaderClass,this.geometryHandlerMap[G].loaderObject=new a;for(G in this.hierarchyHandlerMap)a=this.hierarchyHandlerMap[G].loaderClass,
this.hierarchyHandlerMap[G].loaderObject=new a;x=u=0;z={scene:new THREE.Scene,geometries:{},face_materials:{},materials:{},textures:{},objects:{},cameras:{},lights:{},fogs:{},empties:{},groups:{}};if(K.transform&&(G=K.transform.position,a=K.transform.rotation,c=K.transform.scale,G&&z.scene.position.set(G[0],G[1],G[2]),a&&z.scene.rotation.set(a[0],a[1],a[2]),c&&z.scene.scale.set(c[0],c[1],c[2]),G||a||c))z.scene.updateMatrix(),z.scene.updateMatrixWorld();G=function(a){return function(){x-=a;l();n.onLoadComplete()}};
for(var H in K.fogs)a=K.fogs[H],"linear"===a.type?m=new THREE.Fog(0,a.near,a.far):"exp2"===a.type&&(m=new THREE.FogExp2(0,a.density)),a=a.color,m.color.setRGB(a[0],a[1],a[2]),z.fogs[H]=m;for(var D in K.geometries)m=K.geometries[D],m.type in this.geometryHandlerMap&&(u+=1,n.onLoadStart());for(var X in K.objects)m=K.objects[X],m.type&&m.type in this.hierarchyHandlerMap&&(u+=1,n.onLoadStart());I=u;for(D in K.geometries)if(m=K.geometries[D],"cube"===m.type)p=new THREE.CubeGeometry(m.width,m.height,m.depth,
m.widthSegments,m.heightSegments,m.depthSegments),z.geometries[D]=p;else if("plane"===m.type)p=new THREE.PlaneGeometry(m.width,m.height,m.widthSegments,m.heightSegments),z.geometries[D]=p;else if("sphere"===m.type)p=new THREE.SphereGeometry(m.radius,m.widthSegments,m.heightSegments),z.geometries[D]=p;else if("cylinder"===m.type)p=new THREE.CylinderGeometry(m.topRad,m.botRad,m.height,m.radSegs,m.heightSegs),z.geometries[D]=p;else if("torus"===m.type)p=new THREE.TorusGeometry(m.radius,m.tube,m.segmentsR,
m.segmentsT),z.geometries[D]=p;else if("icosahedron"===m.type)p=new THREE.IcosahedronGeometry(m.radius,m.subdivisions),z.geometries[D]=p;else if(m.type in this.geometryHandlerMap){X={};for(v in m)"type"!==v&&"url"!==v&&(X[v]=m[v]);this.geometryHandlerMap[m.type].loaderObject.load(d(m.url,K.urlBaseType),g(D),X)}else"embedded"===m.type&&(X=K.embeds[m.id],X.metadata=K.metadata,X&&this.geometryHandlerMap.ascii.loaderObject.createModel(X,j(D),""));for(var F in K.textures)if(D=K.textures[F],D.url instanceof
Array){x+=D.url.length;for(v=0;v<D.url.length;v++)n.onLoadStart()}else x+=1,n.onLoadStart();C=x;for(F in K.textures){D=K.textures[F];void 0!==D.mapping&&void 0!==THREE[D.mapping]&&(D.mapping=new THREE[D.mapping]);if(D.url instanceof Array){X=D.url.length;m=[];for(v=0;v<X;v++)m[v]=d(D.url[v],K.urlBaseType);v=(v=/\.dds$/i.test(m[0]))?THREE.ImageUtils.loadCompressedTextureCube(m,D.mapping,G(X)):THREE.ImageUtils.loadTextureCube(m,D.mapping,G(X))}else v=/\.dds$/i.test(D.url),X=d(D.url,K.urlBaseType),m=
G(1),v=v?THREE.ImageUtils.loadCompressedTexture(X,D.mapping,m):THREE.ImageUtils.loadTexture(X,D.mapping,m),void 0!==THREE[D.minFilter]&&(v.minFilter=THREE[D.minFilter]),void 0!==THREE[D.magFilter]&&(v.magFilter=THREE[D.magFilter]),D.anisotropy&&(v.anisotropy=D.anisotropy),D.repeat&&(v.repeat.set(D.repeat[0],D.repeat[1]),1!==D.repeat[0]&&(v.wrapS=THREE.RepeatWrapping),1!==D.repeat[1]&&(v.wrapT=THREE.RepeatWrapping)),D.offset&&v.offset.set(D.offset[0],D.offset[1]),D.wrap&&(X={repeat:THREE.RepeatWrapping,
mirror:THREE.MirroredRepeatWrapping},void 0!==X[D.wrap[0]]&&(v.wrapS=X[D.wrap[0]]),void 0!==X[D.wrap[1]]&&(v.wrapT=X[D.wrap[1]]));z.textures[F]=v}var L,M;for(L in K.materials){F=K.materials[L];for(M in F.parameters)"envMap"===M||"map"===M||"lightMap"===M||"bumpMap"===M?F.parameters[M]=z.textures[F.parameters[M]]:"shading"===M?F.parameters[M]="flat"===F.parameters[M]?THREE.FlatShading:THREE.SmoothShading:"side"===M?F.parameters[M]="double"==F.parameters[M]?THREE.DoubleSide:"back"==F.parameters[M]?
THREE.BackSide:THREE.FrontSide:"blending"===M?F.parameters[M]=F.parameters[M]in THREE?THREE[F.parameters[M]]:THREE.NormalBlending:"combine"===M?F.parameters[M]=F.parameters[M]in THREE?THREE[F.parameters[M]]:THREE.MultiplyOperation:"vertexColors"===M?"face"==F.parameters[M]?F.parameters[M]=THREE.FaceColors:F.parameters[M]&&(F.parameters[M]=THREE.VertexColors):"wrapRGB"===M&&(G=F.parameters[M],F.parameters[M]=new THREE.Vector3(G[0],G[1],G[2]));void 0!==F.parameters.opacity&&1>F.parameters.opacity&&
(F.parameters.transparent=!0);F.parameters.normalMap?(G=THREE.ShaderLib.normalmap,D=THREE.UniformsUtils.clone(G.uniforms),v=F.parameters.color,X=F.parameters.specular,m=F.parameters.ambient,H=F.parameters.shininess,D.tNormal.value=z.textures[F.parameters.normalMap],F.parameters.normalScale&&D.uNormalScale.value.set(F.parameters.normalScale[0],F.parameters.normalScale[1]),F.parameters.map&&(D.tDiffuse.value=F.parameters.map,D.enableDiffuse.value=!0),F.parameters.envMap&&(D.tCube.value=F.parameters.envMap,
D.enableReflection.value=!0,D.uReflectivity.value=F.parameters.reflectivity),F.parameters.lightMap&&(D.tAO.value=F.parameters.lightMap,D.enableAO.value=!0),F.parameters.specularMap&&(D.tSpecular.value=z.textures[F.parameters.specularMap],D.enableSpecular.value=!0),F.parameters.displacementMap&&(D.tDisplacement.value=z.textures[F.parameters.displacementMap],D.enableDisplacement.value=!0,D.uDisplacementBias.value=F.parameters.displacementBias,D.uDisplacementScale.value=F.parameters.displacementScale),
D.uDiffuseColor.value.setHex(v),D.uSpecularColor.value.setHex(X),D.uAmbientColor.value.setHex(m),D.uShininess.value=H,F.parameters.opacity&&(D.uOpacity.value=F.parameters.opacity),s=new THREE.ShaderMaterial({fragmentShader:G.fragmentShader,vertexShader:G.vertexShader,uniforms:D,lights:!0,fog:!0})):s=new THREE[F.type](F.parameters);z.materials[L]=s}for(L in K.materials)if(F=K.materials[L],F.parameters.materials){M=[];for(v=0;v<F.parameters.materials.length;v++)M.push(z.materials[F.parameters.materials[v]]);
z.materials[L].materials=M}f();z.cameras&&K.defaults.camera&&(z.currentCamera=z.cameras[K.defaults.camera]);z.fogs&&K.defaults.fog&&(z.scene.fog=z.fogs[K.defaults.fog]);n.callbackSync(z);l()};THREE.TextureLoader=function(){THREE.EventDispatcher.call(this);this.crossOrigin=null};
THREE.TextureLoader.prototype={constructor:THREE.TextureLoader,load:function(a){var b=this,c=new Image;c.addEventListener("load",function(){var a=new THREE.Texture(c);a.needsUpdate=!0;b.dispatchEvent({type:"load",content:a})},!1);c.addEventListener("error",function(){b.dispatchEvent({type:"error",message:"Couldn't load URL ["+a+"]"})},!1);b.crossOrigin&&(c.crossOrigin=b.crossOrigin);c.src=a}};
THREE.Material=function(){THREE.EventDispatcher.call(this);this.id=THREE.MaterialIdCount++;this.name="";this.side=THREE.FrontSide;this.opacity=1;this.transparent=!1;this.blending=THREE.NormalBlending;this.blendSrc=THREE.SrcAlphaFactor;this.blendDst=THREE.OneMinusSrcAlphaFactor;this.blendEquation=THREE.AddEquation;this.depthWrite=this.depthTest=!0;this.polygonOffset=!1;this.alphaTest=this.polygonOffsetUnits=this.polygonOffsetFactor=0;this.overdraw=!1;this.needsUpdate=this.visible=!0};
THREE.Material.prototype.setValues=function(a){if(void 0!==a)for(var b in a){var c=a[b];if(void 0===c)console.warn("THREE.Material: '"+b+"' parameter is undefined.");else if(b in this){var d=this[b];d instanceof THREE.Color&&c instanceof THREE.Color?d.copy(c):d instanceof THREE.Color?d.set(c):d instanceof THREE.Vector3&&c instanceof THREE.Vector3?d.copy(c):this[b]=c}}};
THREE.Material.prototype.clone=function(a){void 0===a&&(a=new THREE.Material);a.name=this.name;a.side=this.side;a.opacity=this.opacity;a.transparent=this.transparent;a.blending=this.blending;a.blendSrc=this.blendSrc;a.blendDst=this.blendDst;a.blendEquation=this.blendEquation;a.depthTest=this.depthTest;a.depthWrite=this.depthWrite;a.polygonOffset=this.polygonOffset;a.polygonOffsetFactor=this.polygonOffsetFactor;a.polygonOffsetUnits=this.polygonOffsetUnits;a.alphaTest=this.alphaTest;a.overdraw=this.overdraw;
a.visible=this.visible;return a};THREE.Material.prototype.dispose=function(){this.dispatchEvent({type:"dispose"})};THREE.MaterialIdCount=0;THREE.LineBasicMaterial=function(a){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.linewidth=1;this.linejoin=this.linecap="round";this.vertexColors=!1;this.fog=!0;this.setValues(a)};THREE.LineBasicMaterial.prototype=Object.create(THREE.Material.prototype);
THREE.LineBasicMaterial.prototype.clone=function(){var a=new THREE.LineBasicMaterial;THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.linewidth=this.linewidth;a.linecap=this.linecap;a.linejoin=this.linejoin;a.vertexColors=this.vertexColors;a.fog=this.fog;return a};THREE.LineDashedMaterial=function(a){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.scale=this.linewidth=1;this.dashSize=3;this.gapSize=1;this.vertexColors=!1;this.fog=!0;this.setValues(a)};
THREE.LineDashedMaterial.prototype=Object.create(THREE.Material.prototype);THREE.LineDashedMaterial.prototype.clone=function(){var a=new THREE.LineDashedMaterial;THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.linewidth=this.linewidth;a.scale=this.scale;a.dashSize=this.dashSize;a.gapSize=this.gapSize;a.vertexColors=this.vertexColors;a.fog=this.fog;return a};
THREE.MeshBasicMaterial=function(a){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.envMap=this.specularMap=this.lightMap=this.map=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refractionRatio=0.98;this.fog=!0;this.shading=THREE.SmoothShading;this.wireframe=!1;this.wireframeLinewidth=1;this.wireframeLinejoin=this.wireframeLinecap="round";this.vertexColors=THREE.NoColors;this.morphTargets=this.skinning=!1;this.setValues(a)};
THREE.MeshBasicMaterial.prototype=Object.create(THREE.Material.prototype);
THREE.MeshBasicMaterial.prototype.clone=function(){var a=new THREE.MeshBasicMaterial;THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.map=this.map;a.lightMap=this.lightMap;a.specularMap=this.specularMap;a.envMap=this.envMap;a.combine=this.combine;a.reflectivity=this.reflectivity;a.refractionRatio=this.refractionRatio;a.fog=this.fog;a.shading=this.shading;a.wireframe=this.wireframe;a.wireframeLinewidth=this.wireframeLinewidth;a.wireframeLinecap=this.wireframeLinecap;a.wireframeLinejoin=
this.wireframeLinejoin;a.vertexColors=this.vertexColors;a.skinning=this.skinning;a.morphTargets=this.morphTargets;return a};
THREE.MeshLambertMaterial=function(a){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.ambient=new THREE.Color(16777215);this.emissive=new THREE.Color(0);this.wrapAround=!1;this.wrapRGB=new THREE.Vector3(1,1,1);this.envMap=this.specularMap=this.lightMap=this.map=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refractionRatio=0.98;this.fog=!0;this.shading=THREE.SmoothShading;this.wireframe=!1;this.wireframeLinewidth=1;this.wireframeLinejoin=this.wireframeLinecap=
"round";this.vertexColors=THREE.NoColors;this.morphNormals=this.morphTargets=this.skinning=!1;this.setValues(a)};THREE.MeshLambertMaterial.prototype=Object.create(THREE.Material.prototype);
THREE.MeshLambertMaterial.prototype.clone=function(){var a=new THREE.MeshLambertMaterial;THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.ambient.copy(this.ambient);a.emissive.copy(this.emissive);a.wrapAround=this.wrapAround;a.wrapRGB.copy(this.wrapRGB);a.map=this.map;a.lightMap=this.lightMap;a.specularMap=this.specularMap;a.envMap=this.envMap;a.combine=this.combine;a.reflectivity=this.reflectivity;a.refractionRatio=this.refractionRatio;a.fog=this.fog;a.shading=this.shading;
a.wireframe=this.wireframe;a.wireframeLinewidth=this.wireframeLinewidth;a.wireframeLinecap=this.wireframeLinecap;a.wireframeLinejoin=this.wireframeLinejoin;a.vertexColors=this.vertexColors;a.skinning=this.skinning;a.morphTargets=this.morphTargets;a.morphNormals=this.morphNormals;return a};
THREE.MeshPhongMaterial=function(a){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.ambient=new THREE.Color(16777215);this.emissive=new THREE.Color(0);this.specular=new THREE.Color(1118481);this.shininess=30;this.metal=!1;this.perPixel=!0;this.wrapAround=!1;this.wrapRGB=new THREE.Vector3(1,1,1);this.bumpMap=this.lightMap=this.map=null;this.bumpScale=1;this.normalMap=null;this.normalScale=new THREE.Vector2(1,1);this.envMap=this.specularMap=null;this.combine=THREE.MultiplyOperation;
this.reflectivity=1;this.refractionRatio=0.98;this.fog=!0;this.shading=THREE.SmoothShading;this.wireframe=!1;this.wireframeLinewidth=1;this.wireframeLinejoin=this.wireframeLinecap="round";this.vertexColors=THREE.NoColors;this.morphNormals=this.morphTargets=this.skinning=!1;this.setValues(a)};THREE.MeshPhongMaterial.prototype=Object.create(THREE.Material.prototype);
THREE.MeshPhongMaterial.prototype.clone=function(){var a=new THREE.MeshPhongMaterial;THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.ambient.copy(this.ambient);a.emissive.copy(this.emissive);a.specular.copy(this.specular);a.shininess=this.shininess;a.metal=this.metal;a.perPixel=this.perPixel;a.wrapAround=this.wrapAround;a.wrapRGB.copy(this.wrapRGB);a.map=this.map;a.lightMap=this.lightMap;a.bumpMap=this.bumpMap;a.bumpScale=this.bumpScale;a.normalMap=this.normalMap;a.normalScale.copy(this.normalScale);
a.specularMap=this.specularMap;a.envMap=this.envMap;a.combine=this.combine;a.reflectivity=this.reflectivity;a.refractionRatio=this.refractionRatio;a.fog=this.fog;a.shading=this.shading;a.wireframe=this.wireframe;a.wireframeLinewidth=this.wireframeLinewidth;a.wireframeLinecap=this.wireframeLinecap;a.wireframeLinejoin=this.wireframeLinejoin;a.vertexColors=this.vertexColors;a.skinning=this.skinning;a.morphTargets=this.morphTargets;a.morphNormals=this.morphNormals;return a};
THREE.MeshDepthMaterial=function(a){THREE.Material.call(this);this.wireframe=!1;this.wireframeLinewidth=1;this.setValues(a)};THREE.MeshDepthMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshDepthMaterial.prototype.clone=function(){var a=new THREE.LineBasicMaterial;THREE.Material.prototype.clone.call(this,a);a.wireframe=this.wireframe;a.wireframeLinewidth=this.wireframeLinewidth;return a};
THREE.MeshNormalMaterial=function(a){THREE.Material.call(this,a);this.shading=THREE.FlatShading;this.wireframe=!1;this.wireframeLinewidth=1;this.setValues(a)};THREE.MeshNormalMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshNormalMaterial.prototype.clone=function(){var a=new THREE.MeshNormalMaterial;THREE.Material.prototype.clone.call(this,a);a.shading=this.shading;a.wireframe=this.wireframe;a.wireframeLinewidth=this.wireframeLinewidth;return a};
THREE.MeshFaceMaterial=function(a){this.materials=a instanceof Array?a:[]};THREE.MeshFaceMaterial.prototype.clone=function(){return new THREE.MeshFaceMaterial(this.materials.slice(0))};THREE.ParticleBasicMaterial=function(a){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.map=null;this.size=1;this.sizeAttenuation=!0;this.vertexColors=!1;this.fog=!0;this.setValues(a)};THREE.ParticleBasicMaterial.prototype=Object.create(THREE.Material.prototype);
THREE.ParticleBasicMaterial.prototype.clone=function(){var a=new THREE.ParticleBasicMaterial;THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.map=this.map;a.size=this.size;a.sizeAttenuation=this.sizeAttenuation;a.vertexColors=this.vertexColors;a.fog=this.fog;return a};THREE.ParticleCanvasMaterial=function(a){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.program=function(){};this.setValues(a)};THREE.ParticleCanvasMaterial.prototype=Object.create(THREE.Material.prototype);
THREE.ParticleCanvasMaterial.prototype.clone=function(){var a=new THREE.ParticleCanvasMaterial;THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.program=this.program;return a};
THREE.ShaderMaterial=function(a){THREE.Material.call(this);this.vertexShader=this.fragmentShader="void main() {}";this.uniforms={};this.defines={};this.attributes=null;this.shading=THREE.SmoothShading;this.wireframe=!1;this.wireframeLinewidth=1;this.lights=this.fog=!1;this.vertexColors=THREE.NoColors;this.morphNormals=this.morphTargets=this.skinning=!1;this.setValues(a)};THREE.ShaderMaterial.prototype=Object.create(THREE.Material.prototype);
THREE.ShaderMaterial.prototype.clone=function(){var a=new THREE.ShaderMaterial;THREE.Material.prototype.clone.call(this,a);a.fragmentShader=this.fragmentShader;a.vertexShader=this.vertexShader;a.uniforms=THREE.UniformsUtils.clone(this.uniforms);a.attributes=this.attributes;a.defines=this.defines;a.shading=this.shading;a.wireframe=this.wireframe;a.wireframeLinewidth=this.wireframeLinewidth;a.fog=this.fog;a.lights=this.lights;a.vertexColors=this.vertexColors;a.skinning=this.skinning;a.morphTargets=
this.morphTargets;a.morphNormals=this.morphNormals;return a};
THREE.SpriteMaterial=function(a){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.map=new THREE.Texture;this.useScreenCoordinates=!0;this.depthTest=!this.useScreenCoordinates;this.sizeAttenuation=!this.useScreenCoordinates;this.scaleByViewport=!this.sizeAttenuation;this.alignment=THREE.SpriteAlignment.center.clone();this.fog=!1;this.uvOffset=new THREE.Vector2(0,0);this.uvScale=new THREE.Vector2(1,1);this.setValues(a);a=a||{};void 0===a.depthTest&&(this.depthTest=!this.useScreenCoordinates);
void 0===a.sizeAttenuation&&(this.sizeAttenuation=!this.useScreenCoordinates);void 0===a.scaleByViewport&&(this.scaleByViewport=!this.sizeAttenuation)};THREE.SpriteMaterial.prototype=Object.create(THREE.Material.prototype);
THREE.SpriteMaterial.prototype.clone=function(){var a=new THREE.SpriteMaterial;THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.map=this.map;a.useScreenCoordinates=this.useScreenCoordinates;a.sizeAttenuation=this.sizeAttenuation;a.scaleByViewport=this.scaleByViewport;a.alignment.copy(this.alignment);a.uvOffset.copy(this.uvOffset);a.uvScale.copy(this.uvScale);a.fog=this.fog;return a};THREE.SpriteAlignment={};THREE.SpriteAlignment.topLeft=new THREE.Vector2(1,-1);
THREE.SpriteAlignment.topCenter=new THREE.Vector2(0,-1);THREE.SpriteAlignment.topRight=new THREE.Vector2(-1,-1);THREE.SpriteAlignment.centerLeft=new THREE.Vector2(1,0);THREE.SpriteAlignment.center=new THREE.Vector2(0,0);THREE.SpriteAlignment.centerRight=new THREE.Vector2(-1,0);THREE.SpriteAlignment.bottomLeft=new THREE.Vector2(1,1);THREE.SpriteAlignment.bottomCenter=new THREE.Vector2(0,1);THREE.SpriteAlignment.bottomRight=new THREE.Vector2(-1,1);
THREE.Texture=function(a,b,c,d,f,e,g,h,j){THREE.EventDispatcher.call(this);this.id=THREE.TextureIdCount++;this.name="";this.image=a;this.mipmaps=[];this.mapping=void 0!==b?b:new THREE.UVMapping;this.wrapS=void 0!==c?c:THREE.ClampToEdgeWrapping;this.wrapT=void 0!==d?d:THREE.ClampToEdgeWrapping;this.magFilter=void 0!==f?f:THREE.LinearFilter;this.minFilter=void 0!==e?e:THREE.LinearMipMapLinearFilter;this.anisotropy=void 0!==j?j:1;this.format=void 0!==g?g:THREE.RGBAFormat;this.type=void 0!==h?h:THREE.UnsignedByteType;
this.offset=new THREE.Vector2(0,0);this.repeat=new THREE.Vector2(1,1);this.generateMipmaps=!0;this.premultiplyAlpha=!1;this.flipY=!0;this.unpackAlignment=4;this.needsUpdate=!1;this.onUpdate=null};
THREE.Texture.prototype={constructor:THREE.Texture,clone:function(a){void 0===a&&(a=new THREE.Texture);a.image=this.image;a.mipmaps=this.mipmaps.slice(0);a.mapping=this.mapping;a.wrapS=this.wrapS;a.wrapT=this.wrapT;a.magFilter=this.magFilter;a.minFilter=this.minFilter;a.anisotropy=this.anisotropy;a.format=this.format;a.type=this.type;a.offset.copy(this.offset);a.repeat.copy(this.repeat);a.generateMipmaps=this.generateMipmaps;a.premultiplyAlpha=this.premultiplyAlpha;a.flipY=this.flipY;a.unpackAlignment=
this.unpackAlignment;return a},dispose:function(){this.dispatchEvent({type:"dispose"})}};THREE.TextureIdCount=0;THREE.CompressedTexture=function(a,b,c,d,f,e,g,h,j,l,n){THREE.Texture.call(this,null,e,g,h,j,l,d,f,n);this.image={width:b,height:c};this.mipmaps=a;this.generateMipmaps=!1};THREE.CompressedTexture.prototype=Object.create(THREE.Texture.prototype);THREE.CompressedTexture.prototype.clone=function(){var a=new THREE.CompressedTexture;THREE.Texture.prototype.clone.call(this,a);return a};
THREE.DataTexture=function(a,b,c,d,f,e,g,h,j,l,n){THREE.Texture.call(this,null,e,g,h,j,l,d,f,n);this.image={data:a,width:b,height:c}};THREE.DataTexture.prototype=Object.create(THREE.Texture.prototype);THREE.DataTexture.prototype.clone=function(){var a=new THREE.DataTexture;THREE.Texture.prototype.clone.call(this,a);return a};THREE.Particle=function(a){THREE.Object3D.call(this);this.material=a};THREE.Particle.prototype=Object.create(THREE.Object3D.prototype);
THREE.Particle.prototype.clone=function(a){void 0===a&&(a=new THREE.Particle(this.material));THREE.Object3D.prototype.clone.call(this,a);return a};THREE.ParticleSystem=function(a,b){THREE.Object3D.call(this);this.geometry=a;this.material=void 0!==b?b:new THREE.ParticleBasicMaterial({color:16777215*Math.random()});this.sortParticles=!1;this.geometry&&null===this.geometry.boundingSphere&&this.geometry.computeBoundingSphere();this.frustumCulled=!1};THREE.ParticleSystem.prototype=Object.create(THREE.Object3D.prototype);
THREE.ParticleSystem.prototype.clone=function(a){void 0===a&&(a=new THREE.ParticleSystem(this.geometry,this.material));a.sortParticles=this.sortParticles;THREE.Object3D.prototype.clone.call(this,a);return a};THREE.Line=function(a,b,c){THREE.Object3D.call(this);this.geometry=a;this.material=void 0!==b?b:new THREE.LineBasicMaterial({color:16777215*Math.random()});this.type=void 0!==c?c:THREE.LineStrip;this.geometry&&(this.geometry.boundingSphere||this.geometry.computeBoundingSphere())};
THREE.LineStrip=0;THREE.LinePieces=1;THREE.Line.prototype=Object.create(THREE.Object3D.prototype);THREE.Line.prototype.clone=function(a){void 0===a&&(a=new THREE.Line(this.geometry,this.material,this.type));THREE.Object3D.prototype.clone.call(this,a);return a};
THREE.Mesh=function(a,b){THREE.Object3D.call(this);this.geometry=a;this.material=void 0!==b?b:new THREE.MeshBasicMaterial({color:16777215*Math.random(),wireframe:!0});void 0!==this.geometry&&(null===this.geometry.boundingSphere&&this.geometry.computeBoundingSphere(),this.updateMorphTargets())};THREE.Mesh.prototype=Object.create(THREE.Object3D.prototype);
THREE.Mesh.prototype.updateMorphTargets=function(){if(0<this.geometry.morphTargets.length){this.morphTargetBase=-1;this.morphTargetForcedOrder=[];this.morphTargetInfluences=[];this.morphTargetDictionary={};for(var a=0,b=this.geometry.morphTargets.length;a<b;a++)this.morphTargetInfluences.push(0),this.morphTargetDictionary[this.geometry.morphTargets[a].name]=a}};
THREE.Mesh.prototype.getMorphTargetIndexByName=function(a){if(void 0!==this.morphTargetDictionary[a])return this.morphTargetDictionary[a];console.log("THREE.Mesh.getMorphTargetIndexByName: morph target "+a+" does not exist. Returning 0.");return 0};THREE.Mesh.prototype.clone=function(a){void 0===a&&(a=new THREE.Mesh(this.geometry,this.material));THREE.Object3D.prototype.clone.call(this,a);return a};THREE.Bone=function(a){THREE.Object3D.call(this);this.skin=a;this.skinMatrix=new THREE.Matrix4};
THREE.Bone.prototype=Object.create(THREE.Object3D.prototype);THREE.Bone.prototype.update=function(a,b){this.matrixAutoUpdate&&(b|=this.updateMatrix());if(b||this.matrixWorldNeedsUpdate)a?this.skinMatrix.multiplyMatrices(a,this.matrix):this.skinMatrix.copy(this.matrix),this.matrixWorldNeedsUpdate=!1,b=!0;var c,d=this.children.length;for(c=0;c<d;c++)this.children[c].update(this.skinMatrix,b)};
THREE.SkinnedMesh=function(a,b,c){THREE.Mesh.call(this,a,b);this.useVertexTexture=void 0!==c?c:!0;this.identityMatrix=new THREE.Matrix4;this.bones=[];this.boneMatrices=[];var d,f,e;if(this.geometry&&void 0!==this.geometry.bones){for(a=0;a<this.geometry.bones.length;a++)c=this.geometry.bones[a],d=c.pos,f=c.rotq,e=c.scl,b=this.addBone(),b.name=c.name,b.position.set(d[0],d[1],d[2]),b.quaternion.set(f[0],f[1],f[2],f[3]),b.useQuaternion=!0,void 0!==e?b.scale.set(e[0],e[1],e[2]):b.scale.set(1,1,1);for(a=
0;a<this.bones.length;a++)c=this.geometry.bones[a],b=this.bones[a],-1===c.parent?this.add(b):this.bones[c.parent].add(b);a=this.bones.length;this.useVertexTexture?(this.boneTextureHeight=this.boneTextureWidth=256<a?64:64<a?32:16<a?16:8,this.boneMatrices=new Float32Array(4*this.boneTextureWidth*this.boneTextureHeight),this.boneTexture=new THREE.DataTexture(this.boneMatrices,this.boneTextureWidth,this.boneTextureHeight,THREE.RGBAFormat,THREE.FloatType),this.boneTexture.minFilter=THREE.NearestFilter,
this.boneTexture.magFilter=THREE.NearestFilter,this.boneTexture.generateMipmaps=!1,this.boneTexture.flipY=!1):this.boneMatrices=new Float32Array(16*a);this.pose()}};THREE.SkinnedMesh.prototype=Object.create(THREE.Mesh.prototype);THREE.SkinnedMesh.prototype.addBone=function(a){void 0===a&&(a=new THREE.Bone(this));this.bones.push(a);return a};
THREE.SkinnedMesh.prototype.updateMatrixWorld=function(a){this.matrixAutoUpdate&&this.updateMatrix();if(this.matrixWorldNeedsUpdate||a)this.parent?this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix):this.matrixWorld.copy(this.matrix),this.matrixWorldNeedsUpdate=!1;for(var a=0,b=this.children.length;a<b;a++){var c=this.children[a];c instanceof THREE.Bone?c.update(this.identityMatrix,!1):c.updateMatrixWorld(!0)}if(void 0==this.boneInverses){this.boneInverses=[];a=0;for(b=this.bones.length;a<
b;a++)c=new THREE.Matrix4,c.getInverse(this.bones[a].skinMatrix),this.boneInverses.push(c)}a=0;for(b=this.bones.length;a<b;a++)THREE.SkinnedMesh.offsetMatrix.multiplyMatrices(this.bones[a].skinMatrix,this.boneInverses[a]),THREE.SkinnedMesh.offsetMatrix.flattenToArrayOffset(this.boneMatrices,16*a);this.useVertexTexture&&(this.boneTexture.needsUpdate=!0)};
THREE.SkinnedMesh.prototype.pose=function(){this.updateMatrixWorld(!0);for(var a=0;a<this.geometry.skinIndices.length;a++){var b=this.geometry.skinWeights[a],c=1/b.lengthManhattan();Infinity!==c?b.multiplyScalar(c):b.set(1)}};THREE.SkinnedMesh.prototype.clone=function(a){void 0===a&&(a=new THREE.SkinnedMesh(this.geometry,this.material,this.useVertexTexture));THREE.Mesh.prototype.clone.call(this,a);return a};THREE.SkinnedMesh.offsetMatrix=new THREE.Matrix4;
THREE.MorphAnimMesh=function(a,b){THREE.Mesh.call(this,a,b);this.duration=1E3;this.mirroredLoop=!1;this.currentKeyframe=this.lastKeyframe=this.time=0;this.direction=1;this.directionBackwards=!1;this.setFrameRange(0,this.geometry.morphTargets.length-1)};THREE.MorphAnimMesh.prototype=Object.create(THREE.Mesh.prototype);THREE.MorphAnimMesh.prototype.setFrameRange=function(a,b){this.startKeyframe=a;this.endKeyframe=b;this.length=this.endKeyframe-this.startKeyframe+1};
THREE.MorphAnimMesh.prototype.setDirectionForward=function(){this.direction=1;this.directionBackwards=!1};THREE.MorphAnimMesh.prototype.setDirectionBackward=function(){this.direction=-1;this.directionBackwards=!0};
THREE.MorphAnimMesh.prototype.parseAnimations=function(){var a=this.geometry;a.animations||(a.animations={});for(var b,c=a.animations,d=/([a-z]+)(\d+)/,f=0,e=a.morphTargets.length;f<e;f++){var g=a.morphTargets[f].name.match(d);if(g&&1<g.length){g=g[1];c[g]||(c[g]={start:Infinity,end:-Infinity});var h=c[g];f<h.start&&(h.start=f);f>h.end&&(h.end=f);b||(b=g)}}a.firstAnimation=b};
THREE.MorphAnimMesh.prototype.setAnimationLabel=function(a,b,c){this.geometry.animations||(this.geometry.animations={});this.geometry.animations[a]={start:b,end:c}};THREE.MorphAnimMesh.prototype.playAnimation=function(a,b){var c=this.geometry.animations[a];c?(this.setFrameRange(c.start,c.end),this.duration=1E3*((c.end-c.start)/b),this.time=0):console.warn("animation["+a+"] undefined")};
THREE.MorphAnimMesh.prototype.updateAnimation=function(a){var b=this.duration/this.length;this.time+=this.direction*a;if(this.mirroredLoop){if(this.time>this.duration||0>this.time)this.direction*=-1,this.time>this.duration&&(this.time=this.duration,this.directionBackwards=!0),0>this.time&&(this.time=0,this.directionBackwards=!1)}else this.time%=this.duration,0>this.time&&(this.time+=this.duration);a=this.startKeyframe+THREE.Math.clamp(Math.floor(this.time/b),0,this.length-1);a!==this.currentKeyframe&&
(this.morphTargetInfluences[this.lastKeyframe]=0,this.morphTargetInfluences[this.currentKeyframe]=1,this.morphTargetInfluences[a]=0,this.lastKeyframe=this.currentKeyframe,this.currentKeyframe=a);b=this.time%b/b;this.directionBackwards&&(b=1-b);this.morphTargetInfluences[this.currentKeyframe]=b;this.morphTargetInfluences[this.lastKeyframe]=1-b};
THREE.MorphAnimMesh.prototype.clone=function(a){void 0===a&&(a=new THREE.MorphAnimMesh(this.geometry,this.material));a.duration=this.duration;a.mirroredLoop=this.mirroredLoop;a.time=this.time;a.lastKeyframe=this.lastKeyframe;a.currentKeyframe=this.currentKeyframe;a.direction=this.direction;a.directionBackwards=this.directionBackwards;THREE.Mesh.prototype.clone.call(this,a);return a};THREE.Ribbon=function(a,b){THREE.Object3D.call(this);this.geometry=a;this.material=b};THREE.Ribbon.prototype=Object.create(THREE.Object3D.prototype);
THREE.Ribbon.prototype.clone=function(a){void 0===a&&(a=new THREE.Ribbon(this.geometry,this.material));THREE.Object3D.prototype.clone.call(this,a);return a};THREE.LOD=function(){THREE.Object3D.call(this);this.LODs=[]};THREE.LOD.prototype=Object.create(THREE.Object3D.prototype);THREE.LOD.prototype.addLevel=function(a,b){void 0===b&&(b=0);for(var b=Math.abs(b),c=0;c<this.LODs.length&&!(b<this.LODs[c].visibleAtDistance);c++);this.LODs.splice(c,0,{visibleAtDistance:b,object3D:a});this.add(a)};
THREE.LOD.prototype.update=function(a){if(1<this.LODs.length){a.matrixWorldInverse.getInverse(a.matrixWorld);a=a.matrixWorldInverse;a=-(a.elements[2]*this.matrixWorld.elements[12]+a.elements[6]*this.matrixWorld.elements[13]+a.elements[10]*this.matrixWorld.elements[14]+a.elements[14]);this.LODs[0].object3D.visible=!0;for(var b=1;b<this.LODs.length;b++)if(a>=this.LODs[b].visibleAtDistance)this.LODs[b-1].object3D.visible=!1,this.LODs[b].object3D.visible=!0;else break;for(;b<this.LODs.length;b++)this.LODs[b].object3D.visible=
!1}};THREE.LOD.prototype.clone=function(){};THREE.Sprite=function(a){THREE.Object3D.call(this);this.material=void 0!==a?a:new THREE.SpriteMaterial;this.rotation3d=this.rotation;this.rotation=0};THREE.Sprite.prototype=Object.create(THREE.Object3D.prototype);
THREE.Sprite.prototype.updateMatrix=function(){this.matrix.setPosition(this.position);this.rotation3d.set(0,0,this.rotation);this.matrix.setRotationFromEuler(this.rotation3d);(1!==this.scale.x||1!==this.scale.y)&&this.matrix.scale(this.scale);this.matrixWorldNeedsUpdate=!0};THREE.Sprite.prototype.clone=function(a){void 0===a&&(a=new THREE.Sprite(this.material));THREE.Object3D.prototype.clone.call(this,a);return a};
THREE.Scene=function(){THREE.Object3D.call(this);this.overrideMaterial=this.fog=null;this.matrixAutoUpdate=!1;this.__objects=[];this.__lights=[];this.__objectsAdded=[];this.__objectsRemoved=[]};THREE.Scene.prototype=Object.create(THREE.Object3D.prototype);
THREE.Scene.prototype.__addObject=function(a){if(a instanceof THREE.Light)-1===this.__lights.indexOf(a)&&this.__lights.push(a),a.target&&void 0===a.target.parent&&this.add(a.target);else if(!(a instanceof THREE.Camera||a instanceof THREE.Bone)&&-1===this.__objects.indexOf(a)){this.__objects.push(a);this.__objectsAdded.push(a);var b=this.__objectsRemoved.indexOf(a);-1!==b&&this.__objectsRemoved.splice(b,1)}for(b=0;b<a.children.length;b++)this.__addObject(a.children[b])};
THREE.Scene.prototype.__removeObject=function(a){if(a instanceof THREE.Light){var b=this.__lights.indexOf(a);-1!==b&&this.__lights.splice(b,1)}else a instanceof THREE.Camera||(b=this.__objects.indexOf(a),-1!==b&&(this.__objects.splice(b,1),this.__objectsRemoved.push(a),b=this.__objectsAdded.indexOf(a),-1!==b&&this.__objectsAdded.splice(b,1)));for(b=0;b<a.children.length;b++)this.__removeObject(a.children[b])};
THREE.Fog=function(a,b,c){this.name="";this.color=new THREE.Color(a);this.near=void 0!==b?b:1;this.far=void 0!==c?c:1E3};THREE.Fog.prototype.clone=function(){return new THREE.Fog(this.color.getHex(),this.near,this.far)};THREE.FogExp2=function(a,b){this.name="";this.color=new THREE.Color(a);this.density=void 0!==b?b:2.5E-4};THREE.FogExp2.prototype.clone=function(){return new THREE.FogExp2(this.color.getHex(),this.density)};
THREE.CanvasRenderer=function(a){function b(a){C!==a&&(C=u.globalAlpha=a)}function c(a){z!==a&&(a===THREE.NormalBlending?u.globalCompositeOperation="source-over":a===THREE.AdditiveBlending?u.globalCompositeOperation="lighter":a===THREE.SubtractiveBlending&&(u.globalCompositeOperation="darker"),z=a)}function d(a){G!==a&&(G=u.lineWidth=a)}function f(a){H!==a&&(H=u.lineCap=a)}function e(a){D!==a&&(D=u.lineJoin=a)}function g(a){J!==a&&(J=u.strokeStyle=a)}function h(a){K!==a&&(K=u.fillStyle=a)}function j(a,
b){if(X!==a||F!==b)u.setLineDash([a,b]),X=a,F=b}console.log("THREE.CanvasRenderer",THREE.REVISION);var l=THREE.Math.smoothstep,a=a||{},n=this,r,p,s,t=new THREE.Projector,m=void 0!==a.canvas?a.canvas:document.createElement("canvas"),v,B,q,A,u=m.getContext("2d"),x=new THREE.Color(0),I=0,C=1,z=0,J=null,K=null,G=null,H=null,D=null,X=null,F=0,L,M,V,ga,Da=new THREE.RenderableVertex,ab=new THREE.RenderableVertex,N,da,ra,ia,sa,O,Na,Oa,mb,Qa,ua,la,ba=new THREE.Color,qa=new THREE.Color,Z=new THREE.Color,ea=
new THREE.Color,ma=new THREE.Color,$=new THREE.Color,pa=new THREE.Color,hb=new THREE.Color,nb={},ja={},Xa,bb,Ga,Ya,ub,Jb,Kb,gc,Ab,nc,pb=new THREE.Box2,La=new THREE.Box2,Wa=new THREE.Box2,hc=!1,vb=new THREE.Color,Ra=new THREE.Color,Ma=new THREE.Color,cb=new THREE.Vector3,xb,k,yb,Sa,db,Ta,zb=16;xb=document.createElement("canvas");xb.width=xb.height=2;k=xb.getContext("2d");k.fillStyle="rgba(0,0,0,1)";k.fillRect(0,0,2,2);yb=k.getImageData(0,0,2,2);Sa=yb.data;db=document.createElement("canvas");db.width=
db.height=zb;Ta=db.getContext("2d");Ta.translate(-zb/2,-zb/2);Ta.scale(zb,zb);zb--;void 0===u.setLineDash&&(u.setLineDash=void 0!==u.mozDash?function(a){u.mozDash=null!==a[0]?a:null}:function(){});this.domElement=m;this.devicePixelRatio=void 0!==a.devicePixelRatio?a.devicePixelRatio:void 0!==window.devicePixelRatio?window.devicePixelRatio:1;this.sortElements=this.sortObjects=this.autoClear=!0;this.info={render:{vertices:0,faces:0}};this.supportsVertexTextures=function(){};this.setFaceCulling=function(){};
this.setSize=function(a,b){v=a*this.devicePixelRatio;B=b*this.devicePixelRatio;q=Math.floor(v/2);A=Math.floor(B/2);m.width=v;m.height=B;m.style.width=a+"px";m.style.height=b+"px";pb.set(new THREE.Vector2(-q,-A),new THREE.Vector2(q,A));La.set(new THREE.Vector2(-q,-A),new THREE.Vector2(q,A));C=1;z=0;D=H=G=K=J=null};this.setClearColor=function(a,b){x.copy(a);I=void 0!==b?b:1;La.set(new THREE.Vector2(-q,-A),new THREE.Vector2(q,A))};this.setClearColorHex=function(a,b){x.setHex(a);I=void 0!==b?b:1;La.set(new THREE.Vector2(-q,
-A),new THREE.Vector2(q,A))};this.getMaxAnisotropy=function(){return 0};this.clear=function(){u.setTransform(1,0,0,-1,q,A);!1===La.empty()&&(La.intersect(pb),La.expandByScalar(2),1>I&&u.clearRect(La.min.x|0,La.min.y|0,La.max.x-La.min.x|0,La.max.y-La.min.y|0),0<I&&(c(THREE.NormalBlending),b(1),h("rgba("+Math.floor(255*x.r)+","+Math.floor(255*x.g)+","+Math.floor(255*x.b)+","+I+")"),u.fillRect(La.min.x|0,La.min.y|0,La.max.x-La.min.x|0,La.max.y-La.min.y|0)),La.makeEmpty())};this.render=function(a,m){function x(a,
b,c){for(var d=0,f=s.length;d<f;d++){var e=s[d];hb.copy(e.color);if(e instanceof THREE.DirectionalLight){var g=cb.getPositionFromMatrix(e.matrixWorld).normalize(),k=b.dot(g);0>=k||(k*=e.intensity,c.add(hb.multiplyScalar(k)))}else e instanceof THREE.PointLight&&(g=cb.getPositionFromMatrix(e.matrixWorld),k=b.dot(cb.subVectors(g,a).normalize()),0>=k||(k*=0==e.distance?1:1-Math.min(a.distanceTo(g)/e.distance,1),0!=k&&(k*=e.intensity,c.add(hb.multiplyScalar(k)))))}}function v(a,d,f,e,g,k,h,j){n.info.render.vertices+=
3;n.info.render.faces++;b(j.opacity);c(j.blending);N=a.positionScreen.x;da=a.positionScreen.y;ra=d.positionScreen.x;ia=d.positionScreen.y;sa=f.positionScreen.x;O=f.positionScreen.y;I(N,da,ra,ia,sa,O);(j instanceof THREE.MeshLambertMaterial||j instanceof THREE.MeshPhongMaterial)&&null===j.map?($.copy(j.color),pa.copy(j.emissive),j.vertexColors===THREE.FaceColors&&$.multiply(h.color),!0===hc?!1===j.wireframe&&j.shading==THREE.SmoothShading&&3==h.vertexNormalsLength?(qa.copy(vb),Z.copy(vb),ea.copy(vb),
x(h.v1.positionWorld,h.vertexNormalsModel[0],qa),x(h.v2.positionWorld,h.vertexNormalsModel[1],Z),x(h.v3.positionWorld,h.vertexNormalsModel[2],ea),qa.multiply($).add(pa),Z.multiply($).add(pa),ea.multiply($).add(pa),ma.addColors(Z,ea).multiplyScalar(0.5),Ga=J(qa,Z,ea,ma),F(N,da,ra,ia,sa,O,0,0,1,0,0,1,Ga)):(ba.copy(vb),x(h.centroidModel,h.normalModel,ba),ba.multiply($).add(pa),!0===j.wireframe?B(ba,j.wireframeLinewidth,j.wireframeLinecap,j.wireframeLinejoin):C(ba)):!0===j.wireframe?B(j.color,j.wireframeLinewidth,
j.wireframeLinecap,j.wireframeLinejoin):C(j.color)):j instanceof THREE.MeshBasicMaterial||j instanceof THREE.MeshLambertMaterial||j instanceof THREE.MeshPhongMaterial?null!==j.map?j.map.mapping instanceof THREE.UVMapping&&(Ya=h.uvs[0],D(N,da,ra,ia,sa,O,Ya[e].x,Ya[e].y,Ya[g].x,Ya[g].y,Ya[k].x,Ya[k].y,j.map)):null!==j.envMap?j.envMap.mapping instanceof THREE.SphericalReflectionMapping&&(cb.copy(h.vertexNormalsModelView[e]),ub=0.5*cb.x+0.5,Jb=0.5*cb.y+0.5,cb.copy(h.vertexNormalsModelView[g]),Kb=0.5*
cb.x+0.5,gc=0.5*cb.y+0.5,cb.copy(h.vertexNormalsModelView[k]),Ab=0.5*cb.x+0.5,nc=0.5*cb.y+0.5,D(N,da,ra,ia,sa,O,ub,Jb,Kb,gc,Ab,nc,j.envMap)):(ba.copy(j.color),j.vertexColors===THREE.FaceColors&&ba.multiply(h.color),!0===j.wireframe?B(ba,j.wireframeLinewidth,j.wireframeLinecap,j.wireframeLinejoin):C(ba)):j instanceof THREE.MeshDepthMaterial?(Xa=m.near,bb=m.far,qa.r=qa.g=qa.b=1-l(a.positionScreen.z*a.positionScreen.w,Xa,bb),Z.r=Z.g=Z.b=1-l(d.positionScreen.z*d.positionScreen.w,Xa,bb),ea.r=ea.g=ea.b=
1-l(f.positionScreen.z*f.positionScreen.w,Xa,bb),ma.addColors(Z,ea).multiplyScalar(0.5),Ga=J(qa,Z,ea,ma),F(N,da,ra,ia,sa,O,0,0,1,0,0,1,Ga)):j instanceof THREE.MeshNormalMaterial&&(j.shading==THREE.FlatShading?(a=h.normalModelView,ba.setRGB(a.x,a.y,a.z).multiplyScalar(0.5).addScalar(0.5),!0===j.wireframe?B(ba,j.wireframeLinewidth,j.wireframeLinecap,j.wireframeLinejoin):C(ba)):j.shading==THREE.SmoothShading&&(a=h.vertexNormalsModelView[e],qa.setRGB(a.x,a.y,a.z).multiplyScalar(0.5).addScalar(0.5),a=
h.vertexNormalsModelView[g],Z.setRGB(a.x,a.y,a.z).multiplyScalar(0.5).addScalar(0.5),a=h.vertexNormalsModelView[k],ea.setRGB(a.x,a.y,a.z).multiplyScalar(0.5).addScalar(0.5),ma.addColors(Z,ea).multiplyScalar(0.5),Ga=J(qa,Z,ea,ma),F(N,da,ra,ia,sa,O,0,0,1,0,0,1,Ga)))}function I(a,b,c,d,f,e){u.beginPath();u.moveTo(a,b);u.lineTo(c,d);u.lineTo(f,e);u.closePath()}function z(a,b,c,d,f,e,g,k){u.beginPath();u.moveTo(a,b);u.lineTo(c,d);u.lineTo(f,e);u.lineTo(g,k);u.closePath()}function B(a,b,c,k){d(b);f(c);
e(k);g(a.getStyle());u.stroke();Wa.expandByScalar(2*b)}function C(a){h(a.getStyle());u.fill()}function D(a,b,c,d,f,e,g,k,j,q,Aa,l,m){if(!(m instanceof THREE.DataTexture||void 0===m.image||0==m.image.width)){if(!0===m.needsUpdate){var n=m.wrapS==THREE.RepeatWrapping,p=m.wrapT==THREE.RepeatWrapping;nb[m.id]=u.createPattern(m.image,!0===n&&!0===p?"repeat":!0===n&&!1===p?"repeat-x":!1===n&&!0===p?"repeat-y":"no-repeat");m.needsUpdate=!1}void 0===nb[m.id]?h("rgba(0,0,0,1)"):h(nb[m.id]);var n=m.offset.x/
m.repeat.x,p=m.offset.y/m.repeat.y,r=m.image.width*m.repeat.x,A=m.image.height*m.repeat.y,g=(g+n)*r,k=(1-k+p)*A,c=c-a,d=d-b,f=f-a,e=e-b,j=(j+n)*r-g,q=(1-q+p)*A-k,Aa=(Aa+n)*r-g,l=(1-l+p)*A-k,n=j*l-Aa*q;0===n?(void 0===ja[m.id]&&(b=document.createElement("canvas"),b.width=m.image.width,b.height=m.image.height,b=b.getContext("2d"),b.drawImage(m.image,0,0),ja[m.id]=b.getImageData(0,0,m.image.width,m.image.height).data),b=ja[m.id],g=4*(Math.floor(g)+Math.floor(k)*m.image.width),ba.setRGB(b[g]/255,b[g+
1]/255,b[g+2]/255),C(ba)):(n=1/n,m=(l*c-q*f)*n,q=(l*d-q*e)*n,c=(j*f-Aa*c)*n,d=(j*e-Aa*d)*n,a=a-m*g-c*k,g=b-q*g-d*k,u.save(),u.transform(m,q,c,d,a,g),u.fill(),u.restore())}}function F(a,b,c,d,f,e,g,k,h,j,q,Aa,l){var m,n;m=l.width-1;n=l.height-1;g*=m;k*=n;c-=a;d-=b;f-=a;e-=b;h=h*m-g;j=j*n-k;q=q*m-g;Aa=Aa*n-k;n=1/(h*Aa-q*j);m=(Aa*c-j*f)*n;j=(Aa*d-j*e)*n;c=(h*f-q*c)*n;d=(h*e-q*d)*n;a=a-m*g-c*k;b=b-j*g-d*k;u.save();u.transform(m,j,c,d,a,b);u.clip();u.drawImage(l,0,0);u.restore()}function J(a,b,c,d){Sa[0]=
255*a.r|0;Sa[1]=255*a.g|0;Sa[2]=255*a.b|0;Sa[4]=255*b.r|0;Sa[5]=255*b.g|0;Sa[6]=255*b.b|0;Sa[8]=255*c.r|0;Sa[9]=255*c.g|0;Sa[10]=255*c.b|0;Sa[12]=255*d.r|0;Sa[13]=255*d.g|0;Sa[14]=255*d.b|0;k.putImageData(yb,0,0);Ta.drawImage(xb,0,0);return db}function G(a,b){var c=b.x-a.x,d=b.y-a.y,f=c*c+d*d;0!==f&&(f=1/Math.sqrt(f),c*=f,d*=f,b.x+=c,b.y+=d,a.x-=c,a.y-=d)}if(!1===m instanceof THREE.Camera)console.error("THREE.CanvasRenderer.render: camera is not an instance of THREE.Camera.");else{!0===this.autoClear&&
this.clear();u.setTransform(1,0,0,-1,q,A);n.info.render.vertices=0;n.info.render.faces=0;r=t.projectScene(a,m,this.sortObjects,this.sortElements);p=r.elements;s=r.lights;hc=0<s.length;if(!0===hc){vb.setRGB(0,0,0);Ra.setRGB(0,0,0);Ma.setRGB(0,0,0);for(var K=0,X=s.length;K<X;K++){var Q=s[K],Y=Q.color;Q instanceof THREE.AmbientLight?vb.add(Y):Q instanceof THREE.DirectionalLight?Ra.add(Y):Q instanceof THREE.PointLight&&Ma.add(Y)}}K=0;for(X=p.length;K<X;K++){var H=p[K],Q=H.material;if(!(void 0===Q||!1===
Q.visible)){Wa.makeEmpty();if(H instanceof THREE.RenderableParticle){L=H;L.x*=q;L.y*=A;var Y=L,Aa=H;b(Q.opacity);c(Q.blending);var Bb=void 0,Cb=void 0,Db=void 0,Eb=void 0,nd=H=void 0,od=void 0;Q instanceof THREE.ParticleBasicMaterial?null===Q.map?(Db=Aa.object.scale.x,Eb=Aa.object.scale.y,Db*=Aa.scale.x*q,Eb*=Aa.scale.y*A,Wa.min.set(Y.x-Db,Y.y-Eb),Wa.max.set(Y.x+Db,Y.y+Eb),!1!==pb.isIntersectionBox(Wa)&&(h(Q.color.getStyle()),u.save(),u.translate(Y.x,Y.y),u.rotate(-Aa.rotation),u.scale(Db,Eb),u.fillRect(-1,
-1,2,2),u.restore())):(H=Q.map.image,nd=H.width>>1,od=H.height>>1,Db=Aa.scale.x*q,Eb=Aa.scale.y*A,Bb=Db*nd,Cb=Eb*od,Wa.min.set(Y.x-Bb,Y.y-Cb),Wa.max.set(Y.x+Bb,Y.y+Cb),!1!==pb.isIntersectionBox(Wa)&&(u.save(),u.translate(Y.x,Y.y),u.rotate(-Aa.rotation),u.scale(Db,-Eb),u.translate(-nd,-od),u.drawImage(H,0,0),u.restore())):Q instanceof THREE.ParticleCanvasMaterial&&(Bb=Aa.scale.x*q,Cb=Aa.scale.y*A,Wa.min.set(Y.x-Bb,Y.y-Cb),Wa.max.set(Y.x+Bb,Y.y+Cb),!1!==pb.isIntersectionBox(Wa)&&(g(Q.color.getStyle()),
h(Q.color.getStyle()),u.save(),u.translate(Y.x,Y.y),u.rotate(-Aa.rotation),u.scale(Bb,Cb),Q.program(u),u.restore()))}else if(H instanceof THREE.RenderableLine)L=H.v1,M=H.v2,L.positionScreen.x*=q,L.positionScreen.y*=A,M.positionScreen.x*=q,M.positionScreen.y*=A,Wa.setFromPoints([L.positionScreen,M.positionScreen]),!0===pb.isIntersectionBox(Wa)&&(Y=L,Aa=M,b(Q.opacity),c(Q.blending),u.beginPath(),u.moveTo(Y.positionScreen.x,Y.positionScreen.y),u.lineTo(Aa.positionScreen.x,Aa.positionScreen.y),Q instanceof
THREE.LineBasicMaterial?(d(Q.linewidth),f(Q.linecap),e(Q.linejoin),g(Q.color.getStyle()),j(null,null),u.stroke(),Wa.expandByScalar(2*Q.linewidth)):Q instanceof THREE.LineDashedMaterial&&(d(Q.linewidth),f(Q.linecap),e(Q.linejoin),g(Q.color.getStyle()),j(Q.dashSize,Q.gapSize),u.stroke(),Wa.expandByScalar(2*Q.linewidth)));else if(H instanceof THREE.RenderableFace3){L=H.v1;M=H.v2;V=H.v3;if(-1>L.positionScreen.z||1<L.positionScreen.z)continue;if(-1>M.positionScreen.z||1<M.positionScreen.z)continue;if(-1>
V.positionScreen.z||1<V.positionScreen.z)continue;L.positionScreen.x*=q;L.positionScreen.y*=A;M.positionScreen.x*=q;M.positionScreen.y*=A;V.positionScreen.x*=q;V.positionScreen.y*=A;!0===Q.overdraw&&(G(L.positionScreen,M.positionScreen),G(M.positionScreen,V.positionScreen),G(V.positionScreen,L.positionScreen));Wa.setFromPoints([L.positionScreen,M.positionScreen,V.positionScreen]);v(L,M,V,0,1,2,H,Q)}else if(H instanceof THREE.RenderableFace4){L=H.v1;M=H.v2;V=H.v3;ga=H.v4;if(-1>L.positionScreen.z||
1<L.positionScreen.z)continue;if(-1>M.positionScreen.z||1<M.positionScreen.z)continue;if(-1>V.positionScreen.z||1<V.positionScreen.z)continue;if(-1>ga.positionScreen.z||1<ga.positionScreen.z)continue;L.positionScreen.x*=q;L.positionScreen.y*=A;M.positionScreen.x*=q;M.positionScreen.y*=A;V.positionScreen.x*=q;V.positionScreen.y*=A;ga.positionScreen.x*=q;ga.positionScreen.y*=A;Da.positionScreen.copy(M.positionScreen);ab.positionScreen.copy(ga.positionScreen);!0===Q.overdraw&&(G(L.positionScreen,M.positionScreen),
G(M.positionScreen,ga.positionScreen),G(ga.positionScreen,L.positionScreen),G(V.positionScreen,Da.positionScreen),G(V.positionScreen,ab.positionScreen));Wa.setFromPoints([L.positionScreen,M.positionScreen,V.positionScreen,ga.positionScreen]);Y=L;Aa=M;Bb=V;Cb=ga;Db=Da;Eb=ab;n.info.render.vertices+=4;n.info.render.faces++;b(Q.opacity);c(Q.blending);void 0!==Q.map&&null!==Q.map||void 0!==Q.envMap&&null!==Q.envMap?(v(Y,Aa,Cb,0,1,3,H,Q),v(Db,Bb,Eb,1,2,3,H,Q)):(N=Y.positionScreen.x,da=Y.positionScreen.y,
ra=Aa.positionScreen.x,ia=Aa.positionScreen.y,sa=Bb.positionScreen.x,O=Bb.positionScreen.y,Na=Cb.positionScreen.x,Oa=Cb.positionScreen.y,mb=Db.positionScreen.x,Qa=Db.positionScreen.y,ua=Eb.positionScreen.x,la=Eb.positionScreen.y,Q instanceof THREE.MeshLambertMaterial||Q instanceof THREE.MeshPhongMaterial?($.copy(Q.color),pa.copy(Q.emissive),Q.vertexColors===THREE.FaceColors&&$.multiply(H.color),!0===hc?!1===Q.wireframe&&Q.shading==THREE.SmoothShading&&4==H.vertexNormalsLength?(qa.copy(vb),Z.copy(vb),
ea.copy(vb),ma.copy(vb),x(H.v1.positionWorld,H.vertexNormalsModel[0],qa),x(H.v2.positionWorld,H.vertexNormalsModel[1],Z),x(H.v4.positionWorld,H.vertexNormalsModel[3],ea),x(H.v3.positionWorld,H.vertexNormalsModel[2],ma),qa.multiply($).add(pa),Z.multiply($).add(pa),ea.multiply($).add(pa),ma.multiply($).add(pa),Ga=J(qa,Z,ea,ma),I(N,da,ra,ia,Na,Oa),F(N,da,ra,ia,Na,Oa,0,0,1,0,0,1,Ga),I(mb,Qa,sa,O,ua,la),F(mb,Qa,sa,O,ua,la,1,0,1,1,0,1,Ga)):(ba.copy(vb),x(H.centroidModel,H.normalModel,ba),ba.multiply($).add(pa),
z(N,da,ra,ia,sa,O,Na,Oa),!0===Q.wireframe?B(ba,Q.wireframeLinewidth,Q.wireframeLinecap,Q.wireframeLinejoin):C(ba)):(ba.addColors($,pa),z(N,da,ra,ia,sa,O,Na,Oa),!0===Q.wireframe?B(ba,Q.wireframeLinewidth,Q.wireframeLinecap,Q.wireframeLinejoin):C(ba))):Q instanceof THREE.MeshBasicMaterial?(ba.copy(Q.color),Q.vertexColors===THREE.FaceColors&&ba.multiply(H.color),z(N,da,ra,ia,sa,O,Na,Oa),!0===Q.wireframe?B(ba,Q.wireframeLinewidth,Q.wireframeLinecap,Q.wireframeLinejoin):C(ba)):Q instanceof THREE.MeshNormalMaterial?
(Y=void 0,Q.shading==THREE.FlatShading?(Y=H.normalModelView,ba.setRGB(Y.x,Y.y,Y.z).multiplyScalar(0.5).addScalar(0.5),z(N,da,ra,ia,sa,O,Na,Oa),!0===Q.wireframe?B(ba,Q.wireframeLinewidth,Q.wireframeLinecap,Q.wireframeLinejoin):C(ba)):Q.shading==THREE.SmoothShading&&(Y=H.vertexNormalsModelView[0],qa.setRGB(Y.x,Y.y,Y.z).multiplyScalar(0.5).addScalar(0.5),Y=H.vertexNormalsModelView[1],Z.setRGB(Y.x,Y.y,Y.z).multiplyScalar(0.5).addScalar(0.5),Y=H.vertexNormalsModelView[3],ea.setRGB(Y.x,Y.y,Y.z).multiplyScalar(0.5).addScalar(0.5),
Y=H.vertexNormalsModelView[2],ma.setRGB(Y.x,Y.y,Y.z).multiplyScalar(0.5).addScalar(0.5),Ga=J(qa,Z,ea,ma),I(N,da,ra,ia,Na,Oa),F(N,da,ra,ia,Na,Oa,0,0,1,0,0,1,Ga),I(mb,Qa,sa,O,ua,la),F(mb,Qa,sa,O,ua,la,1,0,1,1,0,1,Ga))):Q instanceof THREE.MeshDepthMaterial&&(Xa=m.near,bb=m.far,qa.r=qa.g=qa.b=1-l(Y.positionScreen.z*Y.positionScreen.w,Xa,bb),Z.r=Z.g=Z.b=1-l(Aa.positionScreen.z*Aa.positionScreen.w,Xa,bb),ea.r=ea.g=ea.b=1-l(Cb.positionScreen.z*Cb.positionScreen.w,Xa,bb),ma.r=ma.g=ma.b=1-l(Bb.positionScreen.z*
Bb.positionScreen.w,Xa,bb),Ga=J(qa,Z,ea,ma),I(N,da,ra,ia,Na,Oa),F(N,da,ra,ia,Na,Oa,0,0,1,0,0,1,Ga),I(mb,Qa,sa,O,ua,la),F(mb,Qa,sa,O,ua,la,1,0,1,1,0,1,Ga)))}La.union(Wa)}}u.setTransform(1,0,0,1,0,0)}}};
THREE.ShaderChunk={fog_pars_fragment:"#ifdef USE_FOG\nuniform vec3 fogColor;\n#ifdef FOG_EXP2\nuniform float fogDensity;\n#else\nuniform float fogNear;\nuniform float fogFar;\n#endif\n#endif",fog_fragment:"#ifdef USE_FOG\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\n#ifdef FOG_EXP2\nconst float LOG2 = 1.442695;\nfloat fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );\nfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\n#else\nfloat fogFactor = smoothstep( fogNear, fogFar, depth );\n#endif\ngl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\n#endif",envmap_pars_fragment:"#ifdef USE_ENVMAP\nuniform float reflectivity;\nuniform samplerCube envMap;\nuniform float flipEnvMap;\nuniform int combine;\n#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\nuniform bool useRefract;\nuniform float refractionRatio;\n#else\nvarying vec3 vReflect;\n#endif\n#endif",
envmap_fragment:"#ifdef USE_ENVMAP\nvec3 reflectVec;\n#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\nvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\nif ( useRefract ) {\nreflectVec = refract( cameraToVertex, normal, refractionRatio );\n} else { \nreflectVec = reflect( cameraToVertex, normal );\n}\n#else\nreflectVec = vReflect;\n#endif\n#ifdef DOUBLE_SIDED\nfloat flipNormal = ( -1.0 + 2.0 * float( gl_FrontFacing ) );\nvec4 cubeColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n#else\nvec4 cubeColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n#endif\n#ifdef GAMMA_INPUT\ncubeColor.xyz *= cubeColor.xyz;\n#endif\nif ( combine == 1 ) {\ngl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, specularStrength * reflectivity );\n} else if ( combine == 2 ) {\ngl_FragColor.xyz += cubeColor.xyz * specularStrength * reflectivity;\n} else {\ngl_FragColor.xyz = mix( gl_FragColor.xyz, gl_FragColor.xyz * cubeColor.xyz, specularStrength * reflectivity );\n}\n#endif",
envmap_pars_vertex:"#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP )\nvarying vec3 vReflect;\nuniform float refractionRatio;\nuniform bool useRefract;\n#endif",worldpos_vertex:"#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP )\n#ifdef USE_SKINNING\nvec4 worldPosition = modelMatrix * skinned;\n#endif\n#if defined( USE_MORPHTARGETS ) && ! defined( USE_SKINNING )\nvec4 worldPosition = modelMatrix * vec4( morphed, 1.0 );\n#endif\n#if ! defined( USE_MORPHTARGETS ) && ! defined( USE_SKINNING )\nvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\n#endif\n#endif",
envmap_vertex:"#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP )\nvec3 worldNormal = mat3( modelMatrix[ 0 ].xyz, modelMatrix[ 1 ].xyz, modelMatrix[ 2 ].xyz ) * objectNormal;\nworldNormal = normalize( worldNormal );\nvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\nif ( useRefract ) {\nvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n} else {\nvReflect = reflect( cameraToVertex, worldNormal );\n}\n#endif",map_particle_pars_fragment:"#ifdef USE_MAP\nuniform sampler2D map;\n#endif",
map_particle_fragment:"#ifdef USE_MAP\ngl_FragColor = gl_FragColor * texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) );\n#endif",map_pars_vertex:"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )\nvarying vec2 vUv;\nuniform vec4 offsetRepeat;\n#endif",map_pars_fragment:"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )\nvarying vec2 vUv;\n#endif\n#ifdef USE_MAP\nuniform sampler2D map;\n#endif",
map_vertex:"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )\nvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\n#endif",map_fragment:"#ifdef USE_MAP\nvec4 texelColor = texture2D( map, vUv );\n#ifdef GAMMA_INPUT\ntexelColor.xyz *= texelColor.xyz;\n#endif\ngl_FragColor = gl_FragColor * texelColor;\n#endif",lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\nvarying vec2 vUv2;\nuniform sampler2D lightMap;\n#endif",lightmap_pars_vertex:"#ifdef USE_LIGHTMAP\nvarying vec2 vUv2;\n#endif",
lightmap_fragment:"#ifdef USE_LIGHTMAP\ngl_FragColor = gl_FragColor * texture2D( lightMap, vUv2 );\n#endif",lightmap_vertex:"#ifdef USE_LIGHTMAP\nvUv2 = uv2;\n#endif",bumpmap_pars_fragment:"#ifdef USE_BUMPMAP\nuniform sampler2D bumpMap;\nuniform float bumpScale;\nvec2 dHdxy_fwd() {\nvec2 dSTdx = dFdx( vUv );\nvec2 dSTdy = dFdy( vUv );\nfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\nfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\nfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\nreturn vec2( dBx, dBy );\n}\nvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\nvec3 vSigmaX = dFdx( surf_pos );\nvec3 vSigmaY = dFdy( surf_pos );\nvec3 vN = surf_norm;\nvec3 R1 = cross( vSigmaY, vN );\nvec3 R2 = cross( vN, vSigmaX );\nfloat fDet = dot( vSigmaX, R1 );\nvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\nreturn normalize( abs( fDet ) * surf_norm - vGrad );\n}\n#endif",
normalmap_pars_fragment:"#ifdef USE_NORMALMAP\nuniform sampler2D normalMap;\nuniform vec2 normalScale;\nvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\nvec3 q0 = dFdx( eye_pos.xyz );\nvec3 q1 = dFdy( eye_pos.xyz );\nvec2 st0 = dFdx( vUv.st );\nvec2 st1 = dFdy( vUv.st );\nvec3 S = normalize(  q0 * st1.t - q1 * st0.t );\nvec3 T = normalize( -q0 * st1.s + q1 * st0.s );\nvec3 N = normalize( surf_norm );\nvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\nmapN.xy = normalScale * mapN.xy;\nmat3 tsn = mat3( S, T, N );\nreturn normalize( tsn * mapN );\n}\n#endif",
specularmap_pars_fragment:"#ifdef USE_SPECULARMAP\nuniform sampler2D specularMap;\n#endif",specularmap_fragment:"float specularStrength;\n#ifdef USE_SPECULARMAP\nvec4 texelSpecular = texture2D( specularMap, vUv );\nspecularStrength = texelSpecular.r;\n#else\nspecularStrength = 1.0;\n#endif",lights_lambert_pars_vertex:"uniform vec3 ambient;\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_HEMI_LIGHTS > 0\nuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n#endif\n#if MAX_SPOT_LIGHTS > 0\nuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\nuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\nuniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\nuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\n#endif\n#ifdef WRAP_AROUND\nuniform vec3 wrapRGB;\n#endif",
lights_lambert_vertex:"vLightFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\nvLightBack = vec3( 0.0 );\n#endif\ntransformedNormal = normalize( transformedNormal );\n#if MAX_DIR_LIGHTS > 0\nfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\nfloat dotProduct = dot( transformedNormal, dirVector );\nvec3 directionalLightWeighting = vec3( max( dotProduct, 0.0 ) );\n#ifdef DOUBLE_SIDED\nvec3 directionalLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n#ifdef WRAP_AROUND\nvec3 directionalLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n#endif\n#endif\n#ifdef WRAP_AROUND\nvec3 directionalLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\ndirectionalLightWeighting = mix( directionalLightWeighting, directionalLightWeightingHalf, wrapRGB );\n#ifdef DOUBLE_SIDED\ndirectionalLightWeightingBack = mix( directionalLightWeightingBack, directionalLightWeightingHalfBack, wrapRGB );\n#endif\n#endif\nvLightFront += directionalLightColor[ i ] * directionalLightWeighting;\n#ifdef DOUBLE_SIDED\nvLightBack += directionalLightColor[ i ] * directionalLightWeightingBack;\n#endif\n}\n#endif\n#if MAX_POINT_LIGHTS > 0\nfor( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nfloat lDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\nfloat dotProduct = dot( transformedNormal, lVector );\nvec3 pointLightWeighting = vec3( max( dotProduct, 0.0 ) );\n#ifdef DOUBLE_SIDED\nvec3 pointLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n#ifdef WRAP_AROUND\nvec3 pointLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n#endif\n#endif\n#ifdef WRAP_AROUND\nvec3 pointLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\npointLightWeighting = mix( pointLightWeighting, pointLightWeightingHalf, wrapRGB );\n#ifdef DOUBLE_SIDED\npointLightWeightingBack = mix( pointLightWeightingBack, pointLightWeightingHalfBack, wrapRGB );\n#endif\n#endif\nvLightFront += pointLightColor[ i ] * pointLightWeighting * lDistance;\n#ifdef DOUBLE_SIDED\nvLightBack += pointLightColor[ i ] * pointLightWeightingBack * lDistance;\n#endif\n}\n#endif\n#if MAX_SPOT_LIGHTS > 0\nfor( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nfloat spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - worldPosition.xyz ) );\nif ( spotEffect > spotLightAngleCos[ i ] ) {\nspotEffect = max( pow( spotEffect, spotLightExponent[ i ] ), 0.0 );\nfloat lDistance = 1.0;\nif ( spotLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\nfloat dotProduct = dot( transformedNormal, lVector );\nvec3 spotLightWeighting = vec3( max( dotProduct, 0.0 ) );\n#ifdef DOUBLE_SIDED\nvec3 spotLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n#ifdef WRAP_AROUND\nvec3 spotLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n#endif\n#endif\n#ifdef WRAP_AROUND\nvec3 spotLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\nspotLightWeighting = mix( spotLightWeighting, spotLightWeightingHalf, wrapRGB );\n#ifdef DOUBLE_SIDED\nspotLightWeightingBack = mix( spotLightWeightingBack, spotLightWeightingHalfBack, wrapRGB );\n#endif\n#endif\nvLightFront += spotLightColor[ i ] * spotLightWeighting * lDistance * spotEffect;\n#ifdef DOUBLE_SIDED\nvLightBack += spotLightColor[ i ] * spotLightWeightingBack * lDistance * spotEffect;\n#endif\n}\n}\n#endif\n#if MAX_HEMI_LIGHTS > 0\nfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\nvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\nvec3 lVector = normalize( lDirection.xyz );\nfloat dotProduct = dot( transformedNormal, lVector );\nfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\nfloat hemiDiffuseWeightBack = -0.5 * dotProduct + 0.5;\nvLightFront += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\n#ifdef DOUBLE_SIDED\nvLightBack += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeightBack );\n#endif\n}\n#endif\nvLightFront = vLightFront * diffuse + ambient * ambientLightColor + emissive;\n#ifdef DOUBLE_SIDED\nvLightBack = vLightBack * diffuse + ambient * ambientLightColor + emissive;\n#endif",
lights_phong_pars_vertex:"#ifndef PHONG_PER_PIXEL\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\nvarying vec4 vPointLight[ MAX_POINT_LIGHTS ];\n#endif\n#if MAX_SPOT_LIGHTS > 0\nuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\nuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\nvarying vec4 vSpotLight[ MAX_SPOT_LIGHTS ];\n#endif\n#endif\n#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP )\nvarying vec3 vWorldPosition;\n#endif",
lights_phong_vertex:"#ifndef PHONG_PER_PIXEL\n#if MAX_POINT_LIGHTS > 0\nfor( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nfloat lDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\nvPointLight[ i ] = vec4( lVector, lDistance );\n}\n#endif\n#if MAX_SPOT_LIGHTS > 0\nfor( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nfloat lDistance = 1.0;\nif ( spotLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\nvSpotLight[ i ] = vec4( lVector, lDistance );\n}\n#endif\n#endif\n#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP )\nvWorldPosition = worldPosition.xyz;\n#endif",
lights_phong_pars_fragment:"uniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_HEMI_LIGHTS > 0\nuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\n#ifdef PHONG_PER_PIXEL\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n#else\nvarying vec4 vPointLight[ MAX_POINT_LIGHTS ];\n#endif\n#endif\n#if MAX_SPOT_LIGHTS > 0\nuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\nuniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\nuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\n#ifdef PHONG_PER_PIXEL\nuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\n#else\nvarying vec4 vSpotLight[ MAX_SPOT_LIGHTS ];\n#endif\n#endif\n#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP )\nvarying vec3 vWorldPosition;\n#endif\n#ifdef WRAP_AROUND\nuniform vec3 wrapRGB;\n#endif\nvarying vec3 vViewPosition;\nvarying vec3 vNormal;",
lights_phong_fragment:"vec3 normal = normalize( vNormal );\nvec3 viewPosition = normalize( vViewPosition );\n#ifdef DOUBLE_SIDED\nnormal = normal * ( -1.0 + 2.0 * float( gl_FrontFacing ) );\n#endif\n#ifdef USE_NORMALMAP\nnormal = perturbNormal2Arb( -viewPosition, normal );\n#elif defined( USE_BUMPMAP )\nnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\n#endif\n#if MAX_POINT_LIGHTS > 0\nvec3 pointDiffuse  = vec3( 0.0 );\nvec3 pointSpecular = vec3( 0.0 );\nfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\n#ifdef PHONG_PER_PIXEL\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz + vViewPosition.xyz;\nfloat lDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\n#else\nvec3 lVector = normalize( vPointLight[ i ].xyz );\nfloat lDistance = vPointLight[ i ].w;\n#endif\nfloat dotProduct = dot( normal, lVector );\n#ifdef WRAP_AROUND\nfloat pointDiffuseWeightFull = max( dotProduct, 0.0 );\nfloat pointDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\nvec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );\n#else\nfloat pointDiffuseWeight = max( dotProduct, 0.0 );\n#endif\npointDiffuse  += diffuse * pointLightColor[ i ] * pointDiffuseWeight * lDistance;\nvec3 pointHalfVector = normalize( lVector + viewPosition );\nfloat pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\nfloat pointSpecularWeight = specularStrength * max( pow( pointDotNormalHalf, shininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\nvec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, pointHalfVector ), 5.0 );\npointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * lDistance * specularNormalization;\n#else\npointSpecular += specular * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * lDistance;\n#endif\n}\n#endif\n#if MAX_SPOT_LIGHTS > 0\nvec3 spotDiffuse  = vec3( 0.0 );\nvec3 spotSpecular = vec3( 0.0 );\nfor ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\n#ifdef PHONG_PER_PIXEL\nvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz + vViewPosition.xyz;\nfloat lDistance = 1.0;\nif ( spotLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\n#else\nvec3 lVector = normalize( vSpotLight[ i ].xyz );\nfloat lDistance = vSpotLight[ i ].w;\n#endif\nfloat spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );\nif ( spotEffect > spotLightAngleCos[ i ] ) {\nspotEffect = max( pow( spotEffect, spotLightExponent[ i ] ), 0.0 );\nfloat dotProduct = dot( normal, lVector );\n#ifdef WRAP_AROUND\nfloat spotDiffuseWeightFull = max( dotProduct, 0.0 );\nfloat spotDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\nvec3 spotDiffuseWeight = mix( vec3 ( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );\n#else\nfloat spotDiffuseWeight = max( dotProduct, 0.0 );\n#endif\nspotDiffuse += diffuse * spotLightColor[ i ] * spotDiffuseWeight * lDistance * spotEffect;\nvec3 spotHalfVector = normalize( lVector + viewPosition );\nfloat spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );\nfloat spotSpecularWeight = specularStrength * max( pow( spotDotNormalHalf, shininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\nvec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, spotHalfVector ), 5.0 );\nspotSpecular += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * lDistance * specularNormalization * spotEffect;\n#else\nspotSpecular += specular * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * lDistance * spotEffect;\n#endif\n}\n}\n#endif\n#if MAX_DIR_LIGHTS > 0\nvec3 dirDiffuse  = vec3( 0.0 );\nvec3 dirSpecular = vec3( 0.0 );\nfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\nfloat dotProduct = dot( normal, dirVector );\n#ifdef WRAP_AROUND\nfloat dirDiffuseWeightFull = max( dotProduct, 0.0 );\nfloat dirDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\nvec3 dirDiffuseWeight = mix( vec3( dirDiffuseWeightFull ), vec3( dirDiffuseWeightHalf ), wrapRGB );\n#else\nfloat dirDiffuseWeight = max( dotProduct, 0.0 );\n#endif\ndirDiffuse  += diffuse * directionalLightColor[ i ] * dirDiffuseWeight;\nvec3 dirHalfVector = normalize( dirVector + viewPosition );\nfloat dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\nfloat dirSpecularWeight = specularStrength * max( pow( dirDotNormalHalf, shininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\nvec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( dirVector, dirHalfVector ), 5.0 );\ndirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;\n#else\ndirSpecular += specular * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight;\n#endif\n}\n#endif\n#if MAX_HEMI_LIGHTS > 0\nvec3 hemiDiffuse  = vec3( 0.0 );\nvec3 hemiSpecular = vec3( 0.0 );\nfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\nvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\nvec3 lVector = normalize( lDirection.xyz );\nfloat dotProduct = dot( normal, lVector );\nfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\nvec3 hemiColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\nhemiDiffuse += diffuse * hemiColor;\nvec3 hemiHalfVectorSky = normalize( lVector + viewPosition );\nfloat hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;\nfloat hemiSpecularWeightSky = specularStrength * max( pow( hemiDotNormalHalfSky, shininess ), 0.0 );\nvec3 lVectorGround = -lVector;\nvec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );\nfloat hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;\nfloat hemiSpecularWeightGround = specularStrength * max( pow( hemiDotNormalHalfGround, shininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat dotProductGround = dot( normal, lVectorGround );\nfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\nvec3 schlickSky = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, hemiHalfVectorSky ), 5.0 );\nvec3 schlickGround = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVectorGround, hemiHalfVectorGround ), 5.0 );\nhemiSpecular += hemiColor * specularNormalization * ( schlickSky * hemiSpecularWeightSky * max( dotProduct, 0.0 ) + schlickGround * hemiSpecularWeightGround * max( dotProductGround, 0.0 ) );\n#else\nhemiSpecular += specular * hemiColor * ( hemiSpecularWeightSky + hemiSpecularWeightGround ) * hemiDiffuseWeight;\n#endif\n}\n#endif\nvec3 totalDiffuse = vec3( 0.0 );\nvec3 totalSpecular = vec3( 0.0 );\n#if MAX_DIR_LIGHTS > 0\ntotalDiffuse += dirDiffuse;\ntotalSpecular += dirSpecular;\n#endif\n#if MAX_HEMI_LIGHTS > 0\ntotalDiffuse += hemiDiffuse;\ntotalSpecular += hemiSpecular;\n#endif\n#if MAX_POINT_LIGHTS > 0\ntotalDiffuse += pointDiffuse;\ntotalSpecular += pointSpecular;\n#endif\n#if MAX_SPOT_LIGHTS > 0\ntotalDiffuse += spotDiffuse;\ntotalSpecular += spotSpecular;\n#endif\n#ifdef METAL\ngl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient + totalSpecular );\n#else\ngl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient ) + totalSpecular;\n#endif",
color_pars_fragment:"#ifdef USE_COLOR\nvarying vec3 vColor;\n#endif",color_fragment:"#ifdef USE_COLOR\ngl_FragColor = gl_FragColor * vec4( vColor, opacity );\n#endif",color_pars_vertex:"#ifdef USE_COLOR\nvarying vec3 vColor;\n#endif",color_vertex:"#ifdef USE_COLOR\n#ifdef GAMMA_INPUT\nvColor = color * color;\n#else\nvColor = color;\n#endif\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\n#ifdef BONE_TEXTURE\nuniform sampler2D boneTexture;\nmat4 getBoneMatrix( const in float i ) {\nfloat j = i * 4.0;\nfloat x = mod( j, N_BONE_PIXEL_X );\nfloat y = floor( j / N_BONE_PIXEL_X );\nconst float dx = 1.0 / N_BONE_PIXEL_X;\nconst float dy = 1.0 / N_BONE_PIXEL_Y;\ny = dy * ( y + 0.5 );\nvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\nvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\nvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\nvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\nmat4 bone = mat4( v1, v2, v3, v4 );\nreturn bone;\n}\n#else\nuniform mat4 boneGlobalMatrices[ MAX_BONES ];\nmat4 getBoneMatrix( const in float i ) {\nmat4 bone = boneGlobalMatrices[ int(i) ];\nreturn bone;\n}\n#endif\n#endif",
skinbase_vertex:"#ifdef USE_SKINNING\nmat4 boneMatX = getBoneMatrix( skinIndex.x );\nmat4 boneMatY = getBoneMatrix( skinIndex.y );\n#endif",skinning_vertex:"#ifdef USE_SKINNING\n#ifdef USE_MORPHTARGETS\nvec4 skinVertex = vec4( morphed, 1.0 );\n#else\nvec4 skinVertex = vec4( position, 1.0 );\n#endif\nvec4 skinned  = boneMatX * skinVertex * skinWeight.x;\nskinned \t  += boneMatY * skinVertex * skinWeight.y;\n#endif",morphtarget_pars_vertex:"#ifdef USE_MORPHTARGETS\n#ifndef USE_MORPHNORMALS\nuniform float morphTargetInfluences[ 8 ];\n#else\nuniform float morphTargetInfluences[ 4 ];\n#endif\n#endif",
morphtarget_vertex:"#ifdef USE_MORPHTARGETS\nvec3 morphed = vec3( 0.0 );\nmorphed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\nmorphed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\nmorphed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\nmorphed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\n#ifndef USE_MORPHNORMALS\nmorphed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\nmorphed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\nmorphed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\nmorphed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\n#endif\nmorphed += position;\n#endif",
default_vertex:"vec4 mvPosition;\n#ifdef USE_SKINNING\nmvPosition = modelViewMatrix * skinned;\n#endif\n#if !defined( USE_SKINNING ) && defined( USE_MORPHTARGETS )\nmvPosition = modelViewMatrix * vec4( morphed, 1.0 );\n#endif\n#if !defined( USE_SKINNING ) && ! defined( USE_MORPHTARGETS )\nmvPosition = modelViewMatrix * vec4( position, 1.0 );\n#endif\ngl_Position = projectionMatrix * mvPosition;",morphnormal_vertex:"#ifdef USE_MORPHNORMALS\nvec3 morphedNormal = vec3( 0.0 );\nmorphedNormal +=  ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\nmorphedNormal +=  ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\nmorphedNormal +=  ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\nmorphedNormal +=  ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\nmorphedNormal += normal;\n#endif",
skinnormal_vertex:"#ifdef USE_SKINNING\nmat4 skinMatrix = skinWeight.x * boneMatX;\nskinMatrix \t+= skinWeight.y * boneMatY;\n#ifdef USE_MORPHNORMALS\nvec4 skinnedNormal = skinMatrix * vec4( morphedNormal, 0.0 );\n#else\nvec4 skinnedNormal = skinMatrix * vec4( normal, 0.0 );\n#endif\n#endif",defaultnormal_vertex:"vec3 objectNormal;\n#ifdef USE_SKINNING\nobjectNormal = skinnedNormal.xyz;\n#endif\n#if !defined( USE_SKINNING ) && defined( USE_MORPHNORMALS )\nobjectNormal = morphedNormal;\n#endif\n#if !defined( USE_SKINNING ) && ! defined( USE_MORPHNORMALS )\nobjectNormal = normal;\n#endif\n#ifdef FLIP_SIDED\nobjectNormal = -objectNormal;\n#endif\nvec3 transformedNormal = normalMatrix * objectNormal;",
shadowmap_pars_fragment:"#ifdef USE_SHADOWMAP\nuniform sampler2D shadowMap[ MAX_SHADOWS ];\nuniform vec2 shadowMapSize[ MAX_SHADOWS ];\nuniform float shadowDarkness[ MAX_SHADOWS ];\nuniform float shadowBias[ MAX_SHADOWS ];\nvarying vec4 vShadowCoord[ MAX_SHADOWS ];\nfloat unpackDepth( const in vec4 rgba_depth ) {\nconst vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );\nfloat depth = dot( rgba_depth, bit_shift );\nreturn depth;\n}\n#endif",shadowmap_fragment:"#ifdef USE_SHADOWMAP\n#ifdef SHADOWMAP_DEBUG\nvec3 frustumColors[3];\nfrustumColors[0] = vec3( 1.0, 0.5, 0.0 );\nfrustumColors[1] = vec3( 0.0, 1.0, 0.8 );\nfrustumColors[2] = vec3( 0.0, 0.5, 1.0 );\n#endif\n#ifdef SHADOWMAP_CASCADE\nint inFrustumCount = 0;\n#endif\nfloat fDepth;\nvec3 shadowColor = vec3( 1.0 );\nfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\nvec3 shadowCoord = vShadowCoord[ i ].xyz / vShadowCoord[ i ].w;\nbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\nbool inFrustum = all( inFrustumVec );\n#ifdef SHADOWMAP_CASCADE\ninFrustumCount += int( inFrustum );\nbvec3 frustumTestVec = bvec3( inFrustum, inFrustumCount == 1, shadowCoord.z <= 1.0 );\n#else\nbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n#endif\nbool frustumTest = all( frustumTestVec );\nif ( frustumTest ) {\nshadowCoord.z += shadowBias[ i ];\n#if defined( SHADOWMAP_TYPE_PCF )\nfloat shadow = 0.0;\nconst float shadowDelta = 1.0 / 9.0;\nfloat xPixelOffset = 1.0 / shadowMapSize[ i ].x;\nfloat yPixelOffset = 1.0 / shadowMapSize[ i ].y;\nfloat dx0 = -1.25 * xPixelOffset;\nfloat dy0 = -1.25 * yPixelOffset;\nfloat dx1 = 1.25 * xPixelOffset;\nfloat dy1 = 1.25 * yPixelOffset;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nshadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );\n#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\nfloat shadow = 0.0;\nfloat xPixelOffset = 1.0 / shadowMapSize[ i ].x;\nfloat yPixelOffset = 1.0 / shadowMapSize[ i ].y;\nfloat dx0 = -1.0 * xPixelOffset;\nfloat dy0 = -1.0 * yPixelOffset;\nfloat dx1 = 1.0 * xPixelOffset;\nfloat dy1 = 1.0 * yPixelOffset;\nmat3 shadowKernel;\nmat3 depthKernel;\ndepthKernel[0][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\nif ( depthKernel[0][0] < shadowCoord.z ) shadowKernel[0][0] = 0.25;\nelse shadowKernel[0][0] = 0.0;\ndepthKernel[0][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\nif ( depthKernel[0][1] < shadowCoord.z ) shadowKernel[0][1] = 0.25;\nelse shadowKernel[0][1] = 0.0;\ndepthKernel[0][2] = unpackDepth( texture2D( shadowMap[ i], shadowCoord.xy + vec2( dx0, dy1 ) ) );\nif ( depthKernel[0][2] < shadowCoord.z ) shadowKernel[0][2] = 0.25;\nelse shadowKernel[0][2] = 0.0;\ndepthKernel[1][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\nif ( depthKernel[1][0] < shadowCoord.z ) shadowKernel[1][0] = 0.25;\nelse shadowKernel[1][0] = 0.0;\ndepthKernel[1][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\nif ( depthKernel[1][1] < shadowCoord.z ) shadowKernel[1][1] = 0.25;\nelse shadowKernel[1][1] = 0.0;\ndepthKernel[1][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\nif ( depthKernel[1][2] < shadowCoord.z ) shadowKernel[1][2] = 0.25;\nelse shadowKernel[1][2] = 0.0;\ndepthKernel[2][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\nif ( depthKernel[2][0] < shadowCoord.z ) shadowKernel[2][0] = 0.25;\nelse shadowKernel[2][0] = 0.0;\ndepthKernel[2][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\nif ( depthKernel[2][1] < shadowCoord.z ) shadowKernel[2][1] = 0.25;\nelse shadowKernel[2][1] = 0.0;\ndepthKernel[2][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\nif ( depthKernel[2][2] < shadowCoord.z ) shadowKernel[2][2] = 0.25;\nelse shadowKernel[2][2] = 0.0;\nvec2 fractionalCoord = 1.0 - fract( shadowCoord.xy * shadowMapSize[i].xy );\nshadowKernel[0] = mix( shadowKernel[1], shadowKernel[0], fractionalCoord.x );\nshadowKernel[1] = mix( shadowKernel[2], shadowKernel[1], fractionalCoord.x );\nvec4 shadowValues;\nshadowValues.x = mix( shadowKernel[0][1], shadowKernel[0][0], fractionalCoord.y );\nshadowValues.y = mix( shadowKernel[0][2], shadowKernel[0][1], fractionalCoord.y );\nshadowValues.z = mix( shadowKernel[1][1], shadowKernel[1][0], fractionalCoord.y );\nshadowValues.w = mix( shadowKernel[1][2], shadowKernel[1][1], fractionalCoord.y );\nshadow = dot( shadowValues, vec4( 1.0 ) );\nshadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );\n#else\nvec4 rgbaDepth = texture2D( shadowMap[ i ], shadowCoord.xy );\nfloat fDepth = unpackDepth( rgbaDepth );\nif ( fDepth < shadowCoord.z )\nshadowColor = shadowColor * vec3( 1.0 - shadowDarkness[ i ] );\n#endif\n}\n#ifdef SHADOWMAP_DEBUG\n#ifdef SHADOWMAP_CASCADE\nif ( inFrustum && inFrustumCount == 1 ) gl_FragColor.xyz *= frustumColors[ i ];\n#else\nif ( inFrustum ) gl_FragColor.xyz *= frustumColors[ i ];\n#endif\n#endif\n}\n#ifdef GAMMA_OUTPUT\nshadowColor *= shadowColor;\n#endif\ngl_FragColor.xyz = gl_FragColor.xyz * shadowColor;\n#endif",
shadowmap_pars_vertex:"#ifdef USE_SHADOWMAP\nvarying vec4 vShadowCoord[ MAX_SHADOWS ];\nuniform mat4 shadowMatrix[ MAX_SHADOWS ];\n#endif",shadowmap_vertex:"#ifdef USE_SHADOWMAP\nfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\nvShadowCoord[ i ] = shadowMatrix[ i ] * worldPosition;\n}\n#endif",alphatest_fragment:"#ifdef ALPHATEST\nif ( gl_FragColor.a < ALPHATEST ) discard;\n#endif",linear_to_gamma_fragment:"#ifdef GAMMA_OUTPUT\ngl_FragColor.xyz = sqrt( gl_FragColor.xyz );\n#endif"};
THREE.UniformsUtils={merge:function(a){var b,c,d,f={};for(b=0;b<a.length;b++)for(c in d=this.clone(a[b]),d)f[c]=d[c];return f},clone:function(a){var b,c,d,f={};for(b in a)for(c in f[b]={},a[b])d=a[b][c],f[b][c]=d instanceof THREE.Color||d instanceof THREE.Vector2||d instanceof THREE.Vector3||d instanceof THREE.Vector4||d instanceof THREE.Matrix4||d instanceof THREE.Texture?d.clone():d instanceof Array?d.slice():d;return f}};
THREE.UniformsLib={common:{diffuse:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},map:{type:"t",value:null},offsetRepeat:{type:"v4",value:new THREE.Vector4(0,0,1,1)},lightMap:{type:"t",value:null},specularMap:{type:"t",value:null},envMap:{type:"t",value:null},flipEnvMap:{type:"f",value:-1},useRefract:{type:"i",value:0},reflectivity:{type:"f",value:1},refractionRatio:{type:"f",value:0.98},combine:{type:"i",value:0},morphTargetInfluences:{type:"f",value:0}},bump:{bumpMap:{type:"t",
value:null},bumpScale:{type:"f",value:1}},normalmap:{normalMap:{type:"t",value:null},normalScale:{type:"v2",value:new THREE.Vector2(1,1)}},fog:{fogDensity:{type:"f",value:2.5E-4},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2E3},fogColor:{type:"c",value:new THREE.Color(16777215)}},lights:{ambientLightColor:{type:"fv",value:[]},directionalLightDirection:{type:"fv",value:[]},directionalLightColor:{type:"fv",value:[]},hemisphereLightDirection:{type:"fv",value:[]},hemisphereLightSkyColor:{type:"fv",
value:[]},hemisphereLightGroundColor:{type:"fv",value:[]},pointLightColor:{type:"fv",value:[]},pointLightPosition:{type:"fv",value:[]},pointLightDistance:{type:"fv1",value:[]},spotLightColor:{type:"fv",value:[]},spotLightPosition:{type:"fv",value:[]},spotLightDirection:{type:"fv",value:[]},spotLightDistance:{type:"fv1",value:[]},spotLightAngleCos:{type:"fv1",value:[]},spotLightExponent:{type:"fv1",value:[]}},particle:{psColor:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},size:{type:"f",
value:1},scale:{type:"f",value:1},map:{type:"t",value:null},fogDensity:{type:"f",value:2.5E-4},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2E3},fogColor:{type:"c",value:new THREE.Color(16777215)}},shadowmap:{shadowMap:{type:"tv",value:[]},shadowMapSize:{type:"v2v",value:[]},shadowBias:{type:"fv1",value:[]},shadowDarkness:{type:"fv1",value:[]},shadowMatrix:{type:"m4v",value:[]}}};
THREE.ShaderLib={basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.shadowmap]),vertexShader:[THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,
THREE.ShaderChunk.skinbase_vertex,"#ifdef USE_ENVMAP",THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,"#endif",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;\nuniform float opacity;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,
THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,"void main() {\ngl_FragColor = vec4( diffuse, opacity );",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,
THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},lambert:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{ambient:{type:"c",value:new THREE.Color(16777215)},emissive:{type:"c",value:new THREE.Color(0)},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),vertexShader:["#define LAMBERT\nvarying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\nvarying vec3 vLightBack;\n#endif",
THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_lambert_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,
THREE.ShaderChunk.defaultnormal_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.lights_lambert_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform float opacity;\nvarying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\nvarying vec3 vLightBack;\n#endif",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,
THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,"void main() {\ngl_FragColor = vec4( vec3 ( 1.0 ), opacity );",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,"#ifdef DOUBLE_SIDED\nif ( gl_FrontFacing )\ngl_FragColor.xyz *= vLightFront;\nelse\ngl_FragColor.xyz *= vLightBack;\n#else\ngl_FragColor.xyz *= vLightFront;\n#endif",THREE.ShaderChunk.lightmap_fragment,
THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},phong:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.bump,THREE.UniformsLib.normalmap,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{ambient:{type:"c",value:new THREE.Color(16777215)},emissive:{type:"c",value:new THREE.Color(0)},specular:{type:"c",
value:new THREE.Color(1118481)},shininess:{type:"f",value:30},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),vertexShader:["#define PHONG\nvarying vec3 vViewPosition;\nvarying vec3 vNormal;",THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_phong_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,
"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,"vNormal = normalize( transformedNormal );",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,"vViewPosition = -mvPosition.xyz;",THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,
THREE.ShaderChunk.lights_phong_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;\nuniform float opacity;\nuniform vec3 ambient;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.lights_phong_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,
THREE.ShaderChunk.bumpmap_pars_fragment,THREE.ShaderChunk.normalmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,"void main() {\ngl_FragColor = vec4( vec3 ( 1.0 ), opacity );",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,THREE.ShaderChunk.lights_phong_fragment,THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,
THREE.ShaderChunk.fog_fragment,"}"].join("\n")},particle_basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.particle,THREE.UniformsLib.shadowmap]),vertexShader:["uniform float size;\nuniform float scale;",THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.color_vertex,"vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n#ifdef USE_SIZEATTENUATION\ngl_PointSize = size * ( scale / length( mvPosition.xyz ) );\n#else\ngl_PointSize = size;\n#endif\ngl_Position = projectionMatrix * mvPosition;",
THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 psColor;\nuniform float opacity;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_particle_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,"void main() {\ngl_FragColor = vec4( psColor, opacity );",THREE.ShaderChunk.map_particle_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.shadowmap_fragment,
THREE.ShaderChunk.fog_fragment,"}"].join("\n")},dashed:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,{scale:{type:"f",value:1},dashSize:{type:"f",value:1},totalSize:{type:"f",value:2}}]),vertexShader:["uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;",THREE.ShaderChunk.color_pars_vertex,"void main() {",THREE.ShaderChunk.color_vertex,"vLineDistance = scale * lineDistance;\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\ngl_Position = projectionMatrix * mvPosition;\n}"].join("\n"),
fragmentShader:["uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,"void main() {\nif ( mod( vLineDistance, totalSize ) > dashSize ) {\ndiscard;\n}\ngl_FragColor = vec4( diffuse, opacity );",THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},depth:{uniforms:{mNear:{type:"f",value:1},mFar:{type:"f",value:2E3},opacity:{type:"f",
value:1}},vertexShader:"void main() {\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform float mNear;\nuniform float mFar;\nuniform float opacity;\nvoid main() {\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\nfloat color = 1.0 - smoothstep( mNear, mFar, depth );\ngl_FragColor = vec4( vec3( color ), opacity );\n}"},normal:{uniforms:{opacity:{type:"f",value:1}},vertexShader:"varying vec3 vNormal;\nvoid main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\nvNormal = normalize( normalMatrix * normal );\ngl_Position = projectionMatrix * mvPosition;\n}",
fragmentShader:"uniform float opacity;\nvarying vec3 vNormal;\nvoid main() {\ngl_FragColor = vec4( 0.5 * normalize( vNormal ) + 0.5, opacity );\n}"},normalmap:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{enableAO:{type:"i",value:0},enableDiffuse:{type:"i",value:0},enableSpecular:{type:"i",value:0},enableReflection:{type:"i",value:0},enableDisplacement:{type:"i",value:0},tDisplacement:{type:"t",value:null},tDiffuse:{type:"t",value:null},
tCube:{type:"t",value:null},tNormal:{type:"t",value:null},tSpecular:{type:"t",value:null},tAO:{type:"t",value:null},uNormalScale:{type:"v2",value:new THREE.Vector2(1,1)},uDisplacementBias:{type:"f",value:0},uDisplacementScale:{type:"f",value:1},uDiffuseColor:{type:"c",value:new THREE.Color(16777215)},uSpecularColor:{type:"c",value:new THREE.Color(1118481)},uAmbientColor:{type:"c",value:new THREE.Color(16777215)},uShininess:{type:"f",value:30},uOpacity:{type:"f",value:1},useRefract:{type:"i",value:0},
uRefractionRatio:{type:"f",value:0.98},uReflectivity:{type:"f",value:0.5},uOffset:{type:"v2",value:new THREE.Vector2(0,0)},uRepeat:{type:"v2",value:new THREE.Vector2(1,1)},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),fragmentShader:["uniform vec3 uAmbientColor;\nuniform vec3 uDiffuseColor;\nuniform vec3 uSpecularColor;\nuniform float uShininess;\nuniform float uOpacity;\nuniform bool enableDiffuse;\nuniform bool enableSpecular;\nuniform bool enableAO;\nuniform bool enableReflection;\nuniform sampler2D tDiffuse;\nuniform sampler2D tNormal;\nuniform sampler2D tSpecular;\nuniform sampler2D tAO;\nuniform samplerCube tCube;\nuniform vec2 uNormalScale;\nuniform bool useRefract;\nuniform float uRefractionRatio;\nuniform float uReflectivity;\nvarying vec3 vTangent;\nvarying vec3 vBinormal;\nvarying vec3 vNormal;\nvarying vec2 vUv;\nuniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_HEMI_LIGHTS > 0\nuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n#endif\n#if MAX_SPOT_LIGHTS > 0\nuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\nuniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\nuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\nuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\n#endif\n#ifdef WRAP_AROUND\nuniform vec3 wrapRGB;\n#endif\nvarying vec3 vWorldPosition;\nvarying vec3 vViewPosition;",
THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,"void main() {\ngl_FragColor = vec4( vec3( 1.0 ), uOpacity );\nvec3 specularTex = vec3( 1.0 );\nvec3 normalTex = texture2D( tNormal, vUv ).xyz * 2.0 - 1.0;\nnormalTex.xy *= uNormalScale;\nnormalTex = normalize( normalTex );\nif( enableDiffuse ) {\n#ifdef GAMMA_INPUT\nvec4 texelColor = texture2D( tDiffuse, vUv );\ntexelColor.xyz *= texelColor.xyz;\ngl_FragColor = gl_FragColor * texelColor;\n#else\ngl_FragColor = gl_FragColor * texture2D( tDiffuse, vUv );\n#endif\n}\nif( enableAO ) {\n#ifdef GAMMA_INPUT\nvec4 aoColor = texture2D( tAO, vUv );\naoColor.xyz *= aoColor.xyz;\ngl_FragColor.xyz = gl_FragColor.xyz * aoColor.xyz;\n#else\ngl_FragColor.xyz = gl_FragColor.xyz * texture2D( tAO, vUv ).xyz;\n#endif\n}\nif( enableSpecular )\nspecularTex = texture2D( tSpecular, vUv ).xyz;\nmat3 tsb = mat3( normalize( vTangent ), normalize( vBinormal ), normalize( vNormal ) );\nvec3 finalNormal = tsb * normalTex;\n#ifdef FLIP_SIDED\nfinalNormal = -finalNormal;\n#endif\nvec3 normal = normalize( finalNormal );\nvec3 viewPosition = normalize( vViewPosition );\n#if MAX_POINT_LIGHTS > 0\nvec3 pointDiffuse = vec3( 0.0 );\nvec3 pointSpecular = vec3( 0.0 );\nfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 pointVector = lPosition.xyz + vViewPosition.xyz;\nfloat pointDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\npointDistance = 1.0 - min( ( length( pointVector ) / pointLightDistance[ i ] ), 1.0 );\npointVector = normalize( pointVector );\n#ifdef WRAP_AROUND\nfloat pointDiffuseWeightFull = max( dot( normal, pointVector ), 0.0 );\nfloat pointDiffuseWeightHalf = max( 0.5 * dot( normal, pointVector ) + 0.5, 0.0 );\nvec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );\n#else\nfloat pointDiffuseWeight = max( dot( normal, pointVector ), 0.0 );\n#endif\npointDiffuse += pointDistance * pointLightColor[ i ] * uDiffuseColor * pointDiffuseWeight;\nvec3 pointHalfVector = normalize( pointVector + viewPosition );\nfloat pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\nfloat pointSpecularWeight = specularTex.r * max( pow( pointDotNormalHalf, uShininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( uShininess + 2.0001 ) / 8.0;\nvec3 schlick = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( pointVector, pointHalfVector ), 5.0 );\npointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * pointDistance * specularNormalization;\n#else\npointSpecular += pointDistance * pointLightColor[ i ] * uSpecularColor * pointSpecularWeight * pointDiffuseWeight;\n#endif\n}\n#endif\n#if MAX_SPOT_LIGHTS > 0\nvec3 spotDiffuse = vec3( 0.0 );\nvec3 spotSpecular = vec3( 0.0 );\nfor ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\nvec3 spotVector = lPosition.xyz + vViewPosition.xyz;\nfloat spotDistance = 1.0;\nif ( spotLightDistance[ i ] > 0.0 )\nspotDistance = 1.0 - min( ( length( spotVector ) / spotLightDistance[ i ] ), 1.0 );\nspotVector = normalize( spotVector );\nfloat spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );\nif ( spotEffect > spotLightAngleCos[ i ] ) {\nspotEffect = max( pow( spotEffect, spotLightExponent[ i ] ), 0.0 );\n#ifdef WRAP_AROUND\nfloat spotDiffuseWeightFull = max( dot( normal, spotVector ), 0.0 );\nfloat spotDiffuseWeightHalf = max( 0.5 * dot( normal, spotVector ) + 0.5, 0.0 );\nvec3 spotDiffuseWeight = mix( vec3 ( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );\n#else\nfloat spotDiffuseWeight = max( dot( normal, spotVector ), 0.0 );\n#endif\nspotDiffuse += spotDistance * spotLightColor[ i ] * uDiffuseColor * spotDiffuseWeight * spotEffect;\nvec3 spotHalfVector = normalize( spotVector + viewPosition );\nfloat spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );\nfloat spotSpecularWeight = specularTex.r * max( pow( spotDotNormalHalf, uShininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( uShininess + 2.0001 ) / 8.0;\nvec3 schlick = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( spotVector, spotHalfVector ), 5.0 );\nspotSpecular += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * spotDistance * specularNormalization * spotEffect;\n#else\nspotSpecular += spotDistance * spotLightColor[ i ] * uSpecularColor * spotSpecularWeight * spotDiffuseWeight * spotEffect;\n#endif\n}\n}\n#endif\n#if MAX_DIR_LIGHTS > 0\nvec3 dirDiffuse = vec3( 0.0 );\nvec3 dirSpecular = vec3( 0.0 );\nfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\n#ifdef WRAP_AROUND\nfloat directionalLightWeightingFull = max( dot( normal, dirVector ), 0.0 );\nfloat directionalLightWeightingHalf = max( 0.5 * dot( normal, dirVector ) + 0.5, 0.0 );\nvec3 dirDiffuseWeight = mix( vec3( directionalLightWeightingFull ), vec3( directionalLightWeightingHalf ), wrapRGB );\n#else\nfloat dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );\n#endif\ndirDiffuse += directionalLightColor[ i ] * uDiffuseColor * dirDiffuseWeight;\nvec3 dirHalfVector = normalize( dirVector + viewPosition );\nfloat dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\nfloat dirSpecularWeight = specularTex.r * max( pow( dirDotNormalHalf, uShininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( uShininess + 2.0001 ) / 8.0;\nvec3 schlick = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( dirVector, dirHalfVector ), 5.0 );\ndirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;\n#else\ndirSpecular += directionalLightColor[ i ] * uSpecularColor * dirSpecularWeight * dirDiffuseWeight;\n#endif\n}\n#endif\n#if MAX_HEMI_LIGHTS > 0\nvec3 hemiDiffuse  = vec3( 0.0 );\nvec3 hemiSpecular = vec3( 0.0 );\nfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\nvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\nvec3 lVector = normalize( lDirection.xyz );\nfloat dotProduct = dot( normal, lVector );\nfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\nvec3 hemiColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\nhemiDiffuse += uDiffuseColor * hemiColor;\nvec3 hemiHalfVectorSky = normalize( lVector + viewPosition );\nfloat hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;\nfloat hemiSpecularWeightSky = specularTex.r * max( pow( hemiDotNormalHalfSky, uShininess ), 0.0 );\nvec3 lVectorGround = -lVector;\nvec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );\nfloat hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;\nfloat hemiSpecularWeightGround = specularTex.r * max( pow( hemiDotNormalHalfGround, uShininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat dotProductGround = dot( normal, lVectorGround );\nfloat specularNormalization = ( uShininess + 2.0001 ) / 8.0;\nvec3 schlickSky = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( lVector, hemiHalfVectorSky ), 5.0 );\nvec3 schlickGround = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( lVectorGround, hemiHalfVectorGround ), 5.0 );\nhemiSpecular += hemiColor * specularNormalization * ( schlickSky * hemiSpecularWeightSky * max( dotProduct, 0.0 ) + schlickGround * hemiSpecularWeightGround * max( dotProductGround, 0.0 ) );\n#else\nhemiSpecular += uSpecularColor * hemiColor * ( hemiSpecularWeightSky + hemiSpecularWeightGround ) * hemiDiffuseWeight;\n#endif\n}\n#endif\nvec3 totalDiffuse = vec3( 0.0 );\nvec3 totalSpecular = vec3( 0.0 );\n#if MAX_DIR_LIGHTS > 0\ntotalDiffuse += dirDiffuse;\ntotalSpecular += dirSpecular;\n#endif\n#if MAX_HEMI_LIGHTS > 0\ntotalDiffuse += hemiDiffuse;\ntotalSpecular += hemiSpecular;\n#endif\n#if MAX_POINT_LIGHTS > 0\ntotalDiffuse += pointDiffuse;\ntotalSpecular += pointSpecular;\n#endif\n#if MAX_SPOT_LIGHTS > 0\ntotalDiffuse += spotDiffuse;\ntotalSpecular += spotSpecular;\n#endif\n#ifdef METAL\ngl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * uAmbientColor + totalSpecular );\n#else\ngl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * uAmbientColor ) + totalSpecular;\n#endif\nif ( enableReflection ) {\nvec3 vReflect;\nvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\nif ( useRefract ) {\nvReflect = refract( cameraToVertex, normal, uRefractionRatio );\n} else {\nvReflect = reflect( cameraToVertex, normal );\n}\nvec4 cubeColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );\n#ifdef GAMMA_INPUT\ncubeColor.xyz *= cubeColor.xyz;\n#endif\ngl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, specularTex.r * uReflectivity );\n}",
THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n"),vertexShader:["attribute vec4 tangent;\nuniform vec2 uOffset;\nuniform vec2 uRepeat;\nuniform bool enableDisplacement;\n#ifdef VERTEX_TEXTURES\nuniform sampler2D tDisplacement;\nuniform float uDisplacementScale;\nuniform float uDisplacementBias;\n#endif\nvarying vec3 vTangent;\nvarying vec3 vBinormal;\nvarying vec3 vNormal;\nvarying vec2 vUv;\nvarying vec3 vWorldPosition;\nvarying vec3 vViewPosition;",
THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,"#ifdef USE_SKINNING\nvNormal = normalize( normalMatrix * skinnedNormal.xyz );\nvec4 skinnedTangent = skinMatrix * vec4( tangent.xyz, 0.0 );\nvTangent = normalize( normalMatrix * skinnedTangent.xyz );\n#else\nvNormal = normalize( normalMatrix * normal );\nvTangent = normalize( normalMatrix * tangent.xyz );\n#endif\nvBinormal = normalize( cross( vNormal, vTangent ) * tangent.w );\nvUv = uv * uRepeat + uOffset;\nvec3 displacedPosition;\n#ifdef VERTEX_TEXTURES\nif ( enableDisplacement ) {\nvec3 dv = texture2D( tDisplacement, uv ).xyz;\nfloat df = uDisplacementScale * dv.x + uDisplacementBias;\ndisplacedPosition = position + normalize( normal ) * df;\n} else {\n#ifdef USE_SKINNING\nvec4 skinVertex = vec4( position, 1.0 );\nvec4 skinned  = boneMatX * skinVertex * skinWeight.x;\nskinned \t  += boneMatY * skinVertex * skinWeight.y;\ndisplacedPosition  = skinned.xyz;\n#else\ndisplacedPosition = position;\n#endif\n}\n#else\n#ifdef USE_SKINNING\nvec4 skinVertex = vec4( position, 1.0 );\nvec4 skinned  = boneMatX * skinVertex * skinWeight.x;\nskinned \t  += boneMatY * skinVertex * skinWeight.y;\ndisplacedPosition  = skinned.xyz;\n#else\ndisplacedPosition = position;\n#endif\n#endif\nvec4 mvPosition = modelViewMatrix * vec4( displacedPosition, 1.0 );\nvec4 worldPosition = modelMatrix * vec4( displacedPosition, 1.0 );\ngl_Position = projectionMatrix * mvPosition;\nvWorldPosition = worldPosition.xyz;\nvViewPosition = -mvPosition.xyz;\n#ifdef USE_SHADOWMAP\nfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\nvShadowCoord[ i ] = shadowMatrix[ i ] * worldPosition;\n}\n#endif\n}"].join("\n")},
cube:{uniforms:{tCube:{type:"t",value:null},tFlip:{type:"f",value:-1}},vertexShader:"varying vec3 vWorldPosition;\nvoid main() {\nvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\nvWorldPosition = worldPosition.xyz;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform samplerCube tCube;\nuniform float tFlip;\nvarying vec3 vWorldPosition;\nvoid main() {\ngl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );\n}"},
depthRGBA:{uniforms:{},vertexShader:[THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,"void main() {",THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,"}"].join("\n"),fragmentShader:"vec4 pack_depth( const in float depth ) {\nconst vec4 bit_shift = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );\nconst vec4 bit_mask  = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );\nvec4 res = fract( depth * bit_shift );\nres -= res.xxyz * bit_mask;\nreturn res;\n}\nvoid main() {\ngl_FragData[ 0 ] = pack_depth( gl_FragCoord.z );\n}"}};
THREE.WebGLRenderer=function(a){function b(a){if(a.__webglCustomAttributesList)for(var b in a.__webglCustomAttributesList)k.deleteBuffer(a.__webglCustomAttributesList[b].buffer)}function c(a,b){var c=a.vertices.length,d=b.material;if(d.attributes){void 0===a.__webglCustomAttributesList&&(a.__webglCustomAttributesList=[]);for(var f in d.attributes){var e=d.attributes[f];if(!e.__webglInitialized||e.createUniqueBuffers){e.__webglInitialized=!0;var g=1;"v2"===e.type?g=2:"v3"===e.type?g=3:"v4"===e.type?
g=4:"c"===e.type&&(g=3);e.size=g;e.array=new Float32Array(c*g);e.buffer=k.createBuffer();e.buffer.belongsToAttribute=f;e.needsUpdate=!0}a.__webglCustomAttributesList.push(e)}}}function d(a,b){var c=b.geometry,d=a.faces3,h=a.faces4,j=3*d.length+4*h.length,q=1*d.length+2*h.length,h=3*d.length+4*h.length,d=f(b,a),l=g(d),m=e(d),n=d.vertexColors?d.vertexColors:!1;a.__vertexArray=new Float32Array(3*j);m&&(a.__normalArray=new Float32Array(3*j));c.hasTangents&&(a.__tangentArray=new Float32Array(4*j));n&&
(a.__colorArray=new Float32Array(3*j));if(l){if(0<c.faceUvs.length||0<c.faceVertexUvs.length)a.__uvArray=new Float32Array(2*j);if(1<c.faceUvs.length||1<c.faceVertexUvs.length)a.__uv2Array=new Float32Array(2*j)}b.geometry.skinWeights.length&&b.geometry.skinIndices.length&&(a.__skinIndexArray=new Float32Array(4*j),a.__skinWeightArray=new Float32Array(4*j));a.__faceArray=new Uint16Array(3*q);a.__lineArray=new Uint16Array(2*h);if(a.numMorphTargets){a.__morphTargetsArrays=[];c=0;for(l=a.numMorphTargets;c<
l;c++)a.__morphTargetsArrays.push(new Float32Array(3*j))}if(a.numMorphNormals){a.__morphNormalsArrays=[];c=0;for(l=a.numMorphNormals;c<l;c++)a.__morphNormalsArrays.push(new Float32Array(3*j))}a.__webglFaceCount=3*q;a.__webglLineCount=2*h;if(d.attributes){void 0===a.__webglCustomAttributesList&&(a.__webglCustomAttributesList=[]);for(var p in d.attributes){var q=d.attributes[p],c={},r;for(r in q)c[r]=q[r];if(!c.__webglInitialized||c.createUniqueBuffers)c.__webglInitialized=!0,h=1,"v2"===c.type?h=2:
"v3"===c.type?h=3:"v4"===c.type?h=4:"c"===c.type&&(h=3),c.size=h,c.array=new Float32Array(j*h),c.buffer=k.createBuffer(),c.buffer.belongsToAttribute=p,q.needsUpdate=!0,c.__original=q;a.__webglCustomAttributesList.push(c)}}a.__inittedArrays=!0}function f(a,b){return a.material instanceof THREE.MeshFaceMaterial?a.material.materials[b.materialIndex]:a.material}function e(a){return a instanceof THREE.MeshBasicMaterial&&!a.envMap||a instanceof THREE.MeshDepthMaterial?!1:a&&void 0!==a.shading&&a.shading===
THREE.SmoothShading?THREE.SmoothShading:THREE.FlatShading}function g(a){return a.map||a.lightMap||a.bumpMap||a.normalMap||a.specularMap||a instanceof THREE.ShaderMaterial?!0:!1}function h(a){var b,c,d;for(b in a.attributes)d="index"===b?k.ELEMENT_ARRAY_BUFFER:k.ARRAY_BUFFER,c=a.attributes[b],c.buffer=k.createBuffer(),k.bindBuffer(d,c.buffer),k.bufferData(d,c.array,k.STATIC_DRAW)}function j(a,b,c){var d=a.attributes,f=d.index,e=d.position,g=d.normal,h=d.uv,j=d.color,d=d.tangent;a.elementsNeedUpdate&&
void 0!==f&&(k.bindBuffer(k.ELEMENT_ARRAY_BUFFER,f.buffer),k.bufferData(k.ELEMENT_ARRAY_BUFFER,f.array,b));a.verticesNeedUpdate&&void 0!==e&&(k.bindBuffer(k.ARRAY_BUFFER,e.buffer),k.bufferData(k.ARRAY_BUFFER,e.array,b));a.normalsNeedUpdate&&void 0!==g&&(k.bindBuffer(k.ARRAY_BUFFER,g.buffer),k.bufferData(k.ARRAY_BUFFER,g.array,b));a.uvsNeedUpdate&&void 0!==h&&(k.bindBuffer(k.ARRAY_BUFFER,h.buffer),k.bufferData(k.ARRAY_BUFFER,h.array,b));a.colorsNeedUpdate&&void 0!==j&&(k.bindBuffer(k.ARRAY_BUFFER,
j.buffer),k.bufferData(k.ARRAY_BUFFER,j.array,b));a.tangentsNeedUpdate&&void 0!==d&&(k.bindBuffer(k.ARRAY_BUFFER,d.buffer),k.bufferData(k.ARRAY_BUFFER,d.array,b));if(c)for(var q in a.attributes)delete a.attributes[q].array}function l(a){La[a]||(k.enableVertexAttribArray(a),La[a]=!0)}function n(){for(var a in La)La[a]&&(k.disableVertexAttribArray(a),La[a]=!1)}function r(a,b){return a.z!==b.z?b.z-a.z:b.id-a.id}function p(a,b){return b[0]-a[0]}function s(a,b,c){if(a.length)for(var d=0,f=a.length;d<f;d++)ba=
mb=null,ua=la=ma=ea=Xa=ja=$=-1,cb=!0,a[d].render(b,c,nc,pb),ba=mb=null,ua=la=ma=ea=Xa=ja=$=-1,cb=!0}function t(a,b,c,d,f,e,g,k){var h,j,q,l;b?(j=a.length-1,l=b=-1):(j=0,b=a.length,l=1);for(var m=j;m!==b;m+=l)if(h=a[m],h.render){j=h.object;q=h.buffer;if(k)h=k;else{h=h[c];if(!h)continue;g&&O.setBlending(h.blending,h.blendEquation,h.blendSrc,h.blendDst);O.setDepthTest(h.depthTest);O.setDepthWrite(h.depthWrite);G(h.polygonOffset,h.polygonOffsetFactor,h.polygonOffsetUnits)}O.setMaterialFaces(h);q instanceof
THREE.BufferGeometry?O.renderBufferDirect(d,f,e,h,q,j):O.renderBuffer(d,f,e,h,q,j)}}function m(a,b,c,d,f,e,g){for(var h,k,j=0,q=a.length;j<q;j++)if(h=a[j],k=h.object,k.visible){if(g)h=g;else{h=h[b];if(!h)continue;e&&O.setBlending(h.blending,h.blendEquation,h.blendSrc,h.blendDst);O.setDepthTest(h.depthTest);O.setDepthWrite(h.depthWrite);G(h.polygonOffset,h.polygonOffsetFactor,h.polygonOffsetUnits)}O.renderImmediateObject(c,d,f,h,k)}}function v(a,b,c){a.push({buffer:b,object:c,opaque:null,transparent:null})}
function B(a){for(var b in a.attributes)if(a.attributes[b].needsUpdate)return!0;return!1}function q(a){for(var b in a.attributes)a.attributes[b].needsUpdate=!1}function A(a,b){for(var c=a.length-1;0<=c;c--)a[c].object===b&&a.splice(c,1)}function u(a,b){for(var c=a.length-1;0<=c;c--)a[c]===b&&a.splice(c,1)}function x(a,b,c,d,f){Z=0;d.needsUpdate&&(d.program&&Qc(d),O.initMaterial(d,b,c,f),d.needsUpdate=!1);d.morphTargets&&!f.__webglMorphTargetInfluences&&(f.__webglMorphTargetInfluences=new Float32Array(O.maxMorphTargets));
var e=!1,g=d.program,h=g.uniforms,j=d.uniforms;g!==mb&&(k.useProgram(g),mb=g,e=!0);d.id!==ua&&(ua=d.id,e=!0);if(e||a!==ba)k.uniformMatrix4fv(h.projectionMatrix,!1,a.projectionMatrix.elements),a!==ba&&(ba=a);if(d.skinning)if(uc&&f.useVertexTexture){if(null!==h.boneTexture){var q=I();k.uniform1i(h.boneTexture,q);O.setTexture(f.boneTexture,q)}}else null!==h.boneGlobalMatrices&&k.uniformMatrix4fv(h.boneGlobalMatrices,!1,f.boneMatrices);if(e){c&&d.fog&&(j.fogColor.value=c.color,c instanceof THREE.Fog?
(j.fogNear.value=c.near,j.fogFar.value=c.far):c instanceof THREE.FogExp2&&(j.fogDensity.value=c.density));if(d instanceof THREE.MeshPhongMaterial||d instanceof THREE.MeshLambertMaterial||d.lights){if(cb){for(var l,m=q=0,n=0,p,r,A,u=xb,x=u.directional.colors,s=u.directional.positions,t=u.point.colors,v=u.point.positions,B=u.point.distances,C=u.spot.colors,D=u.spot.positions,F=u.spot.distances,G=u.spot.directions,K=u.spot.anglesCos,L=u.spot.exponents,H=u.hemi.skyColors,N=u.hemi.groundColors,Q=u.hemi.positions,
Y=0,ea=0,la=0,ga=0,da=0,qa=0,Na=0,ia=0,P=0,c=A=P=0,e=b.length;c<e;c++)l=b[c],l.onlyShadow||(p=l.color,r=l.intensity,A=l.distance,l instanceof THREE.AmbientLight?l.visible&&(O.gammaInput?(q+=p.r*p.r,m+=p.g*p.g,n+=p.b*p.b):(q+=p.r,m+=p.g,n+=p.b)):l instanceof THREE.DirectionalLight?(da+=1,l.visible&&(Ma.getPositionFromMatrix(l.matrixWorld),Ra.getPositionFromMatrix(l.target.matrixWorld),Ma.sub(Ra),Ma.normalize(),0===Ma.x&&0===Ma.y&&0===Ma.z||(l=3*Y,s[l]=Ma.x,s[l+1]=Ma.y,s[l+2]=Ma.z,O.gammaInput?z(x,
l,p,r*r):J(x,l,p,r),Y+=1))):l instanceof THREE.PointLight?(qa+=1,l.visible&&(P=3*ea,O.gammaInput?z(t,P,p,r*r):J(t,P,p,r),Ra.getPositionFromMatrix(l.matrixWorld),v[P]=Ra.x,v[P+1]=Ra.y,v[P+2]=Ra.z,B[ea]=A,ea+=1)):l instanceof THREE.SpotLight?(Na+=1,l.visible&&(P=3*la,O.gammaInput?z(C,P,p,r*r):J(C,P,p,r),Ra.getPositionFromMatrix(l.matrixWorld),D[P]=Ra.x,D[P+1]=Ra.y,D[P+2]=Ra.z,F[la]=A,Ma.copy(Ra),Ra.getPositionFromMatrix(l.target.matrixWorld),Ma.sub(Ra),Ma.normalize(),G[P]=Ma.x,G[P+1]=Ma.y,G[P+2]=Ma.z,
K[la]=Math.cos(l.angle),L[la]=l.exponent,la+=1)):l instanceof THREE.HemisphereLight&&(ia+=1,l.visible&&(Ma.getPositionFromMatrix(l.matrixWorld),Ma.normalize(),0===Ma.x&&0===Ma.y&&0===Ma.z||(A=3*ga,Q[A]=Ma.x,Q[A+1]=Ma.y,Q[A+2]=Ma.z,p=l.color,l=l.groundColor,O.gammaInput?(r*=r,z(H,A,p,r),z(N,A,l,r)):(J(H,A,p,r),J(N,A,l,r)),ga+=1))));c=3*Y;for(e=Math.max(x.length,3*da);c<e;c++)x[c]=0;c=3*ea;for(e=Math.max(t.length,3*qa);c<e;c++)t[c]=0;c=3*la;for(e=Math.max(C.length,3*Na);c<e;c++)C[c]=0;c=3*ga;for(e=
Math.max(H.length,3*ia);c<e;c++)H[c]=0;c=3*ga;for(e=Math.max(N.length,3*ia);c<e;c++)N[c]=0;u.directional.length=Y;u.point.length=ea;u.spot.length=la;u.hemi.length=ga;u.ambient[0]=q;u.ambient[1]=m;u.ambient[2]=n;cb=!1}c=xb;j.ambientLightColor.value=c.ambient;j.directionalLightColor.value=c.directional.colors;j.directionalLightDirection.value=c.directional.positions;j.pointLightColor.value=c.point.colors;j.pointLightPosition.value=c.point.positions;j.pointLightDistance.value=c.point.distances;j.spotLightColor.value=
c.spot.colors;j.spotLightPosition.value=c.spot.positions;j.spotLightDistance.value=c.spot.distances;j.spotLightDirection.value=c.spot.directions;j.spotLightAngleCos.value=c.spot.anglesCos;j.spotLightExponent.value=c.spot.exponents;j.hemisphereLightSkyColor.value=c.hemi.skyColors;j.hemisphereLightGroundColor.value=c.hemi.groundColors;j.hemisphereLightDirection.value=c.hemi.positions}if(d instanceof THREE.MeshBasicMaterial||d instanceof THREE.MeshLambertMaterial||d instanceof THREE.MeshPhongMaterial){j.opacity.value=
d.opacity;O.gammaInput?j.diffuse.value.copyGammaToLinear(d.color):j.diffuse.value=d.color;j.map.value=d.map;j.lightMap.value=d.lightMap;j.specularMap.value=d.specularMap;d.bumpMap&&(j.bumpMap.value=d.bumpMap,j.bumpScale.value=d.bumpScale);d.normalMap&&(j.normalMap.value=d.normalMap,j.normalScale.value.copy(d.normalScale));var $;d.map?$=d.map:d.specularMap?$=d.specularMap:d.normalMap?$=d.normalMap:d.bumpMap&&($=d.bumpMap);void 0!==$&&(c=$.offset,$=$.repeat,j.offsetRepeat.value.set(c.x,c.y,$.x,$.y));
j.envMap.value=d.envMap;j.flipEnvMap.value=d.envMap instanceof THREE.WebGLRenderTargetCube?1:-1;j.reflectivity.value=d.reflectivity;j.refractionRatio.value=d.refractionRatio;j.combine.value=d.combine;j.useRefract.value=d.envMap&&d.envMap.mapping instanceof THREE.CubeRefractionMapping}d instanceof THREE.LineBasicMaterial?(j.diffuse.value=d.color,j.opacity.value=d.opacity):d instanceof THREE.LineDashedMaterial?(j.diffuse.value=d.color,j.opacity.value=d.opacity,j.dashSize.value=d.dashSize,j.totalSize.value=
d.dashSize+d.gapSize,j.scale.value=d.scale):d instanceof THREE.ParticleBasicMaterial?(j.psColor.value=d.color,j.opacity.value=d.opacity,j.size.value=d.size,j.scale.value=V.height/2,j.map.value=d.map):d instanceof THREE.MeshPhongMaterial?(j.shininess.value=d.shininess,O.gammaInput?(j.ambient.value.copyGammaToLinear(d.ambient),j.emissive.value.copyGammaToLinear(d.emissive),j.specular.value.copyGammaToLinear(d.specular)):(j.ambient.value=d.ambient,j.emissive.value=d.emissive,j.specular.value=d.specular),
d.wrapAround&&j.wrapRGB.value.copy(d.wrapRGB)):d instanceof THREE.MeshLambertMaterial?(O.gammaInput?(j.ambient.value.copyGammaToLinear(d.ambient),j.emissive.value.copyGammaToLinear(d.emissive)):(j.ambient.value=d.ambient,j.emissive.value=d.emissive),d.wrapAround&&j.wrapRGB.value.copy(d.wrapRGB)):d instanceof THREE.MeshDepthMaterial?(j.mNear.value=a.near,j.mFar.value=a.far,j.opacity.value=d.opacity):d instanceof THREE.MeshNormalMaterial&&(j.opacity.value=d.opacity);if(f.receiveShadow&&!d._shadowPass&&
j.shadowMatrix){c=$=0;for(e=b.length;c<e;c++)if(q=b[c],q.castShadow&&(q instanceof THREE.SpotLight||q instanceof THREE.DirectionalLight&&!q.shadowCascade))j.shadowMap.value[$]=q.shadowMap,j.shadowMapSize.value[$]=q.shadowMapSize,j.shadowMatrix.value[$]=q.shadowMatrix,j.shadowDarkness.value[$]=q.shadowDarkness,j.shadowBias.value[$]=q.shadowBias,$++}b=d.uniformsList;j=0;for($=b.length;j<$;j++)if(e=g.uniforms[b[j][1]])if(c=b[j][0],m=c.type,q=c.value,"i"===m)k.uniform1i(e,q);else if("f"===m)k.uniform1f(e,
q);else if("v2"===m)k.uniform2f(e,q.x,q.y);else if("v3"===m)k.uniform3f(e,q.x,q.y,q.z);else if("v4"===m)k.uniform4f(e,q.x,q.y,q.z,q.w);else if("c"===m)k.uniform3f(e,q.r,q.g,q.b);else if("iv1"===m)k.uniform1iv(e,q);else if("iv"===m)k.uniform3iv(e,q);else if("fv1"===m)k.uniform1fv(e,q);else if("fv"===m)k.uniform3fv(e,q);else if("v2v"===m){void 0===c._array&&(c._array=new Float32Array(2*q.length));m=0;for(n=q.length;m<n;m++)u=2*m,c._array[u]=q[m].x,c._array[u+1]=q[m].y;k.uniform2fv(e,c._array)}else if("v3v"===
m){void 0===c._array&&(c._array=new Float32Array(3*q.length));m=0;for(n=q.length;m<n;m++)u=3*m,c._array[u]=q[m].x,c._array[u+1]=q[m].y,c._array[u+2]=q[m].z;k.uniform3fv(e,c._array)}else if("v4v"===m){void 0===c._array&&(c._array=new Float32Array(4*q.length));m=0;for(n=q.length;m<n;m++)u=4*m,c._array[u]=q[m].x,c._array[u+1]=q[m].y,c._array[u+2]=q[m].z,c._array[u+3]=q[m].w;k.uniform4fv(e,c._array)}else if("m4"===m)void 0===c._array&&(c._array=new Float32Array(16)),q.flattenToArray(c._array),k.uniformMatrix4fv(e,
!1,c._array);else if("m4v"===m){void 0===c._array&&(c._array=new Float32Array(16*q.length));m=0;for(n=q.length;m<n;m++)q[m].flattenToArrayOffset(c._array,16*m);k.uniformMatrix4fv(e,!1,c._array)}else if("t"===m){if(u=q,q=I(),k.uniform1i(e,q),u)if(u.image instanceof Array&&6===u.image.length){if(c=u,e=q,6===c.image.length)if(c.needsUpdate){c.image.__webglTextureCube||(c.image.__webglTextureCube=k.createTexture(),O.info.memory.textures++);k.activeTexture(k.TEXTURE0+e);k.bindTexture(k.TEXTURE_CUBE_MAP,
c.image.__webglTextureCube);k.pixelStorei(k.UNPACK_FLIP_Y_WEBGL,c.flipY);e=c instanceof THREE.CompressedTexture;q=[];for(m=0;6>m;m++)O.autoScaleCubemaps&&!e?(n=q,u=m,x=c.image[m],t=hd,x.width<=t&&x.height<=t||(v=Math.max(x.width,x.height),s=Math.floor(x.width*t/v),t=Math.floor(x.height*t/v),v=document.createElement("canvas"),v.width=s,v.height=t,v.getContext("2d").drawImage(x,0,0,x.width,x.height,0,0,s,t),x=v),n[u]=x):q[m]=c.image[m];m=q[0];n=0===(m.width&m.width-1)&&0===(m.height&m.height-1);u=M(c.format);
x=M(c.type);X(k.TEXTURE_CUBE_MAP,c,n);for(m=0;6>m;m++)if(e){t=q[m].mipmaps;v=0;for(B=t.length;v<B;v++)s=t[v],k.compressedTexImage2D(k.TEXTURE_CUBE_MAP_POSITIVE_X+m,v,u,s.width,s.height,0,s.data)}else k.texImage2D(k.TEXTURE_CUBE_MAP_POSITIVE_X+m,0,u,u,x,q[m]);c.generateMipmaps&&n&&k.generateMipmap(k.TEXTURE_CUBE_MAP);c.needsUpdate=!1;if(c.onUpdate)c.onUpdate()}else k.activeTexture(k.TEXTURE0+e),k.bindTexture(k.TEXTURE_CUBE_MAP,c.image.__webglTextureCube)}else u instanceof THREE.WebGLRenderTargetCube?
(c=u,k.activeTexture(k.TEXTURE0+q),k.bindTexture(k.TEXTURE_CUBE_MAP,c.__webglTexture)):O.setTexture(u,q)}else if("tv"===m){void 0===c._array&&(c._array=[]);m=0;for(n=c.value.length;m<n;m++)c._array[m]=I();k.uniform1iv(e,c._array);m=0;for(n=c.value.length;m<n;m++)u=c.value[m],q=c._array[m],u&&O.setTexture(u,q)}if((d instanceof THREE.ShaderMaterial||d instanceof THREE.MeshPhongMaterial||d.envMap)&&null!==h.cameraPosition)Ra.getPositionFromMatrix(a.matrixWorld),k.uniform3f(h.cameraPosition,Ra.x,Ra.y,
Ra.z);(d instanceof THREE.MeshPhongMaterial||d instanceof THREE.MeshLambertMaterial||d instanceof THREE.ShaderMaterial||d.skinning)&&null!==h.viewMatrix&&k.uniformMatrix4fv(h.viewMatrix,!1,a.matrixWorldInverse.elements)}k.uniformMatrix4fv(h.modelViewMatrix,!1,f._modelViewMatrix.elements);h.normalMatrix&&k.uniformMatrix3fv(h.normalMatrix,!1,f._normalMatrix.elements);null!==h.modelMatrix&&k.uniformMatrix4fv(h.modelMatrix,!1,f.matrixWorld.elements);return g}function I(){var a=Z;a>=Nc&&console.warn("WebGLRenderer: trying to use "+
a+" texture units while this GPU supports only "+Nc);Z+=1;return a}function C(a,b){a._modelViewMatrix.multiplyMatrices(b.matrixWorldInverse,a.matrixWorld);a._normalMatrix.getInverse(a._modelViewMatrix);a._normalMatrix.transpose()}function z(a,b,c,d){a[b]=c.r*c.r*d;a[b+1]=c.g*c.g*d;a[b+2]=c.b*c.b*d}function J(a,b,c,d){a[b]=c.r*d;a[b+1]=c.g*d;a[b+2]=c.b*d}function K(a){a!==ub&&(k.lineWidth(a),ub=a)}function G(a,b,c){bb!==a&&(a?k.enable(k.POLYGON_OFFSET_FILL):k.disable(k.POLYGON_OFFSET_FILL),bb=a);if(a&&
(Ga!==b||Ya!==c))k.polygonOffset(b,c),Ga=b,Ya=c}function H(a){for(var a=a.split("\n"),b=0,c=a.length;b<c;b++)a[b]=b+1+": "+a[b];return a.join("\n")}function D(a,b){var c;"fragment"===a?c=k.createShader(k.FRAGMENT_SHADER):"vertex"===a&&(c=k.createShader(k.VERTEX_SHADER));k.shaderSource(c,b);k.compileShader(c);return!k.getShaderParameter(c,k.COMPILE_STATUS)?(console.error(k.getShaderInfoLog(c)),console.error(H(b)),null):c}function X(a,b,c){c?(k.texParameteri(a,k.TEXTURE_WRAP_S,M(b.wrapS)),k.texParameteri(a,
k.TEXTURE_WRAP_T,M(b.wrapT)),k.texParameteri(a,k.TEXTURE_MAG_FILTER,M(b.magFilter)),k.texParameteri(a,k.TEXTURE_MIN_FILTER,M(b.minFilter))):(k.texParameteri(a,k.TEXTURE_WRAP_S,k.CLAMP_TO_EDGE),k.texParameteri(a,k.TEXTURE_WRAP_T,k.CLAMP_TO_EDGE),k.texParameteri(a,k.TEXTURE_MAG_FILTER,L(b.magFilter)),k.texParameteri(a,k.TEXTURE_MIN_FILTER,L(b.minFilter)));if(db&&b.type!==THREE.FloatType&&(1<b.anisotropy||b.__oldAnisotropy))k.texParameterf(a,db.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(b.anisotropy,Dc)),b.__oldAnisotropy=
b.anisotropy}function F(a,b){k.bindRenderbuffer(k.RENDERBUFFER,a);b.depthBuffer&&!b.stencilBuffer?(k.renderbufferStorage(k.RENDERBUFFER,k.DEPTH_COMPONENT16,b.width,b.height),k.framebufferRenderbuffer(k.FRAMEBUFFER,k.DEPTH_ATTACHMENT,k.RENDERBUFFER,a)):b.depthBuffer&&b.stencilBuffer?(k.renderbufferStorage(k.RENDERBUFFER,k.DEPTH_STENCIL,b.width,b.height),k.framebufferRenderbuffer(k.FRAMEBUFFER,k.DEPTH_STENCIL_ATTACHMENT,k.RENDERBUFFER,a)):k.renderbufferStorage(k.RENDERBUFFER,k.RGBA4,b.width,b.height)}
function L(a){return a===THREE.NearestFilter||a===THREE.NearestMipMapNearestFilter||a===THREE.NearestMipMapLinearFilter?k.NEAREST:k.LINEAR}function M(a){if(a===THREE.RepeatWrapping)return k.REPEAT;if(a===THREE.ClampToEdgeWrapping)return k.CLAMP_TO_EDGE;if(a===THREE.MirroredRepeatWrapping)return k.MIRRORED_REPEAT;if(a===THREE.NearestFilter)return k.NEAREST;if(a===THREE.NearestMipMapNearestFilter)return k.NEAREST_MIPMAP_NEAREST;if(a===THREE.NearestMipMapLinearFilter)return k.NEAREST_MIPMAP_LINEAR;if(a===
THREE.LinearFilter)return k.LINEAR;if(a===THREE.LinearMipMapNearestFilter)return k.LINEAR_MIPMAP_NEAREST;if(a===THREE.LinearMipMapLinearFilter)return k.LINEAR_MIPMAP_LINEAR;if(a===THREE.UnsignedByteType)return k.UNSIGNED_BYTE;if(a===THREE.UnsignedShort4444Type)return k.UNSIGNED_SHORT_4_4_4_4;if(a===THREE.UnsignedShort5551Type)return k.UNSIGNED_SHORT_5_5_5_1;if(a===THREE.UnsignedShort565Type)return k.UNSIGNED_SHORT_5_6_5;if(a===THREE.ByteType)return k.BYTE;if(a===THREE.ShortType)return k.SHORT;if(a===
THREE.UnsignedShortType)return k.UNSIGNED_SHORT;if(a===THREE.IntType)return k.INT;if(a===THREE.UnsignedIntType)return k.UNSIGNED_INT;if(a===THREE.FloatType)return k.FLOAT;if(a===THREE.AlphaFormat)return k.ALPHA;if(a===THREE.RGBFormat)return k.RGB;if(a===THREE.RGBAFormat)return k.RGBA;if(a===THREE.LuminanceFormat)return k.LUMINANCE;if(a===THREE.LuminanceAlphaFormat)return k.LUMINANCE_ALPHA;if(a===THREE.AddEquation)return k.FUNC_ADD;if(a===THREE.SubtractEquation)return k.FUNC_SUBTRACT;if(a===THREE.ReverseSubtractEquation)return k.FUNC_REVERSE_SUBTRACT;
if(a===THREE.ZeroFactor)return k.ZERO;if(a===THREE.OneFactor)return k.ONE;if(a===THREE.SrcColorFactor)return k.SRC_COLOR;if(a===THREE.OneMinusSrcColorFactor)return k.ONE_MINUS_SRC_COLOR;if(a===THREE.SrcAlphaFactor)return k.SRC_ALPHA;if(a===THREE.OneMinusSrcAlphaFactor)return k.ONE_MINUS_SRC_ALPHA;if(a===THREE.DstAlphaFactor)return k.DST_ALPHA;if(a===THREE.OneMinusDstAlphaFactor)return k.ONE_MINUS_DST_ALPHA;if(a===THREE.DstColorFactor)return k.DST_COLOR;if(a===THREE.OneMinusDstColorFactor)return k.ONE_MINUS_DST_COLOR;
if(a===THREE.SrcAlphaSaturateFactor)return k.SRC_ALPHA_SATURATE;if(void 0!==Ta){if(a===THREE.RGB_S3TC_DXT1_Format)return Ta.COMPRESSED_RGB_S3TC_DXT1_EXT;if(a===THREE.RGBA_S3TC_DXT1_Format)return Ta.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(a===THREE.RGBA_S3TC_DXT3_Format)return Ta.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(a===THREE.RGBA_S3TC_DXT5_Format)return Ta.COMPRESSED_RGBA_S3TC_DXT5_EXT}return 0}console.log("THREE.WebGLRenderer",THREE.REVISION);var a=a||{},V=void 0!==a.canvas?a.canvas:document.createElement("canvas"),
ga=void 0!==a.precision?a.precision:"highp",Da=void 0!==a.alpha?a.alpha:!0,ab=void 0!==a.premultipliedAlpha?a.premultipliedAlpha:!0,N=void 0!==a.antialias?a.antialias:!1,da=void 0!==a.stencil?a.stencil:!0,ra=void 0!==a.preserveDrawingBuffer?a.preserveDrawingBuffer:!1,ia=void 0!==a.clearColor?new THREE.Color(a.clearColor):new THREE.Color(0),sa=void 0!==a.clearAlpha?a.clearAlpha:0;this.domElement=V;this.context=null;this.devicePixelRatio=void 0!==a.devicePixelRatio?a.devicePixelRatio:void 0!==window.devicePixelRatio?
window.devicePixelRatio:1;this.autoUpdateScene=this.autoUpdateObjects=this.sortObjects=this.autoClearStencil=this.autoClearDepth=this.autoClearColor=this.autoClear=!0;this.shadowMapEnabled=this.physicallyBasedShading=this.gammaOutput=this.gammaInput=!1;this.shadowMapAutoUpdate=!0;this.shadowMapType=THREE.PCFShadowMap;this.shadowMapCullFace=THREE.CullFaceFront;this.shadowMapCascade=this.shadowMapDebug=!1;this.maxMorphTargets=8;this.maxMorphNormals=4;this.autoScaleCubemaps=!0;this.renderPluginsPre=
[];this.renderPluginsPost=[];this.info={memory:{programs:0,geometries:0,textures:0},render:{calls:0,vertices:0,faces:0,points:0}};var O=this,Na=[],Oa=0,mb=null,Qa=null,ua=-1,la=null,ba=null,qa=0,Z=0,ea=-1,ma=-1,$=-1,pa=-1,hb=-1,nb=-1,ja=-1,Xa=-1,bb=null,Ga=null,Ya=null,ub=null,Jb=0,Kb=0,gc=0,Ab=0,nc=0,pb=0,La={},Wa=new THREE.Frustum,hc=new THREE.Matrix4,vb=new THREE.Matrix4,Ra=new THREE.Vector3,Ma=new THREE.Vector3,cb=!0,xb={ambient:[0,0,0],directional:{length:0,colors:[],positions:[]},point:{length:0,
colors:[],positions:[],distances:[]},spot:{length:0,colors:[],positions:[],distances:[],directions:[],anglesCos:[],exponents:[]},hemi:{length:0,skyColors:[],groundColors:[],positions:[]}},k,yb,Sa,db,Ta;try{if(!(k=V.getContext("experimental-webgl",{alpha:Da,premultipliedAlpha:ab,antialias:N,stencil:da,preserveDrawingBuffer:ra})))throw"Error creating WebGL context.";}catch(zb){console.error(zb)}yb=k.getExtension("OES_texture_float");Sa=k.getExtension("OES_standard_derivatives");db=k.getExtension("EXT_texture_filter_anisotropic")||
k.getExtension("MOZ_EXT_texture_filter_anisotropic")||k.getExtension("WEBKIT_EXT_texture_filter_anisotropic");Ta=k.getExtension("WEBGL_compressed_texture_s3tc")||k.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||k.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");yb||console.log("THREE.WebGLRenderer: Float textures not supported.");Sa||console.log("THREE.WebGLRenderer: Standard derivatives not supported.");db||console.log("THREE.WebGLRenderer: Anisotropic texture filtering not supported.");
Ta||console.log("THREE.WebGLRenderer: S3TC compressed textures not supported.");void 0===k.getShaderPrecisionFormat&&(k.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}});k.clearColor(0,0,0,1);k.clearDepth(1);k.clearStencil(0);k.enable(k.DEPTH_TEST);k.depthFunc(k.LEQUAL);k.frontFace(k.CCW);k.cullFace(k.BACK);k.enable(k.CULL_FACE);k.enable(k.BLEND);k.blendEquation(k.FUNC_ADD);k.blendFunc(k.SRC_ALPHA,k.ONE_MINUS_SRC_ALPHA);k.clearColor(ia.r,ia.g,ia.b,sa);this.context=k;
var Nc=k.getParameter(k.MAX_TEXTURE_IMAGE_UNITS),gd=k.getParameter(k.MAX_VERTEX_TEXTURE_IMAGE_UNITS);k.getParameter(k.MAX_TEXTURE_SIZE);var hd=k.getParameter(k.MAX_CUBE_MAP_TEXTURE_SIZE),Dc=db?k.getParameter(db.MAX_TEXTURE_MAX_ANISOTROPY_EXT):0,tc=0<gd,uc=tc&&yb;Ta&&k.getParameter(k.COMPRESSED_TEXTURE_FORMATS);var kd=k.getShaderPrecisionFormat(k.VERTEX_SHADER,k.HIGH_FLOAT),ld=k.getShaderPrecisionFormat(k.VERTEX_SHADER,k.MEDIUM_FLOAT);k.getShaderPrecisionFormat(k.VERTEX_SHADER,k.LOW_FLOAT);var md=
k.getShaderPrecisionFormat(k.FRAGMENT_SHADER,k.HIGH_FLOAT),jd=k.getShaderPrecisionFormat(k.FRAGMENT_SHADER,k.MEDIUM_FLOAT);k.getShaderPrecisionFormat(k.FRAGMENT_SHADER,k.LOW_FLOAT);k.getShaderPrecisionFormat(k.VERTEX_SHADER,k.HIGH_INT);k.getShaderPrecisionFormat(k.VERTEX_SHADER,k.MEDIUM_INT);k.getShaderPrecisionFormat(k.VERTEX_SHADER,k.LOW_INT);k.getShaderPrecisionFormat(k.FRAGMENT_SHADER,k.HIGH_INT);k.getShaderPrecisionFormat(k.FRAGMENT_SHADER,k.MEDIUM_INT);k.getShaderPrecisionFormat(k.FRAGMENT_SHADER,
k.LOW_INT);var id=0<kd.precision&&0<md.precision,Oc=0<ld.precision&&0<jd.precision;"highp"===ga&&!id&&(Oc?(ga="mediump",console.warn("WebGLRenderer: highp not supported, using mediump")):(ga="lowp",console.warn("WebGLRenderer: highp and mediump not supported, using lowp")));"mediump"===ga&&!Oc&&(ga="lowp",console.warn("WebGLRenderer: mediump not supported, using lowp"));this.getContext=function(){return k};this.supportsVertexTextures=function(){return tc};this.supportsFloatTextures=function(){return yb};
this.supportsStandardDerivatives=function(){return Sa};this.supportsCompressedTextureS3TC=function(){return Ta};this.getMaxAnisotropy=function(){return Dc};this.getPrecision=function(){return ga};this.setSize=function(a,b){V.width=a*this.devicePixelRatio;V.height=b*this.devicePixelRatio;V.style.width=a+"px";V.style.height=b+"px";this.setViewport(0,0,V.width,V.height)};this.setViewport=function(a,b,c,d){Jb=void 0!==a?a:0;Kb=void 0!==b?b:0;gc=void 0!==c?c:V.width;Ab=void 0!==d?d:V.height;k.viewport(Jb,
Kb,gc,Ab)};this.setScissor=function(a,b,c,d){k.scissor(a,b,c,d)};this.enableScissorTest=function(a){a?k.enable(k.SCISSOR_TEST):k.disable(k.SCISSOR_TEST)};this.setClearColorHex=function(a,b){ia.setHex(a);sa=b;k.clearColor(ia.r,ia.g,ia.b,sa)};this.setClearColor=function(a,b){ia.copy(a);sa=b;k.clearColor(ia.r,ia.g,ia.b,sa)};this.getClearColor=function(){return ia};this.getClearAlpha=function(){return sa};this.clear=function(a,b,c){var d=0;if(void 0===a||a)d|=k.COLOR_BUFFER_BIT;if(void 0===b||b)d|=k.DEPTH_BUFFER_BIT;
if(void 0===c||c)d|=k.STENCIL_BUFFER_BIT;k.clear(d)};this.clearTarget=function(a,b,c,d){this.setRenderTarget(a);this.clear(b,c,d)};this.addPostPlugin=function(a){a.init(this);this.renderPluginsPost.push(a)};this.addPrePlugin=function(a){a.init(this);this.renderPluginsPre.push(a)};this.updateShadowMap=function(a,b){mb=null;ua=la=Xa=ja=$=-1;cb=!0;ma=ea=-1;this.shadowMapPlugin.update(a,b)};var xd=function(a){a=a.target;a.removeEventListener("dispose",xd);a.__webglInit=void 0;void 0!==a.__webglVertexBuffer&&
k.deleteBuffer(a.__webglVertexBuffer);void 0!==a.__webglNormalBuffer&&k.deleteBuffer(a.__webglNormalBuffer);void 0!==a.__webglTangentBuffer&&k.deleteBuffer(a.__webglTangentBuffer);void 0!==a.__webglColorBuffer&&k.deleteBuffer(a.__webglColorBuffer);void 0!==a.__webglUVBuffer&&k.deleteBuffer(a.__webglUVBuffer);void 0!==a.__webglUV2Buffer&&k.deleteBuffer(a.__webglUV2Buffer);void 0!==a.__webglSkinIndicesBuffer&&k.deleteBuffer(a.__webglSkinIndicesBuffer);void 0!==a.__webglSkinWeightsBuffer&&k.deleteBuffer(a.__webglSkinWeightsBuffer);
void 0!==a.__webglFaceBuffer&&k.deleteBuffer(a.__webglFaceBuffer);void 0!==a.__webglLineBuffer&&k.deleteBuffer(a.__webglLineBuffer);void 0!==a.__webglLineDistanceBuffer&&k.deleteBuffer(a.__webglLineDistanceBuffer);if(void 0!==a.geometryGroups)for(var c in a.geometryGroups){var d=a.geometryGroups[c];if(void 0!==d.numMorphTargets)for(var e=0,f=d.numMorphTargets;e<f;e++)k.deleteBuffer(d.__webglMorphTargetsBuffers[e]);if(void 0!==d.numMorphNormals){e=0;for(f=d.numMorphNormals;e<f;e++)k.deleteBuffer(d.__webglMorphNormalsBuffers[e])}b(d)}b(a);
O.info.memory.geometries--},Pc=function(a){a=a.target;a.removeEventListener("dispose",Pc);a.image&&a.image.__webglTextureCube?k.deleteTexture(a.image.__webglTextureCube):a.__webglInit&&(a.__webglInit=!1,k.deleteTexture(a.__webglTexture));O.info.memory.textures--},Q=function(a){a=a.target;a.removeEventListener("dispose",Q);if(a&&a.__webglTexture)if(k.deleteTexture(a.__webglTexture),a instanceof THREE.WebGLRenderTargetCube)for(var b=0;6>b;b++)k.deleteFramebuffer(a.__webglFramebuffer[b]),k.deleteRenderbuffer(a.__webglRenderbuffer[b]);
else k.deleteFramebuffer(a.__webglFramebuffer),k.deleteRenderbuffer(a.__webglRenderbuffer);O.info.memory.textures--},Y=function(a){a=a.target;a.removeEventListener("dispose",Y);Qc(a)},Qc=function(a){var b=a.program;if(void 0!==b){a.program=void 0;var c,d,e=!1,a=0;for(c=Na.length;a<c;a++)if(d=Na[a],d.program===b){d.usedTimes--;0===d.usedTimes&&(e=!0);break}if(!0===e){e=[];a=0;for(c=Na.length;a<c;a++)d=Na[a],d.program!==b&&e.push(d);Na=e;k.deleteProgram(b);O.info.memory.programs--}}};this.renderBufferImmediate=
function(a,b,c){a.hasPositions&&!a.__webglVertexBuffer&&(a.__webglVertexBuffer=k.createBuffer());a.hasNormals&&!a.__webglNormalBuffer&&(a.__webglNormalBuffer=k.createBuffer());a.hasUvs&&!a.__webglUvBuffer&&(a.__webglUvBuffer=k.createBuffer());a.hasColors&&!a.__webglColorBuffer&&(a.__webglColorBuffer=k.createBuffer());a.hasPositions&&(k.bindBuffer(k.ARRAY_BUFFER,a.__webglVertexBuffer),k.bufferData(k.ARRAY_BUFFER,a.positionArray,k.DYNAMIC_DRAW),k.enableVertexAttribArray(b.attributes.position),k.vertexAttribPointer(b.attributes.position,
3,k.FLOAT,!1,0,0));if(a.hasNormals){k.bindBuffer(k.ARRAY_BUFFER,a.__webglNormalBuffer);if(c.shading===THREE.FlatShading){var d,e,f,g,j,h,q,l,m,n,p,u=3*a.count;for(p=0;p<u;p+=9)n=a.normalArray,d=n[p],e=n[p+1],f=n[p+2],g=n[p+3],h=n[p+4],l=n[p+5],j=n[p+6],q=n[p+7],m=n[p+8],d=(d+g+j)/3,e=(e+h+q)/3,f=(f+l+m)/3,n[p]=d,n[p+1]=e,n[p+2]=f,n[p+3]=d,n[p+4]=e,n[p+5]=f,n[p+6]=d,n[p+7]=e,n[p+8]=f}k.bufferData(k.ARRAY_BUFFER,a.normalArray,k.DYNAMIC_DRAW);k.enableVertexAttribArray(b.attributes.normal);k.vertexAttribPointer(b.attributes.normal,
3,k.FLOAT,!1,0,0)}a.hasUvs&&c.map&&(k.bindBuffer(k.ARRAY_BUFFER,a.__webglUvBuffer),k.bufferData(k.ARRAY_BUFFER,a.uvArray,k.DYNAMIC_DRAW),k.enableVertexAttribArray(b.attributes.uv),k.vertexAttribPointer(b.attributes.uv,2,k.FLOAT,!1,0,0));a.hasColors&&c.vertexColors!==THREE.NoColors&&(k.bindBuffer(k.ARRAY_BUFFER,a.__webglColorBuffer),k.bufferData(k.ARRAY_BUFFER,a.colorArray,k.DYNAMIC_DRAW),k.enableVertexAttribArray(b.attributes.color),k.vertexAttribPointer(b.attributes.color,3,k.FLOAT,!1,0,0));k.drawArrays(k.TRIANGLES,
0,a.count);a.count=0};this.renderBufferDirect=function(a,b,c,d,e,f){if(!1!==d.visible)if(c=x(a,b,c,d,f),a=c.attributes,b=!1,c=16777215*e.id+2*c.id+(d.wireframe?1:0),c!==la&&(la=c,b=!0),b&&n(),f instanceof THREE.Mesh)if(d=e.attributes.index){f=e.offsets;1<f.length&&(b=!0);for(var c=0,g=f.length;c<g;c++){var j=f[c].index;if(b){var h=e.attributes.position,q=h.itemSize;k.bindBuffer(k.ARRAY_BUFFER,h.buffer);l(a.position);k.vertexAttribPointer(a.position,q,k.FLOAT,!1,0,4*j*q);q=e.attributes.normal;if(0<=
a.normal&&q){var m=q.itemSize;k.bindBuffer(k.ARRAY_BUFFER,q.buffer);l(a.normal);k.vertexAttribPointer(a.normal,m,k.FLOAT,!1,0,4*j*m)}q=e.attributes.uv;0<=a.uv&&q&&(m=q.itemSize,k.bindBuffer(k.ARRAY_BUFFER,q.buffer),l(a.uv),k.vertexAttribPointer(a.uv,m,k.FLOAT,!1,0,4*j*m));q=e.attributes.color;0<=a.color&&q&&(m=q.itemSize,k.bindBuffer(k.ARRAY_BUFFER,q.buffer),l(a.color),k.vertexAttribPointer(a.color,m,k.FLOAT,!1,0,4*j*m));q=e.attributes.tangent;0<=a.tangent&&q&&(m=q.itemSize,k.bindBuffer(k.ARRAY_BUFFER,
q.buffer),l(a.tangent),k.vertexAttribPointer(a.tangent,m,k.FLOAT,!1,0,4*j*m));k.bindBuffer(k.ELEMENT_ARRAY_BUFFER,d.buffer)}k.drawElements(k.TRIANGLES,f[c].count,k.UNSIGNED_SHORT,2*f[c].start);O.info.render.calls++;O.info.render.vertices+=f[c].count;O.info.render.faces+=f[c].count/3}}else b&&(h=e.attributes.position,q=h.itemSize,k.bindBuffer(k.ARRAY_BUFFER,h.buffer),l(a.position),k.vertexAttribPointer(a.position,q,k.FLOAT,!1,0,0),q=e.attributes.normal,0<=a.normal&&q&&(m=q.itemSize,k.bindBuffer(k.ARRAY_BUFFER,
q.buffer),l(a.normal),k.vertexAttribPointer(a.normal,m,k.FLOAT,!1,0,0)),q=e.attributes.uv,0<=a.uv&&q&&(m=q.itemSize,k.bindBuffer(k.ARRAY_BUFFER,q.buffer),l(a.uv),k.vertexAttribPointer(a.uv,m,k.FLOAT,!1,0,0)),q=e.attributes.color,0<=a.color&&q&&(m=q.itemSize,k.bindBuffer(k.ARRAY_BUFFER,q.buffer),l(a.color),k.vertexAttribPointer(a.color,m,k.FLOAT,!1,0,0)),q=e.attributes.tangent,0<=a.tangent&&q&&(m=q.itemSize,k.bindBuffer(k.ARRAY_BUFFER,q.buffer),l(a.tangent),k.vertexAttribPointer(a.tangent,m,k.FLOAT,
!1,0,0))),k.drawArrays(k.TRIANGLES,0,h.numItems/3),O.info.render.calls++,O.info.render.vertices+=h.numItems/3,O.info.render.faces+=h.numItems/3/3;else f instanceof THREE.ParticleSystem?b&&(h=e.attributes.position,q=h.itemSize,k.bindBuffer(k.ARRAY_BUFFER,h.buffer),l(a.position),k.vertexAttribPointer(a.position,q,k.FLOAT,!1,0,0),q=e.attributes.color,0<=a.color&&q&&(m=q.itemSize,k.bindBuffer(k.ARRAY_BUFFER,q.buffer),l(a.color),k.vertexAttribPointer(a.color,m,k.FLOAT,!1,0,0)),k.drawArrays(k.POINTS,0,
h.numItems/3),O.info.render.calls++,O.info.render.points+=h.numItems/3):f instanceof THREE.Line&&b&&(h=e.attributes.position,q=h.itemSize,k.bindBuffer(k.ARRAY_BUFFER,h.buffer),l(a.position),k.vertexAttribPointer(a.position,q,k.FLOAT,!1,0,0),q=e.attributes.color,0<=a.color&&q&&(m=q.itemSize,k.bindBuffer(k.ARRAY_BUFFER,q.buffer),l(a.color),k.vertexAttribPointer(a.color,m,k.FLOAT,!1,0,0)),K(d.linewidth),k.drawArrays(k.LINE_STRIP,0,h.numItems/3),O.info.render.calls++,O.info.render.points+=h.numItems)};
this.renderBuffer=function(a,b,c,d,e,f){if(!1!==d.visible){var g,j,c=x(a,b,c,d,f),a=c.attributes,b=!1,c=16777215*e.id+2*c.id+(d.wireframe?1:0);c!==la&&(la=c,b=!0);b&&n();if(!d.morphTargets&&0<=a.position)b&&(k.bindBuffer(k.ARRAY_BUFFER,e.__webglVertexBuffer),l(a.position),k.vertexAttribPointer(a.position,3,k.FLOAT,!1,0,0));else if(f.morphTargetBase){c=d.program.attributes;-1!==f.morphTargetBase&&0<=c.position?(k.bindBuffer(k.ARRAY_BUFFER,e.__webglMorphTargetsBuffers[f.morphTargetBase]),l(c.position),
k.vertexAttribPointer(c.position,3,k.FLOAT,!1,0,0)):0<=c.position&&(k.bindBuffer(k.ARRAY_BUFFER,e.__webglVertexBuffer),l(c.position),k.vertexAttribPointer(c.position,3,k.FLOAT,!1,0,0));if(f.morphTargetForcedOrder.length){var h=0;j=f.morphTargetForcedOrder;for(g=f.morphTargetInfluences;h<d.numSupportedMorphTargets&&h<j.length;)0<=c["morphTarget"+h]&&(k.bindBuffer(k.ARRAY_BUFFER,e.__webglMorphTargetsBuffers[j[h]]),l(c["morphTarget"+h]),k.vertexAttribPointer(c["morphTarget"+h],3,k.FLOAT,!1,0,0)),0<=
c["morphNormal"+h]&&d.morphNormals&&(k.bindBuffer(k.ARRAY_BUFFER,e.__webglMorphNormalsBuffers[j[h]]),l(c["morphNormal"+h]),k.vertexAttribPointer(c["morphNormal"+h],3,k.FLOAT,!1,0,0)),f.__webglMorphTargetInfluences[h]=g[j[h]],h++}else{j=[];g=f.morphTargetInfluences;var q,m=g.length;for(q=0;q<m;q++)h=g[q],0<h&&j.push([h,q]);j.length>d.numSupportedMorphTargets?(j.sort(p),j.length=d.numSupportedMorphTargets):j.length>d.numSupportedMorphNormals?j.sort(p):0===j.length&&j.push([0,0]);for(h=0;h<d.numSupportedMorphTargets;)j[h]?
(q=j[h][1],0<=c["morphTarget"+h]&&(k.bindBuffer(k.ARRAY_BUFFER,e.__webglMorphTargetsBuffers[q]),l(c["morphTarget"+h]),k.vertexAttribPointer(c["morphTarget"+h],3,k.FLOAT,!1,0,0)),0<=c["morphNormal"+h]&&d.morphNormals&&(k.bindBuffer(k.ARRAY_BUFFER,e.__webglMorphNormalsBuffers[q]),l(c["morphNormal"+h]),k.vertexAttribPointer(c["morphNormal"+h],3,k.FLOAT,!1,0,0)),f.__webglMorphTargetInfluences[h]=g[q]):f.__webglMorphTargetInfluences[h]=0,h++}null!==d.program.uniforms.morphTargetInfluences&&k.uniform1fv(d.program.uniforms.morphTargetInfluences,
f.__webglMorphTargetInfluences)}if(b){if(e.__webglCustomAttributesList){g=0;for(j=e.__webglCustomAttributesList.length;g<j;g++)c=e.__webglCustomAttributesList[g],0<=a[c.buffer.belongsToAttribute]&&(k.bindBuffer(k.ARRAY_BUFFER,c.buffer),l(a[c.buffer.belongsToAttribute]),k.vertexAttribPointer(a[c.buffer.belongsToAttribute],c.size,k.FLOAT,!1,0,0))}0<=a.color&&(k.bindBuffer(k.ARRAY_BUFFER,e.__webglColorBuffer),l(a.color),k.vertexAttribPointer(a.color,3,k.FLOAT,!1,0,0));0<=a.normal&&(k.bindBuffer(k.ARRAY_BUFFER,
e.__webglNormalBuffer),l(a.normal),k.vertexAttribPointer(a.normal,3,k.FLOAT,!1,0,0));0<=a.tangent&&(k.bindBuffer(k.ARRAY_BUFFER,e.__webglTangentBuffer),l(a.tangent),k.vertexAttribPointer(a.tangent,4,k.FLOAT,!1,0,0));0<=a.uv&&(k.bindBuffer(k.ARRAY_BUFFER,e.__webglUVBuffer),l(a.uv),k.vertexAttribPointer(a.uv,2,k.FLOAT,!1,0,0));0<=a.uv2&&(k.bindBuffer(k.ARRAY_BUFFER,e.__webglUV2Buffer),l(a.uv2),k.vertexAttribPointer(a.uv2,2,k.FLOAT,!1,0,0));d.skinning&&0<=a.skinIndex&&0<=a.skinWeight&&(k.bindBuffer(k.ARRAY_BUFFER,
e.__webglSkinIndicesBuffer),l(a.skinIndex),k.vertexAttribPointer(a.skinIndex,4,k.FLOAT,!1,0,0),k.bindBuffer(k.ARRAY_BUFFER,e.__webglSkinWeightsBuffer),l(a.skinWeight),k.vertexAttribPointer(a.skinWeight,4,k.FLOAT,!1,0,0));0<=a.lineDistance&&(k.bindBuffer(k.ARRAY_BUFFER,e.__webglLineDistanceBuffer),l(a.lineDistance),k.vertexAttribPointer(a.lineDistance,1,k.FLOAT,!1,0,0))}f instanceof THREE.Mesh?(d.wireframe?(K(d.wireframeLinewidth),b&&k.bindBuffer(k.ELEMENT_ARRAY_BUFFER,e.__webglLineBuffer),k.drawElements(k.LINES,
e.__webglLineCount,k.UNSIGNED_SHORT,0)):(b&&k.bindBuffer(k.ELEMENT_ARRAY_BUFFER,e.__webglFaceBuffer),k.drawElements(k.TRIANGLES,e.__webglFaceCount,k.UNSIGNED_SHORT,0)),O.info.render.calls++,O.info.render.vertices+=e.__webglFaceCount,O.info.render.faces+=e.__webglFaceCount/3):f instanceof THREE.Line?(f=f.type===THREE.LineStrip?k.LINE_STRIP:k.LINES,K(d.linewidth),k.drawArrays(f,0,e.__webglLineCount),O.info.render.calls++):f instanceof THREE.ParticleSystem?(k.drawArrays(k.POINTS,0,e.__webglParticleCount),
O.info.render.calls++,O.info.render.points+=e.__webglParticleCount):f instanceof THREE.Ribbon&&(k.drawArrays(k.TRIANGLE_STRIP,0,e.__webglVertexCount),O.info.render.calls++)}};this.render=function(a,b,c,d){if(!1===b instanceof THREE.Camera)console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");else{var e,f,g,j,h=a.__lights,q=a.fog;ua=-1;cb=!0;this.autoUpdateScene&&a.updateMatrixWorld();void 0===b.parent&&b.updateMatrixWorld();b.matrixWorldInverse.getInverse(b.matrixWorld);
hc.multiplyMatrices(b.projectionMatrix,b.matrixWorldInverse);Wa.setFromMatrix(hc);this.autoUpdateObjects&&this.initWebGLObjects(a);s(this.renderPluginsPre,a,b);O.info.render.calls=0;O.info.render.vertices=0;O.info.render.faces=0;O.info.render.points=0;this.setRenderTarget(c);(this.autoClear||d)&&this.clear(this.autoClearColor,this.autoClearDepth,this.autoClearStencil);j=a.__webglObjects;d=0;for(e=j.length;d<e;d++)if(f=j[d],g=f.object,f.render=!1,g.visible&&(!(g instanceof THREE.Mesh||g instanceof
THREE.ParticleSystem)||!g.frustumCulled||Wa.intersectsObject(g))){C(g,b);var l=f,n=l.buffer,p=void 0,u=void 0,u=l.object.material;if(u instanceof THREE.MeshFaceMaterial)p=n.materialIndex,p=u.materials[p],p.transparent?(l.transparent=p,l.opaque=null):(l.opaque=p,l.transparent=null);else if(p=u)p.transparent?(l.transparent=p,l.opaque=null):(l.opaque=p,l.transparent=null);f.render=!0;!0===this.sortObjects&&(null!==g.renderDepth?f.z=g.renderDepth:(Ra.getPositionFromMatrix(g.matrixWorld),Ra.applyProjection(hc),
f.z=Ra.z),f.id=g.id)}this.sortObjects&&j.sort(r);j=a.__webglObjectsImmediate;d=0;for(e=j.length;d<e;d++)f=j[d],g=f.object,g.visible&&(C(g,b),g=f.object.material,g.transparent?(f.transparent=g,f.opaque=null):(f.opaque=g,f.transparent=null));a.overrideMaterial?(d=a.overrideMaterial,this.setBlending(d.blending,d.blendEquation,d.blendSrc,d.blendDst),this.setDepthTest(d.depthTest),this.setDepthWrite(d.depthWrite),G(d.polygonOffset,d.polygonOffsetFactor,d.polygonOffsetUnits),t(a.__webglObjects,!1,"",b,
h,q,!0,d),m(a.__webglObjectsImmediate,"",b,h,q,!1,d)):(d=null,this.setBlending(THREE.NoBlending),t(a.__webglObjects,!0,"opaque",b,h,q,!1,d),m(a.__webglObjectsImmediate,"opaque",b,h,q,!1,d),t(a.__webglObjects,!1,"transparent",b,h,q,!0,d),m(a.__webglObjectsImmediate,"transparent",b,h,q,!0,d));s(this.renderPluginsPost,a,b);c&&c.generateMipmaps&&(c.minFilter!==THREE.NearestFilter&&c.minFilter!==THREE.LinearFilter)&&(c instanceof THREE.WebGLRenderTargetCube?(k.bindTexture(k.TEXTURE_CUBE_MAP,c.__webglTexture),
k.generateMipmap(k.TEXTURE_CUBE_MAP),k.bindTexture(k.TEXTURE_CUBE_MAP,null)):(k.bindTexture(k.TEXTURE_2D,c.__webglTexture),k.generateMipmap(k.TEXTURE_2D),k.bindTexture(k.TEXTURE_2D,null)));this.setDepthTest(!0);this.setDepthWrite(!0)}};this.renderImmediateObject=function(a,b,c,d,e){var f=x(a,b,c,d,e);la=-1;O.setMaterialFaces(d);e.immediateRenderCallback?e.immediateRenderCallback(f,k,Wa):e.render(function(a){O.renderBufferImmediate(a,f,d)})};this.initWebGLObjects=function(a){for(a.__webglObjects||
(a.__webglObjects=[],a.__webglObjectsImmediate=[],a.__webglSprites=[],a.__webglFlares=[]);a.__objectsAdded.length;){var b=a.__objectsAdded[0],l=a,m=void 0,n=void 0,r=void 0,x=void 0;if(!b.__webglInit)if(b.__webglInit=!0,b._modelViewMatrix=new THREE.Matrix4,b._normalMatrix=new THREE.Matrix3,void 0!==b.geometry&&void 0===b.geometry.__webglInit&&(b.geometry.__webglInit=!0,b.geometry.addEventListener("dispose",xd)),b instanceof THREE.Mesh)if(n=b.geometry,r=b.material,n instanceof THREE.Geometry){if(void 0===
n.geometryGroups){var s=n,t=void 0,I=void 0,z=void 0,C=void 0,D=void 0,F=void 0,G={},J=s.morphTargets.length,K=s.morphNormals.length,L=r instanceof THREE.MeshFaceMaterial;s.geometryGroups={};t=0;for(I=s.faces.length;t<I;t++)z=s.faces[t],C=L?z.materialIndex:0,void 0===G[C]&&(G[C]={hash:C,counter:0}),F=G[C].hash+"_"+G[C].counter,void 0===s.geometryGroups[F]&&(s.geometryGroups[F]={faces3:[],faces4:[],materialIndex:C,vertices:0,numMorphTargets:J,numMorphNormals:K}),D=z instanceof THREE.Face3?3:4,65535<
s.geometryGroups[F].vertices+D&&(G[C].counter+=1,F=G[C].hash+"_"+G[C].counter,void 0===s.geometryGroups[F]&&(s.geometryGroups[F]={faces3:[],faces4:[],materialIndex:C,vertices:0,numMorphTargets:J,numMorphNormals:K})),z instanceof THREE.Face3?s.geometryGroups[F].faces3.push(t):s.geometryGroups[F].faces4.push(t),s.geometryGroups[F].vertices+=D;s.geometryGroupsList=[];var M=void 0;for(M in s.geometryGroups)s.geometryGroups[M].id=qa++,s.geometryGroupsList.push(s.geometryGroups[M])}for(m in n.geometryGroups)if(x=
n.geometryGroups[m],!x.__webglVertexBuffer){var H=x;H.__webglVertexBuffer=k.createBuffer();H.__webglNormalBuffer=k.createBuffer();H.__webglTangentBuffer=k.createBuffer();H.__webglColorBuffer=k.createBuffer();H.__webglUVBuffer=k.createBuffer();H.__webglUV2Buffer=k.createBuffer();H.__webglSkinIndicesBuffer=k.createBuffer();H.__webglSkinWeightsBuffer=k.createBuffer();H.__webglFaceBuffer=k.createBuffer();H.__webglLineBuffer=k.createBuffer();var N=void 0,Q=void 0;if(H.numMorphTargets){H.__webglMorphTargetsBuffers=
[];N=0;for(Q=H.numMorphTargets;N<Q;N++)H.__webglMorphTargetsBuffers.push(k.createBuffer())}if(H.numMorphNormals){H.__webglMorphNormalsBuffers=[];N=0;for(Q=H.numMorphNormals;N<Q;N++)H.__webglMorphNormalsBuffers.push(k.createBuffer())}O.info.memory.geometries++;d(x,b);n.verticesNeedUpdate=!0;n.morphTargetsNeedUpdate=!0;n.elementsNeedUpdate=!0;n.uvsNeedUpdate=!0;n.normalsNeedUpdate=!0;n.tangentsNeedUpdate=!0;n.colorsNeedUpdate=!0}}else n instanceof THREE.BufferGeometry&&h(n);else if(b instanceof THREE.Ribbon){if(n=
b.geometry,!n.__webglVertexBuffer){var V=n;V.__webglVertexBuffer=k.createBuffer();V.__webglColorBuffer=k.createBuffer();V.__webglNormalBuffer=k.createBuffer();O.info.memory.geometries++;var ba=n,X=b,Z=ba.vertices.length;ba.__vertexArray=new Float32Array(3*Z);ba.__colorArray=new Float32Array(3*Z);ba.__normalArray=new Float32Array(3*Z);ba.__webglVertexCount=Z;c(ba,X);n.verticesNeedUpdate=!0;n.colorsNeedUpdate=!0;n.normalsNeedUpdate=!0}}else if(b instanceof THREE.Line){if(n=b.geometry,!n.__webglVertexBuffer)if(n instanceof
THREE.Geometry){var $=n;$.__webglVertexBuffer=k.createBuffer();$.__webglColorBuffer=k.createBuffer();$.__webglLineDistanceBuffer=k.createBuffer();O.info.memory.geometries++;var Y=n,ea=b,la=Y.vertices.length;Y.__vertexArray=new Float32Array(3*la);Y.__colorArray=new Float32Array(3*la);Y.__lineDistanceArray=new Float32Array(1*la);Y.__webglLineCount=la;c(Y,ea);n.verticesNeedUpdate=!0;n.colorsNeedUpdate=!0;n.lineDistancesNeedUpdate=!0}else n instanceof THREE.BufferGeometry&&h(n)}else if(b instanceof THREE.ParticleSystem&&
(n=b.geometry,!n.__webglVertexBuffer))if(n instanceof THREE.Geometry){var ga=n;ga.__webglVertexBuffer=k.createBuffer();ga.__webglColorBuffer=k.createBuffer();O.info.memory.geometries++;var da=n,Na=b,ia=da.vertices.length;da.__vertexArray=new Float32Array(3*ia);da.__colorArray=new Float32Array(3*ia);da.__sortArray=[];da.__webglParticleCount=ia;c(da,Na);n.verticesNeedUpdate=!0;n.colorsNeedUpdate=!0}else n instanceof THREE.BufferGeometry&&h(n);if(!b.__webglActive){if(b instanceof THREE.Mesh)if(n=b.geometry,
n instanceof THREE.BufferGeometry)v(l.__webglObjects,n,b);else{if(n instanceof THREE.Geometry)for(m in n.geometryGroups)x=n.geometryGroups[m],v(l.__webglObjects,x,b)}else b instanceof THREE.Ribbon||b instanceof THREE.Line||b instanceof THREE.ParticleSystem?(n=b.geometry,v(l.__webglObjects,n,b)):b instanceof THREE.ImmediateRenderObject||b.immediateRenderCallback?l.__webglObjectsImmediate.push({object:b,opaque:null,transparent:null}):b instanceof THREE.Sprite?l.__webglSprites.push(b):b instanceof THREE.LensFlare&&
l.__webglFlares.push(b);b.__webglActive=!0}a.__objectsAdded.splice(0,1)}for(;a.__objectsRemoved.length;){var Oa=a.__objectsRemoved[0],ma=a;Oa instanceof THREE.Mesh||Oa instanceof THREE.ParticleSystem||Oa instanceof THREE.Ribbon||Oa instanceof THREE.Line?A(ma.__webglObjects,Oa):Oa instanceof THREE.Sprite?u(ma.__webglSprites,Oa):Oa instanceof THREE.LensFlare?u(ma.__webglFlares,Oa):(Oa instanceof THREE.ImmediateRenderObject||Oa.immediateRenderCallback)&&A(ma.__webglObjectsImmediate,Oa);Oa.__webglActive=
!1;a.__objectsRemoved.splice(0,1)}for(var pa=0,sa=a.__webglObjects.length;pa<sa;pa++){var ua=a.__webglObjects[pa].object,P=ua.geometry,mb=void 0,ra=void 0,ja=void 0;if(ua instanceof THREE.Mesh)if(P instanceof THREE.BufferGeometry)(P.verticesNeedUpdate||P.elementsNeedUpdate||P.uvsNeedUpdate||P.normalsNeedUpdate||P.colorsNeedUpdate||P.tangentsNeedUpdate)&&j(P,k.DYNAMIC_DRAW,!P.dynamic),P.verticesNeedUpdate=!1,P.elementsNeedUpdate=!1,P.uvsNeedUpdate=!1,P.normalsNeedUpdate=!1,P.colorsNeedUpdate=!1,P.tangentsNeedUpdate=
!1;else{for(var Da=0,La=P.geometryGroupsList.length;Da<La;Da++)if(mb=P.geometryGroupsList[Da],ja=f(ua,mb),P.buffersNeedUpdate&&d(mb,ua),ra=ja.attributes&&B(ja),P.verticesNeedUpdate||P.morphTargetsNeedUpdate||P.elementsNeedUpdate||P.uvsNeedUpdate||P.normalsNeedUpdate||P.colorsNeedUpdate||P.tangentsNeedUpdate||ra){var ta=mb,Ma=ua,Qa=k.DYNAMIC_DRAW,Wa=!P.dynamic,Ga=ja;if(ta.__inittedArrays){var hb=e(Ga),Xa=Ga.vertexColors?Ga.vertexColors:!1,cb=g(Ga),ab=hb===THREE.SmoothShading,E=void 0,W=void 0,Sa=void 0,
R=void 0,bb=void 0,Ya=void 0,Ta=void 0,nb=void 0,db=void 0,pb=void 0,ub=void 0,S=void 0,T=void 0,U=void 0,oa=void 0,Nb=void 0,Ob=void 0,Pb=void 0,xb=void 0,Qb=void 0,Rb=void 0,Sb=void 0,yb=void 0,Tb=void 0,Ub=void 0,Vb=void 0,zb=void 0,Wb=void 0,Xb=void 0,Yb=void 0,Jb=void 0,Zb=void 0,$b=void 0,ac=void 0,Kb=void 0,xa=void 0,gc=void 0,oc=void 0,Ab=void 0,zc=void 0,eb=void 0,nc=void 0,Za=void 0,$a=void 0,pc=void 0,ic=void 0,Pa=0,Va=0,jc=0,kc=0,Fb=0,kb=0,Ba=0,ob=0,Ua=0,ca=0,ka=0,y=0,ya=void 0,fb=ta.__vertexArray,
Ec=ta.__uvArray,Fc=ta.__uv2Array,Gb=ta.__normalArray,Ha=ta.__tangentArray,gb=ta.__colorArray,Ia=ta.__skinIndexArray,Ja=ta.__skinWeightArray,tc=ta.__morphTargetsArrays,uc=ta.__morphNormalsArrays,pd=ta.__webglCustomAttributesList,w=void 0,bc=ta.__faceArray,wb=ta.__lineArray,qb=Ma.geometry,Nc=qb.elementsNeedUpdate,Dc=qb.uvsNeedUpdate,Oc=qb.normalsNeedUpdate,Pc=qb.tangentsNeedUpdate,Qc=qb.colorsNeedUpdate,gd=qb.morphTargetsNeedUpdate,vc=qb.vertices,va=ta.faces3,wa=ta.faces4,lb=qb.faces,qd=qb.faceVertexUvs[0],
rd=qb.faceVertexUvs[1],wc=qb.skinIndices,qc=qb.skinWeights,rc=qb.morphTargets,Rc=qb.morphNormals;if(qb.verticesNeedUpdate){E=0;for(W=va.length;E<W;E++)R=lb[va[E]],S=vc[R.a],T=vc[R.b],U=vc[R.c],fb[Va]=S.x,fb[Va+1]=S.y,fb[Va+2]=S.z,fb[Va+3]=T.x,fb[Va+4]=T.y,fb[Va+5]=T.z,fb[Va+6]=U.x,fb[Va+7]=U.y,fb[Va+8]=U.z,Va+=9;E=0;for(W=wa.length;E<W;E++)R=lb[wa[E]],S=vc[R.a],T=vc[R.b],U=vc[R.c],oa=vc[R.d],fb[Va]=S.x,fb[Va+1]=S.y,fb[Va+2]=S.z,fb[Va+3]=T.x,fb[Va+4]=T.y,fb[Va+5]=T.z,fb[Va+6]=U.x,fb[Va+7]=U.y,fb[Va+
8]=U.z,fb[Va+9]=oa.x,fb[Va+10]=oa.y,fb[Va+11]=oa.z,Va+=12;k.bindBuffer(k.ARRAY_BUFFER,ta.__webglVertexBuffer);k.bufferData(k.ARRAY_BUFFER,fb,Qa)}if(gd){eb=0;for(nc=rc.length;eb<nc;eb++){E=ka=0;for(W=va.length;E<W;E++)pc=va[E],R=lb[pc],S=rc[eb].vertices[R.a],T=rc[eb].vertices[R.b],U=rc[eb].vertices[R.c],Za=tc[eb],Za[ka]=S.x,Za[ka+1]=S.y,Za[ka+2]=S.z,Za[ka+3]=T.x,Za[ka+4]=T.y,Za[ka+5]=T.z,Za[ka+6]=U.x,Za[ka+7]=U.y,Za[ka+8]=U.z,Ga.morphNormals&&(ab?(ic=Rc[eb].vertexNormals[pc],Qb=ic.a,Rb=ic.b,Sb=ic.c):
Sb=Rb=Qb=Rc[eb].faceNormals[pc],$a=uc[eb],$a[ka]=Qb.x,$a[ka+1]=Qb.y,$a[ka+2]=Qb.z,$a[ka+3]=Rb.x,$a[ka+4]=Rb.y,$a[ka+5]=Rb.z,$a[ka+6]=Sb.x,$a[ka+7]=Sb.y,$a[ka+8]=Sb.z),ka+=9;E=0;for(W=wa.length;E<W;E++)pc=wa[E],R=lb[pc],S=rc[eb].vertices[R.a],T=rc[eb].vertices[R.b],U=rc[eb].vertices[R.c],oa=rc[eb].vertices[R.d],Za=tc[eb],Za[ka]=S.x,Za[ka+1]=S.y,Za[ka+2]=S.z,Za[ka+3]=T.x,Za[ka+4]=T.y,Za[ka+5]=T.z,Za[ka+6]=U.x,Za[ka+7]=U.y,Za[ka+8]=U.z,Za[ka+9]=oa.x,Za[ka+10]=oa.y,Za[ka+11]=oa.z,Ga.morphNormals&&(ab?
(ic=Rc[eb].vertexNormals[pc],Qb=ic.a,Rb=ic.b,Sb=ic.c,yb=ic.d):yb=Sb=Rb=Qb=Rc[eb].faceNormals[pc],$a=uc[eb],$a[ka]=Qb.x,$a[ka+1]=Qb.y,$a[ka+2]=Qb.z,$a[ka+3]=Rb.x,$a[ka+4]=Rb.y,$a[ka+5]=Rb.z,$a[ka+6]=Sb.x,$a[ka+7]=Sb.y,$a[ka+8]=Sb.z,$a[ka+9]=yb.x,$a[ka+10]=yb.y,$a[ka+11]=yb.z),ka+=12;k.bindBuffer(k.ARRAY_BUFFER,ta.__webglMorphTargetsBuffers[eb]);k.bufferData(k.ARRAY_BUFFER,tc[eb],Qa);Ga.morphNormals&&(k.bindBuffer(k.ARRAY_BUFFER,ta.__webglMorphNormalsBuffers[eb]),k.bufferData(k.ARRAY_BUFFER,uc[eb],
Qa))}}if(qc.length){E=0;for(W=va.length;E<W;E++)R=lb[va[E]],Wb=qc[R.a],Xb=qc[R.b],Yb=qc[R.c],Ja[ca]=Wb.x,Ja[ca+1]=Wb.y,Ja[ca+2]=Wb.z,Ja[ca+3]=Wb.w,Ja[ca+4]=Xb.x,Ja[ca+5]=Xb.y,Ja[ca+6]=Xb.z,Ja[ca+7]=Xb.w,Ja[ca+8]=Yb.x,Ja[ca+9]=Yb.y,Ja[ca+10]=Yb.z,Ja[ca+11]=Yb.w,Zb=wc[R.a],$b=wc[R.b],ac=wc[R.c],Ia[ca]=Zb.x,Ia[ca+1]=Zb.y,Ia[ca+2]=Zb.z,Ia[ca+3]=Zb.w,Ia[ca+4]=$b.x,Ia[ca+5]=$b.y,Ia[ca+6]=$b.z,Ia[ca+7]=$b.w,Ia[ca+8]=ac.x,Ia[ca+9]=ac.y,Ia[ca+10]=ac.z,Ia[ca+11]=ac.w,ca+=12;E=0;for(W=wa.length;E<W;E++)R=lb[wa[E]],
Wb=qc[R.a],Xb=qc[R.b],Yb=qc[R.c],Jb=qc[R.d],Ja[ca]=Wb.x,Ja[ca+1]=Wb.y,Ja[ca+2]=Wb.z,Ja[ca+3]=Wb.w,Ja[ca+4]=Xb.x,Ja[ca+5]=Xb.y,Ja[ca+6]=Xb.z,Ja[ca+7]=Xb.w,Ja[ca+8]=Yb.x,Ja[ca+9]=Yb.y,Ja[ca+10]=Yb.z,Ja[ca+11]=Yb.w,Ja[ca+12]=Jb.x,Ja[ca+13]=Jb.y,Ja[ca+14]=Jb.z,Ja[ca+15]=Jb.w,Zb=wc[R.a],$b=wc[R.b],ac=wc[R.c],Kb=wc[R.d],Ia[ca]=Zb.x,Ia[ca+1]=Zb.y,Ia[ca+2]=Zb.z,Ia[ca+3]=Zb.w,Ia[ca+4]=$b.x,Ia[ca+5]=$b.y,Ia[ca+6]=$b.z,Ia[ca+7]=$b.w,Ia[ca+8]=ac.x,Ia[ca+9]=ac.y,Ia[ca+10]=ac.z,Ia[ca+11]=ac.w,Ia[ca+12]=Kb.x,Ia[ca+
13]=Kb.y,Ia[ca+14]=Kb.z,Ia[ca+15]=Kb.w,ca+=16;0<ca&&(k.bindBuffer(k.ARRAY_BUFFER,ta.__webglSkinIndicesBuffer),k.bufferData(k.ARRAY_BUFFER,Ia,Qa),k.bindBuffer(k.ARRAY_BUFFER,ta.__webglSkinWeightsBuffer),k.bufferData(k.ARRAY_BUFFER,Ja,Qa))}if(Qc&&Xa){E=0;for(W=va.length;E<W;E++)R=lb[va[E]],Ta=R.vertexColors,nb=R.color,3===Ta.length&&Xa===THREE.VertexColors?(Tb=Ta[0],Ub=Ta[1],Vb=Ta[2]):Vb=Ub=Tb=nb,gb[Ua]=Tb.r,gb[Ua+1]=Tb.g,gb[Ua+2]=Tb.b,gb[Ua+3]=Ub.r,gb[Ua+4]=Ub.g,gb[Ua+5]=Ub.b,gb[Ua+6]=Vb.r,gb[Ua+7]=
Vb.g,gb[Ua+8]=Vb.b,Ua+=9;E=0;for(W=wa.length;E<W;E++)R=lb[wa[E]],Ta=R.vertexColors,nb=R.color,4===Ta.length&&Xa===THREE.VertexColors?(Tb=Ta[0],Ub=Ta[1],Vb=Ta[2],zb=Ta[3]):zb=Vb=Ub=Tb=nb,gb[Ua]=Tb.r,gb[Ua+1]=Tb.g,gb[Ua+2]=Tb.b,gb[Ua+3]=Ub.r,gb[Ua+4]=Ub.g,gb[Ua+5]=Ub.b,gb[Ua+6]=Vb.r,gb[Ua+7]=Vb.g,gb[Ua+8]=Vb.b,gb[Ua+9]=zb.r,gb[Ua+10]=zb.g,gb[Ua+11]=zb.b,Ua+=12;0<Ua&&(k.bindBuffer(k.ARRAY_BUFFER,ta.__webglColorBuffer),k.bufferData(k.ARRAY_BUFFER,gb,Qa))}if(Pc&&qb.hasTangents){E=0;for(W=va.length;E<W;E++)R=
lb[va[E]],db=R.vertexTangents,Nb=db[0],Ob=db[1],Pb=db[2],Ha[Ba]=Nb.x,Ha[Ba+1]=Nb.y,Ha[Ba+2]=Nb.z,Ha[Ba+3]=Nb.w,Ha[Ba+4]=Ob.x,Ha[Ba+5]=Ob.y,Ha[Ba+6]=Ob.z,Ha[Ba+7]=Ob.w,Ha[Ba+8]=Pb.x,Ha[Ba+9]=Pb.y,Ha[Ba+10]=Pb.z,Ha[Ba+11]=Pb.w,Ba+=12;E=0;for(W=wa.length;E<W;E++)R=lb[wa[E]],db=R.vertexTangents,Nb=db[0],Ob=db[1],Pb=db[2],xb=db[3],Ha[Ba]=Nb.x,Ha[Ba+1]=Nb.y,Ha[Ba+2]=Nb.z,Ha[Ba+3]=Nb.w,Ha[Ba+4]=Ob.x,Ha[Ba+5]=Ob.y,Ha[Ba+6]=Ob.z,Ha[Ba+7]=Ob.w,Ha[Ba+8]=Pb.x,Ha[Ba+9]=Pb.y,Ha[Ba+10]=Pb.z,Ha[Ba+11]=Pb.w,Ha[Ba+
12]=xb.x,Ha[Ba+13]=xb.y,Ha[Ba+14]=xb.z,Ha[Ba+15]=xb.w,Ba+=16;k.bindBuffer(k.ARRAY_BUFFER,ta.__webglTangentBuffer);k.bufferData(k.ARRAY_BUFFER,Ha,Qa)}if(Oc&&hb){E=0;for(W=va.length;E<W;E++)if(R=lb[va[E]],bb=R.vertexNormals,Ya=R.normal,3===bb.length&&ab)for(xa=0;3>xa;xa++)oc=bb[xa],Gb[kb]=oc.x,Gb[kb+1]=oc.y,Gb[kb+2]=oc.z,kb+=3;else for(xa=0;3>xa;xa++)Gb[kb]=Ya.x,Gb[kb+1]=Ya.y,Gb[kb+2]=Ya.z,kb+=3;E=0;for(W=wa.length;E<W;E++)if(R=lb[wa[E]],bb=R.vertexNormals,Ya=R.normal,4===bb.length&&ab)for(xa=0;4>xa;xa++)oc=
bb[xa],Gb[kb]=oc.x,Gb[kb+1]=oc.y,Gb[kb+2]=oc.z,kb+=3;else for(xa=0;4>xa;xa++)Gb[kb]=Ya.x,Gb[kb+1]=Ya.y,Gb[kb+2]=Ya.z,kb+=3;k.bindBuffer(k.ARRAY_BUFFER,ta.__webglNormalBuffer);k.bufferData(k.ARRAY_BUFFER,Gb,Qa)}if(Dc&&qd&&cb){E=0;for(W=va.length;E<W;E++)if(Sa=va[E],pb=qd[Sa],void 0!==pb)for(xa=0;3>xa;xa++)Ab=pb[xa],Ec[jc]=Ab.x,Ec[jc+1]=Ab.y,jc+=2;E=0;for(W=wa.length;E<W;E++)if(Sa=wa[E],pb=qd[Sa],void 0!==pb)for(xa=0;4>xa;xa++)Ab=pb[xa],Ec[jc]=Ab.x,Ec[jc+1]=Ab.y,jc+=2;0<jc&&(k.bindBuffer(k.ARRAY_BUFFER,
ta.__webglUVBuffer),k.bufferData(k.ARRAY_BUFFER,Ec,Qa))}if(Dc&&rd&&cb){E=0;for(W=va.length;E<W;E++)if(Sa=va[E],ub=rd[Sa],void 0!==ub)for(xa=0;3>xa;xa++)zc=ub[xa],Fc[kc]=zc.x,Fc[kc+1]=zc.y,kc+=2;E=0;for(W=wa.length;E<W;E++)if(Sa=wa[E],ub=rd[Sa],void 0!==ub)for(xa=0;4>xa;xa++)zc=ub[xa],Fc[kc]=zc.x,Fc[kc+1]=zc.y,kc+=2;0<kc&&(k.bindBuffer(k.ARRAY_BUFFER,ta.__webglUV2Buffer),k.bufferData(k.ARRAY_BUFFER,Fc,Qa))}if(Nc){E=0;for(W=va.length;E<W;E++)bc[Fb]=Pa,bc[Fb+1]=Pa+1,bc[Fb+2]=Pa+2,Fb+=3,wb[ob]=Pa,wb[ob+
1]=Pa+1,wb[ob+2]=Pa,wb[ob+3]=Pa+2,wb[ob+4]=Pa+1,wb[ob+5]=Pa+2,ob+=6,Pa+=3;E=0;for(W=wa.length;E<W;E++)bc[Fb]=Pa,bc[Fb+1]=Pa+1,bc[Fb+2]=Pa+3,bc[Fb+3]=Pa+1,bc[Fb+4]=Pa+2,bc[Fb+5]=Pa+3,Fb+=6,wb[ob]=Pa,wb[ob+1]=Pa+1,wb[ob+2]=Pa,wb[ob+3]=Pa+3,wb[ob+4]=Pa+1,wb[ob+5]=Pa+2,wb[ob+6]=Pa+2,wb[ob+7]=Pa+3,ob+=8,Pa+=4;k.bindBuffer(k.ELEMENT_ARRAY_BUFFER,ta.__webglFaceBuffer);k.bufferData(k.ELEMENT_ARRAY_BUFFER,bc,Qa);k.bindBuffer(k.ELEMENT_ARRAY_BUFFER,ta.__webglLineBuffer);k.bufferData(k.ELEMENT_ARRAY_BUFFER,
wb,Qa)}if(pd){xa=0;for(gc=pd.length;xa<gc;xa++)if(w=pd[xa],w.__original.needsUpdate){y=0;if(1===w.size)if(void 0===w.boundTo||"vertices"===w.boundTo){E=0;for(W=va.length;E<W;E++)R=lb[va[E]],w.array[y]=w.value[R.a],w.array[y+1]=w.value[R.b],w.array[y+2]=w.value[R.c],y+=3;E=0;for(W=wa.length;E<W;E++)R=lb[wa[E]],w.array[y]=w.value[R.a],w.array[y+1]=w.value[R.b],w.array[y+2]=w.value[R.c],w.array[y+3]=w.value[R.d],y+=4}else{if("faces"===w.boundTo){E=0;for(W=va.length;E<W;E++)ya=w.value[va[E]],w.array[y]=
ya,w.array[y+1]=ya,w.array[y+2]=ya,y+=3;E=0;for(W=wa.length;E<W;E++)ya=w.value[wa[E]],w.array[y]=ya,w.array[y+1]=ya,w.array[y+2]=ya,w.array[y+3]=ya,y+=4}}else if(2===w.size)if(void 0===w.boundTo||"vertices"===w.boundTo){E=0;for(W=va.length;E<W;E++)R=lb[va[E]],S=w.value[R.a],T=w.value[R.b],U=w.value[R.c],w.array[y]=S.x,w.array[y+1]=S.y,w.array[y+2]=T.x,w.array[y+3]=T.y,w.array[y+4]=U.x,w.array[y+5]=U.y,y+=6;E=0;for(W=wa.length;E<W;E++)R=lb[wa[E]],S=w.value[R.a],T=w.value[R.b],U=w.value[R.c],oa=w.value[R.d],
w.array[y]=S.x,w.array[y+1]=S.y,w.array[y+2]=T.x,w.array[y+3]=T.y,w.array[y+4]=U.x,w.array[y+5]=U.y,w.array[y+6]=oa.x,w.array[y+7]=oa.y,y+=8}else{if("faces"===w.boundTo){E=0;for(W=va.length;E<W;E++)U=T=S=ya=w.value[va[E]],w.array[y]=S.x,w.array[y+1]=S.y,w.array[y+2]=T.x,w.array[y+3]=T.y,w.array[y+4]=U.x,w.array[y+5]=U.y,y+=6;E=0;for(W=wa.length;E<W;E++)oa=U=T=S=ya=w.value[wa[E]],w.array[y]=S.x,w.array[y+1]=S.y,w.array[y+2]=T.x,w.array[y+3]=T.y,w.array[y+4]=U.x,w.array[y+5]=U.y,w.array[y+6]=oa.x,w.array[y+
7]=oa.y,y+=8}}else if(3===w.size){var aa;aa="c"===w.type?["r","g","b"]:["x","y","z"];if(void 0===w.boundTo||"vertices"===w.boundTo){E=0;for(W=va.length;E<W;E++)R=lb[va[E]],S=w.value[R.a],T=w.value[R.b],U=w.value[R.c],w.array[y]=S[aa[0]],w.array[y+1]=S[aa[1]],w.array[y+2]=S[aa[2]],w.array[y+3]=T[aa[0]],w.array[y+4]=T[aa[1]],w.array[y+5]=T[aa[2]],w.array[y+6]=U[aa[0]],w.array[y+7]=U[aa[1]],w.array[y+8]=U[aa[2]],y+=9;E=0;for(W=wa.length;E<W;E++)R=lb[wa[E]],S=w.value[R.a],T=w.value[R.b],U=w.value[R.c],
oa=w.value[R.d],w.array[y]=S[aa[0]],w.array[y+1]=S[aa[1]],w.array[y+2]=S[aa[2]],w.array[y+3]=T[aa[0]],w.array[y+4]=T[aa[1]],w.array[y+5]=T[aa[2]],w.array[y+6]=U[aa[0]],w.array[y+7]=U[aa[1]],w.array[y+8]=U[aa[2]],w.array[y+9]=oa[aa[0]],w.array[y+10]=oa[aa[1]],w.array[y+11]=oa[aa[2]],y+=12}else if("faces"===w.boundTo){E=0;for(W=va.length;E<W;E++)U=T=S=ya=w.value[va[E]],w.array[y]=S[aa[0]],w.array[y+1]=S[aa[1]],w.array[y+2]=S[aa[2]],w.array[y+3]=T[aa[0]],w.array[y+4]=T[aa[1]],w.array[y+5]=T[aa[2]],w.array[y+
6]=U[aa[0]],w.array[y+7]=U[aa[1]],w.array[y+8]=U[aa[2]],y+=9;E=0;for(W=wa.length;E<W;E++)oa=U=T=S=ya=w.value[wa[E]],w.array[y]=S[aa[0]],w.array[y+1]=S[aa[1]],w.array[y+2]=S[aa[2]],w.array[y+3]=T[aa[0]],w.array[y+4]=T[aa[1]],w.array[y+5]=T[aa[2]],w.array[y+6]=U[aa[0]],w.array[y+7]=U[aa[1]],w.array[y+8]=U[aa[2]],w.array[y+9]=oa[aa[0]],w.array[y+10]=oa[aa[1]],w.array[y+11]=oa[aa[2]],y+=12}else if("faceVertices"===w.boundTo){E=0;for(W=va.length;E<W;E++)ya=w.value[va[E]],S=ya[0],T=ya[1],U=ya[2],w.array[y]=
S[aa[0]],w.array[y+1]=S[aa[1]],w.array[y+2]=S[aa[2]],w.array[y+3]=T[aa[0]],w.array[y+4]=T[aa[1]],w.array[y+5]=T[aa[2]],w.array[y+6]=U[aa[0]],w.array[y+7]=U[aa[1]],w.array[y+8]=U[aa[2]],y+=9;E=0;for(W=wa.length;E<W;E++)ya=w.value[wa[E]],S=ya[0],T=ya[1],U=ya[2],oa=ya[3],w.array[y]=S[aa[0]],w.array[y+1]=S[aa[1]],w.array[y+2]=S[aa[2]],w.array[y+3]=T[aa[0]],w.array[y+4]=T[aa[1]],w.array[y+5]=T[aa[2]],w.array[y+6]=U[aa[0]],w.array[y+7]=U[aa[1]],w.array[y+8]=U[aa[2]],w.array[y+9]=oa[aa[0]],w.array[y+10]=
oa[aa[1]],w.array[y+11]=oa[aa[2]],y+=12}}else if(4===w.size)if(void 0===w.boundTo||"vertices"===w.boundTo){E=0;for(W=va.length;E<W;E++)R=lb[va[E]],S=w.value[R.a],T=w.value[R.b],U=w.value[R.c],w.array[y]=S.x,w.array[y+1]=S.y,w.array[y+2]=S.z,w.array[y+3]=S.w,w.array[y+4]=T.x,w.array[y+5]=T.y,w.array[y+6]=T.z,w.array[y+7]=T.w,w.array[y+8]=U.x,w.array[y+9]=U.y,w.array[y+10]=U.z,w.array[y+11]=U.w,y+=12;E=0;for(W=wa.length;E<W;E++)R=lb[wa[E]],S=w.value[R.a],T=w.value[R.b],U=w.value[R.c],oa=w.value[R.d],
w.array[y]=S.x,w.array[y+1]=S.y,w.array[y+2]=S.z,w.array[y+3]=S.w,w.array[y+4]=T.x,w.array[y+5]=T.y,w.array[y+6]=T.z,w.array[y+7]=T.w,w.array[y+8]=U.x,w.array[y+9]=U.y,w.array[y+10]=U.z,w.array[y+11]=U.w,w.array[y+12]=oa.x,w.array[y+13]=oa.y,w.array[y+14]=oa.z,w.array[y+15]=oa.w,y+=16}else if("faces"===w.boundTo){E=0;for(W=va.length;E<W;E++)U=T=S=ya=w.value[va[E]],w.array[y]=S.x,w.array[y+1]=S.y,w.array[y+2]=S.z,w.array[y+3]=S.w,w.array[y+4]=T.x,w.array[y+5]=T.y,w.array[y+6]=T.z,w.array[y+7]=T.w,
w.array[y+8]=U.x,w.array[y+9]=U.y,w.array[y+10]=U.z,w.array[y+11]=U.w,y+=12;E=0;for(W=wa.length;E<W;E++)oa=U=T=S=ya=w.value[wa[E]],w.array[y]=S.x,w.array[y+1]=S.y,w.array[y+2]=S.z,w.array[y+3]=S.w,w.array[y+4]=T.x,w.array[y+5]=T.y,w.array[y+6]=T.z,w.array[y+7]=T.w,w.array[y+8]=U.x,w.array[y+9]=U.y,w.array[y+10]=U.z,w.array[y+11]=U.w,w.array[y+12]=oa.x,w.array[y+13]=oa.y,w.array[y+14]=oa.z,w.array[y+15]=oa.w,y+=16}else if("faceVertices"===w.boundTo){E=0;for(W=va.length;E<W;E++)ya=w.value[va[E]],S=
ya[0],T=ya[1],U=ya[2],w.array[y]=S.x,w.array[y+1]=S.y,w.array[y+2]=S.z,w.array[y+3]=S.w,w.array[y+4]=T.x,w.array[y+5]=T.y,w.array[y+6]=T.z,w.array[y+7]=T.w,w.array[y+8]=U.x,w.array[y+9]=U.y,w.array[y+10]=U.z,w.array[y+11]=U.w,y+=12;E=0;for(W=wa.length;E<W;E++)ya=w.value[wa[E]],S=ya[0],T=ya[1],U=ya[2],oa=ya[3],w.array[y]=S.x,w.array[y+1]=S.y,w.array[y+2]=S.z,w.array[y+3]=S.w,w.array[y+4]=T.x,w.array[y+5]=T.y,w.array[y+6]=T.z,w.array[y+7]=T.w,w.array[y+8]=U.x,w.array[y+9]=U.y,w.array[y+10]=U.z,w.array[y+
11]=U.w,w.array[y+12]=oa.x,w.array[y+13]=oa.y,w.array[y+14]=oa.z,w.array[y+15]=oa.w,y+=16}k.bindBuffer(k.ARRAY_BUFFER,w.buffer);k.bufferData(k.ARRAY_BUFFER,w.array,Qa)}}Wa&&(delete ta.__inittedArrays,delete ta.__colorArray,delete ta.__normalArray,delete ta.__tangentArray,delete ta.__uvArray,delete ta.__uv2Array,delete ta.__faceArray,delete ta.__vertexArray,delete ta.__lineArray,delete ta.__skinIndexArray,delete ta.__skinWeightArray)}}P.verticesNeedUpdate=!1;P.morphTargetsNeedUpdate=!1;P.elementsNeedUpdate=
!1;P.uvsNeedUpdate=!1;P.normalsNeedUpdate=!1;P.colorsNeedUpdate=!1;P.tangentsNeedUpdate=!1;P.buffersNeedUpdate=!1;ja.attributes&&q(ja)}else if(ua instanceof THREE.Ribbon){ja=f(ua,P);ra=ja.attributes&&B(ja);if(P.verticesNeedUpdate||P.colorsNeedUpdate||P.normalsNeedUpdate||ra){var Hb=P,Sc=k.DYNAMIC_DRAW,Gc=void 0,Hc=void 0,Ic=void 0,Tc=void 0,za=void 0,Uc=void 0,Vc=void 0,Wc=void 0,yd=void 0,ib=void 0,Ac=void 0,Ea=void 0,rb=void 0,zd=Hb.vertices,Ad=Hb.colors,Bd=Hb.normals,hd=zd.length,id=Ad.length,
jd=Bd.length,Xc=Hb.__vertexArray,Yc=Hb.__colorArray,Zc=Hb.__normalArray,kd=Hb.colorsNeedUpdate,ld=Hb.normalsNeedUpdate,sd=Hb.__webglCustomAttributesList;if(Hb.verticesNeedUpdate){for(Gc=0;Gc<hd;Gc++)Tc=zd[Gc],za=3*Gc,Xc[za]=Tc.x,Xc[za+1]=Tc.y,Xc[za+2]=Tc.z;k.bindBuffer(k.ARRAY_BUFFER,Hb.__webglVertexBuffer);k.bufferData(k.ARRAY_BUFFER,Xc,Sc)}if(kd){for(Hc=0;Hc<id;Hc++)Uc=Ad[Hc],za=3*Hc,Yc[za]=Uc.r,Yc[za+1]=Uc.g,Yc[za+2]=Uc.b;k.bindBuffer(k.ARRAY_BUFFER,Hb.__webglColorBuffer);k.bufferData(k.ARRAY_BUFFER,
Yc,Sc)}if(ld){for(Ic=0;Ic<jd;Ic++)Vc=Bd[Ic],za=3*Ic,Zc[za]=Vc.x,Zc[za+1]=Vc.y,Zc[za+2]=Vc.z;k.bindBuffer(k.ARRAY_BUFFER,Hb.__webglNormalBuffer);k.bufferData(k.ARRAY_BUFFER,Zc,Sc)}if(sd){Wc=0;for(yd=sd.length;Wc<yd;Wc++)if(Ea=sd[Wc],Ea.needsUpdate&&(void 0===Ea.boundTo||"vertices"===Ea.boundTo)){za=0;Ac=Ea.value.length;if(1===Ea.size)for(ib=0;ib<Ac;ib++)Ea.array[ib]=Ea.value[ib];else if(2===Ea.size)for(ib=0;ib<Ac;ib++)rb=Ea.value[ib],Ea.array[za]=rb.x,Ea.array[za+1]=rb.y,za+=2;else if(3===Ea.size)if("c"===
Ea.type)for(ib=0;ib<Ac;ib++)rb=Ea.value[ib],Ea.array[za]=rb.r,Ea.array[za+1]=rb.g,Ea.array[za+2]=rb.b,za+=3;else for(ib=0;ib<Ac;ib++)rb=Ea.value[ib],Ea.array[za]=rb.x,Ea.array[za+1]=rb.y,Ea.array[za+2]=rb.z,za+=3;else if(4===Ea.size)for(ib=0;ib<Ac;ib++)rb=Ea.value[ib],Ea.array[za]=rb.x,Ea.array[za+1]=rb.y,Ea.array[za+2]=rb.z,Ea.array[za+3]=rb.w,za+=4;k.bindBuffer(k.ARRAY_BUFFER,Ea.buffer);k.bufferData(k.ARRAY_BUFFER,Ea.array,Sc)}}}P.verticesNeedUpdate=!1;P.colorsNeedUpdate=!1;P.normalsNeedUpdate=
!1;ja.attributes&&q(ja)}else if(ua instanceof THREE.Line)if(P instanceof THREE.BufferGeometry)(P.verticesNeedUpdate||P.colorsNeedUpdate)&&j(P,k.DYNAMIC_DRAW,!P.dynamic),P.verticesNeedUpdate=!1,P.colorsNeedUpdate=!1;else{ja=f(ua,P);ra=ja.attributes&&B(ja);if(P.verticesNeedUpdate||P.colorsNeedUpdate||P.lineDistancesNeedUpdate||ra){var Ib=P,$c=k.DYNAMIC_DRAW,Jc=void 0,Kc=void 0,Lc=void 0,ad=void 0,Ka=void 0,bd=void 0,Cd=Ib.vertices,Dd=Ib.colors,Ed=Ib.lineDistances,md=Cd.length,Kd=Dd.length,Ld=Ed.length,
cd=Ib.__vertexArray,dd=Ib.__colorArray,Fd=Ib.__lineDistanceArray,Md=Ib.colorsNeedUpdate,Nd=Ib.lineDistancesNeedUpdate,td=Ib.__webglCustomAttributesList,ed=void 0,Gd=void 0,jb=void 0,Bc=void 0,sb=void 0,Fa=void 0;if(Ib.verticesNeedUpdate){for(Jc=0;Jc<md;Jc++)ad=Cd[Jc],Ka=3*Jc,cd[Ka]=ad.x,cd[Ka+1]=ad.y,cd[Ka+2]=ad.z;k.bindBuffer(k.ARRAY_BUFFER,Ib.__webglVertexBuffer);k.bufferData(k.ARRAY_BUFFER,cd,$c)}if(Md){for(Kc=0;Kc<Kd;Kc++)bd=Dd[Kc],Ka=3*Kc,dd[Ka]=bd.r,dd[Ka+1]=bd.g,dd[Ka+2]=bd.b;k.bindBuffer(k.ARRAY_BUFFER,
Ib.__webglColorBuffer);k.bufferData(k.ARRAY_BUFFER,dd,$c)}if(Nd){for(Lc=0;Lc<Ld;Lc++)Fd[Lc]=Ed[Lc];k.bindBuffer(k.ARRAY_BUFFER,Ib.__webglLineDistanceBuffer);k.bufferData(k.ARRAY_BUFFER,Fd,$c)}if(td){ed=0;for(Gd=td.length;ed<Gd;ed++)if(Fa=td[ed],Fa.needsUpdate&&(void 0===Fa.boundTo||"vertices"===Fa.boundTo)){Ka=0;Bc=Fa.value.length;if(1===Fa.size)for(jb=0;jb<Bc;jb++)Fa.array[jb]=Fa.value[jb];else if(2===Fa.size)for(jb=0;jb<Bc;jb++)sb=Fa.value[jb],Fa.array[Ka]=sb.x,Fa.array[Ka+1]=sb.y,Ka+=2;else if(3===
Fa.size)if("c"===Fa.type)for(jb=0;jb<Bc;jb++)sb=Fa.value[jb],Fa.array[Ka]=sb.r,Fa.array[Ka+1]=sb.g,Fa.array[Ka+2]=sb.b,Ka+=3;else for(jb=0;jb<Bc;jb++)sb=Fa.value[jb],Fa.array[Ka]=sb.x,Fa.array[Ka+1]=sb.y,Fa.array[Ka+2]=sb.z,Ka+=3;else if(4===Fa.size)for(jb=0;jb<Bc;jb++)sb=Fa.value[jb],Fa.array[Ka]=sb.x,Fa.array[Ka+1]=sb.y,Fa.array[Ka+2]=sb.z,Fa.array[Ka+3]=sb.w,Ka+=4;k.bindBuffer(k.ARRAY_BUFFER,Fa.buffer);k.bufferData(k.ARRAY_BUFFER,Fa.array,$c)}}}P.verticesNeedUpdate=!1;P.colorsNeedUpdate=!1;P.lineDistancesNeedUpdate=
!1;ja.attributes&&q(ja)}else if(ua instanceof THREE.ParticleSystem)if(P instanceof THREE.BufferGeometry)(P.verticesNeedUpdate||P.colorsNeedUpdate)&&j(P,k.DYNAMIC_DRAW,!P.dynamic),P.verticesNeedUpdate=!1,P.colorsNeedUpdate=!1;else{ja=f(ua,P);ra=ja.attributes&&B(ja);if(P.verticesNeedUpdate||P.colorsNeedUpdate||ua.sortParticles||ra){var cc=P,ud=k.DYNAMIC_DRAW,Mc=ua,tb=void 0,dc=void 0,ec=void 0,ha=void 0,fc=void 0,sc=void 0,fd=cc.vertices,vd=fd.length,wd=cc.colors,Hd=wd.length,xc=cc.__vertexArray,yc=
cc.__colorArray,lc=cc.__sortArray,Id=cc.verticesNeedUpdate,Jd=cc.colorsNeedUpdate,mc=cc.__webglCustomAttributesList,Lb=void 0,Cc=void 0,na=void 0,Mb=void 0,Ca=void 0,fa=void 0;if(Mc.sortParticles){vb.copy(hc);vb.multiply(Mc.matrixWorld);for(tb=0;tb<vd;tb++)ec=fd[tb],Ra.copy(ec),Ra.applyProjection(vb),lc[tb]=[Ra.z,tb];lc.sort(p);for(tb=0;tb<vd;tb++)ec=fd[lc[tb][1]],ha=3*tb,xc[ha]=ec.x,xc[ha+1]=ec.y,xc[ha+2]=ec.z;for(dc=0;dc<Hd;dc++)ha=3*dc,sc=wd[lc[dc][1]],yc[ha]=sc.r,yc[ha+1]=sc.g,yc[ha+2]=sc.b;if(mc){Lb=
0;for(Cc=mc.length;Lb<Cc;Lb++)if(fa=mc[Lb],void 0===fa.boundTo||"vertices"===fa.boundTo)if(ha=0,Mb=fa.value.length,1===fa.size)for(na=0;na<Mb;na++)fc=lc[na][1],fa.array[na]=fa.value[fc];else if(2===fa.size)for(na=0;na<Mb;na++)fc=lc[na][1],Ca=fa.value[fc],fa.array[ha]=Ca.x,fa.array[ha+1]=Ca.y,ha+=2;else if(3===fa.size)if("c"===fa.type)for(na=0;na<Mb;na++)fc=lc[na][1],Ca=fa.value[fc],fa.array[ha]=Ca.r,fa.array[ha+1]=Ca.g,fa.array[ha+2]=Ca.b,ha+=3;else for(na=0;na<Mb;na++)fc=lc[na][1],Ca=fa.value[fc],
fa.array[ha]=Ca.x,fa.array[ha+1]=Ca.y,fa.array[ha+2]=Ca.z,ha+=3;else if(4===fa.size)for(na=0;na<Mb;na++)fc=lc[na][1],Ca=fa.value[fc],fa.array[ha]=Ca.x,fa.array[ha+1]=Ca.y,fa.array[ha+2]=Ca.z,fa.array[ha+3]=Ca.w,ha+=4}}else{if(Id)for(tb=0;tb<vd;tb++)ec=fd[tb],ha=3*tb,xc[ha]=ec.x,xc[ha+1]=ec.y,xc[ha+2]=ec.z;if(Jd)for(dc=0;dc<Hd;dc++)sc=wd[dc],ha=3*dc,yc[ha]=sc.r,yc[ha+1]=sc.g,yc[ha+2]=sc.b;if(mc){Lb=0;for(Cc=mc.length;Lb<Cc;Lb++)if(fa=mc[Lb],fa.needsUpdate&&(void 0===fa.boundTo||"vertices"===fa.boundTo))if(Mb=
fa.value.length,ha=0,1===fa.size)for(na=0;na<Mb;na++)fa.array[na]=fa.value[na];else if(2===fa.size)for(na=0;na<Mb;na++)Ca=fa.value[na],fa.array[ha]=Ca.x,fa.array[ha+1]=Ca.y,ha+=2;else if(3===fa.size)if("c"===fa.type)for(na=0;na<Mb;na++)Ca=fa.value[na],fa.array[ha]=Ca.r,fa.array[ha+1]=Ca.g,fa.array[ha+2]=Ca.b,ha+=3;else for(na=0;na<Mb;na++)Ca=fa.value[na],fa.array[ha]=Ca.x,fa.array[ha+1]=Ca.y,fa.array[ha+2]=Ca.z,ha+=3;else if(4===fa.size)for(na=0;na<Mb;na++)Ca=fa.value[na],fa.array[ha]=Ca.x,fa.array[ha+
1]=Ca.y,fa.array[ha+2]=Ca.z,fa.array[ha+3]=Ca.w,ha+=4}}if(Id||Mc.sortParticles)k.bindBuffer(k.ARRAY_BUFFER,cc.__webglVertexBuffer),k.bufferData(k.ARRAY_BUFFER,xc,ud);if(Jd||Mc.sortParticles)k.bindBuffer(k.ARRAY_BUFFER,cc.__webglColorBuffer),k.bufferData(k.ARRAY_BUFFER,yc,ud);if(mc){Lb=0;for(Cc=mc.length;Lb<Cc;Lb++)if(fa=mc[Lb],fa.needsUpdate||Mc.sortParticles)k.bindBuffer(k.ARRAY_BUFFER,fa.buffer),k.bufferData(k.ARRAY_BUFFER,fa.array,ud)}}P.verticesNeedUpdate=!1;P.colorsNeedUpdate=!1;ja.attributes&&
q(ja)}}};this.initMaterial=function(a,b,c,d){var e,f,g,j;a.addEventListener("dispose",Y);var h,q,l,m,n;a instanceof THREE.MeshDepthMaterial?n="depth":a instanceof THREE.MeshNormalMaterial?n="normal":a instanceof THREE.MeshBasicMaterial?n="basic":a instanceof THREE.MeshLambertMaterial?n="lambert":a instanceof THREE.MeshPhongMaterial?n="phong":a instanceof THREE.LineBasicMaterial?n="basic":a instanceof THREE.LineDashedMaterial?n="dashed":a instanceof THREE.ParticleBasicMaterial&&(n="particle_basic");
if(n){var p=THREE.ShaderLib[n];a.uniforms=THREE.UniformsUtils.clone(p.uniforms);a.vertexShader=p.vertexShader;a.fragmentShader=p.fragmentShader}var u,r,A;e=g=r=A=p=0;for(f=b.length;e<f;e++)u=b[e],u.onlyShadow||(u instanceof THREE.DirectionalLight&&g++,u instanceof THREE.PointLight&&r++,u instanceof THREE.SpotLight&&A++,u instanceof THREE.HemisphereLight&&p++);e=g;f=r;g=A;j=p;p=u=0;for(A=b.length;p<A;p++)r=b[p],r.castShadow&&(r instanceof THREE.SpotLight&&u++,r instanceof THREE.DirectionalLight&&!r.shadowCascade&&
u++);m=u;uc&&d&&d.useVertexTexture?l=1024:(b=k.getParameter(k.MAX_VERTEX_UNIFORM_VECTORS),b=Math.floor((b-20)/4),void 0!==d&&d instanceof THREE.SkinnedMesh&&(b=Math.min(d.bones.length,b),b<d.bones.length&&console.warn("WebGLRenderer: too many bones - "+d.bones.length+", this GPU supports just "+b+" (try OpenGL instead of ANGLE)")),l=b);a:{r=a.fragmentShader;A=a.vertexShader;p=a.uniforms;b=a.attributes;u=a.defines;var c={map:!!a.map,envMap:!!a.envMap,lightMap:!!a.lightMap,bumpMap:!!a.bumpMap,normalMap:!!a.normalMap,
specularMap:!!a.specularMap,vertexColors:a.vertexColors,fog:c,useFog:a.fog,fogExp:c instanceof THREE.FogExp2,sizeAttenuation:a.sizeAttenuation,skinning:a.skinning,maxBones:l,useVertexTexture:uc&&d&&d.useVertexTexture,boneTextureWidth:d&&d.boneTextureWidth,boneTextureHeight:d&&d.boneTextureHeight,morphTargets:a.morphTargets,morphNormals:a.morphNormals,maxMorphTargets:this.maxMorphTargets,maxMorphNormals:this.maxMorphNormals,maxDirLights:e,maxPointLights:f,maxSpotLights:g,maxHemiLights:j,maxShadows:m,
shadowMapEnabled:this.shadowMapEnabled&&d.receiveShadow,shadowMapType:this.shadowMapType,shadowMapDebug:this.shadowMapDebug,shadowMapCascade:this.shadowMapCascade,alphaTest:a.alphaTest,metal:a.metal,perPixel:a.perPixel,wrapAround:a.wrapAround,doubleSided:a.side===THREE.DoubleSide,flipSided:a.side===THREE.BackSide},x,s,t,d=[];n?d.push(n):(d.push(r),d.push(A));for(s in u)d.push(s),d.push(u[s]);for(x in c)d.push(x),d.push(c[x]);n=d.join();x=0;for(s=Na.length;x<s;x++)if(d=Na[x],d.code===n){d.usedTimes++;
q=d.program;break a}x="SHADOWMAP_TYPE_BASIC";c.shadowMapType===THREE.PCFShadowMap?x="SHADOWMAP_TYPE_PCF":c.shadowMapType===THREE.PCFSoftShadowMap&&(x="SHADOWMAP_TYPE_PCF_SOFT");s=[];for(t in u)d=u[t],!1!==d&&(d="#define "+t+" "+d,s.push(d));d=s.join("\n");t=k.createProgram();s=["precision "+ga+" float;",d,tc?"#define VERTEX_TEXTURES":"",O.gammaInput?"#define GAMMA_INPUT":"",O.gammaOutput?"#define GAMMA_OUTPUT":"",O.physicallyBasedShading?"#define PHYSICALLY_BASED_SHADING":"","#define MAX_DIR_LIGHTS "+
c.maxDirLights,"#define MAX_POINT_LIGHTS "+c.maxPointLights,"#define MAX_SPOT_LIGHTS "+c.maxSpotLights,"#define MAX_HEMI_LIGHTS "+c.maxHemiLights,"#define MAX_SHADOWS "+c.maxShadows,"#define MAX_BONES "+c.maxBones,c.map?"#define USE_MAP":"",c.envMap?"#define USE_ENVMAP":"",c.lightMap?"#define USE_LIGHTMAP":"",c.bumpMap?"#define USE_BUMPMAP":"",c.normalMap?"#define USE_NORMALMAP":"",c.specularMap?"#define USE_SPECULARMAP":"",c.vertexColors?"#define USE_COLOR":"",c.skinning?"#define USE_SKINNING":"",
c.useVertexTexture?"#define BONE_TEXTURE":"",c.boneTextureWidth?"#define N_BONE_PIXEL_X "+c.boneTextureWidth.toFixed(1):"",c.boneTextureHeight?"#define N_BONE_PIXEL_Y "+c.boneTextureHeight.toFixed(1):"",c.morphTargets?"#define USE_MORPHTARGETS":"",c.morphNormals?"#define USE_MORPHNORMALS":"",c.perPixel?"#define PHONG_PER_PIXEL":"",c.wrapAround?"#define WRAP_AROUND":"",c.doubleSided?"#define DOUBLE_SIDED":"",c.flipSided?"#define FLIP_SIDED":"",c.shadowMapEnabled?"#define USE_SHADOWMAP":"",c.shadowMapEnabled?
"#define "+x:"",c.shadowMapDebug?"#define SHADOWMAP_DEBUG":"",c.shadowMapCascade?"#define SHADOWMAP_CASCADE":"",c.sizeAttenuation?"#define USE_SIZEATTENUATION":"","uniform mat4 modelMatrix;\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform mat4 viewMatrix;\nuniform mat3 normalMatrix;\nuniform vec3 cameraPosition;\nattribute vec3 position;\nattribute vec3 normal;\nattribute vec2 uv;\nattribute vec2 uv2;\n#ifdef USE_COLOR\nattribute vec3 color;\n#endif\n#ifdef USE_MORPHTARGETS\nattribute vec3 morphTarget0;\nattribute vec3 morphTarget1;\nattribute vec3 morphTarget2;\nattribute vec3 morphTarget3;\n#ifdef USE_MORPHNORMALS\nattribute vec3 morphNormal0;\nattribute vec3 morphNormal1;\nattribute vec3 morphNormal2;\nattribute vec3 morphNormal3;\n#else\nattribute vec3 morphTarget4;\nattribute vec3 morphTarget5;\nattribute vec3 morphTarget6;\nattribute vec3 morphTarget7;\n#endif\n#endif\n#ifdef USE_SKINNING\nattribute vec4 skinIndex;\nattribute vec4 skinWeight;\n#endif\n"].join("\n");
x=["precision "+ga+" float;",c.bumpMap||c.normalMap?"#extension GL_OES_standard_derivatives : enable":"",d,"#define MAX_DIR_LIGHTS "+c.maxDirLights,"#define MAX_POINT_LIGHTS "+c.maxPointLights,"#define MAX_SPOT_LIGHTS "+c.maxSpotLights,"#define MAX_HEMI_LIGHTS "+c.maxHemiLights,"#define MAX_SHADOWS "+c.maxShadows,c.alphaTest?"#define ALPHATEST "+c.alphaTest:"",O.gammaInput?"#define GAMMA_INPUT":"",O.gammaOutput?"#define GAMMA_OUTPUT":"",O.physicallyBasedShading?"#define PHYSICALLY_BASED_SHADING":
"",c.useFog&&c.fog?"#define USE_FOG":"",c.useFog&&c.fogExp?"#define FOG_EXP2":"",c.map?"#define USE_MAP":"",c.envMap?"#define USE_ENVMAP":"",c.lightMap?"#define USE_LIGHTMAP":"",c.bumpMap?"#define USE_BUMPMAP":"",c.normalMap?"#define USE_NORMALMAP":"",c.specularMap?"#define USE_SPECULARMAP":"",c.vertexColors?"#define USE_COLOR":"",c.metal?"#define METAL":"",c.perPixel?"#define PHONG_PER_PIXEL":"",c.wrapAround?"#define WRAP_AROUND":"",c.doubleSided?"#define DOUBLE_SIDED":"",c.flipSided?"#define FLIP_SIDED":
"",c.shadowMapEnabled?"#define USE_SHADOWMAP":"",c.shadowMapEnabled?"#define "+x:"",c.shadowMapDebug?"#define SHADOWMAP_DEBUG":"",c.shadowMapCascade?"#define SHADOWMAP_CASCADE":"","uniform mat4 viewMatrix;\nuniform vec3 cameraPosition;\n"].join("\n");x=D("fragment",x+r);s=D("vertex",s+A);k.attachShader(t,s);k.attachShader(t,x);k.linkProgram(t);k.getProgramParameter(t,k.LINK_STATUS)||console.error("Could not initialise shader\nVALIDATE_STATUS: "+k.getProgramParameter(t,k.VALIDATE_STATUS)+", gl error ["+
k.getError()+"]");k.deleteShader(x);k.deleteShader(s);t.uniforms={};t.attributes={};var v;x="viewMatrix modelViewMatrix projectionMatrix normalMatrix modelMatrix cameraPosition morphTargetInfluences".split(" ");c.useVertexTexture?x.push("boneTexture"):x.push("boneGlobalMatrices");for(v in p)x.push(v);v=x;x=0;for(s=v.length;x<s;x++)p=v[x],t.uniforms[p]=k.getUniformLocation(t,p);x="position normal uv uv2 tangent color skinIndex skinWeight lineDistance".split(" ");for(v=0;v<c.maxMorphTargets;v++)x.push("morphTarget"+
v);for(v=0;v<c.maxMorphNormals;v++)x.push("morphNormal"+v);for(q in b)x.push(q);q=x;v=0;for(b=q.length;v<b;v++)x=q[v],t.attributes[x]=k.getAttribLocation(t,x);t.id=Oa++;Na.push({program:t,code:n,usedTimes:1});O.info.memory.programs=Na.length;q=t}a.program=q;v=a.program.attributes;if(a.morphTargets){a.numSupportedMorphTargets=0;b="morphTarget";for(q=0;q<this.maxMorphTargets;q++)t=b+q,0<=v[t]&&a.numSupportedMorphTargets++}if(a.morphNormals){a.numSupportedMorphNormals=0;b="morphNormal";for(q=0;q<this.maxMorphNormals;q++)t=
b+q,0<=v[t]&&a.numSupportedMorphNormals++}a.uniformsList=[];for(h in a.uniforms)a.uniformsList.push([a.uniforms[h],h])};this.setFaceCulling=function(a,b){a===THREE.CullFaceNone?k.disable(k.CULL_FACE):(b===THREE.FrontFaceDirectionCW?k.frontFace(k.CW):k.frontFace(k.CCW),a===THREE.CullFaceBack?k.cullFace(k.BACK):a===THREE.CullFaceFront?k.cullFace(k.FRONT):k.cullFace(k.FRONT_AND_BACK),k.enable(k.CULL_FACE))};this.setMaterialFaces=function(a){var b=a.side===THREE.DoubleSide,a=a.side===THREE.BackSide;ea!==
b&&(b?k.disable(k.CULL_FACE):k.enable(k.CULL_FACE),ea=b);ma!==a&&(a?k.frontFace(k.CW):k.frontFace(k.CCW),ma=a)};this.setDepthTest=function(a){ja!==a&&(a?k.enable(k.DEPTH_TEST):k.disable(k.DEPTH_TEST),ja=a)};this.setDepthWrite=function(a){Xa!==a&&(k.depthMask(a),Xa=a)};this.setBlending=function(a,b,c,d){a!==$&&(a===THREE.NoBlending?k.disable(k.BLEND):a===THREE.AdditiveBlending?(k.enable(k.BLEND),k.blendEquation(k.FUNC_ADD),k.blendFunc(k.SRC_ALPHA,k.ONE)):a===THREE.SubtractiveBlending?(k.enable(k.BLEND),
k.blendEquation(k.FUNC_ADD),k.blendFunc(k.ZERO,k.ONE_MINUS_SRC_COLOR)):a===THREE.MultiplyBlending?(k.enable(k.BLEND),k.blendEquation(k.FUNC_ADD),k.blendFunc(k.ZERO,k.SRC_COLOR)):a===THREE.CustomBlending?k.enable(k.BLEND):(k.enable(k.BLEND),k.blendEquationSeparate(k.FUNC_ADD,k.FUNC_ADD),k.blendFuncSeparate(k.SRC_ALPHA,k.ONE_MINUS_SRC_ALPHA,k.ONE,k.ONE_MINUS_SRC_ALPHA)),$=a);if(a===THREE.CustomBlending){if(b!==pa&&(k.blendEquation(M(b)),pa=b),c!==hb||d!==nb)k.blendFunc(M(c),M(d)),hb=c,nb=d}else nb=
hb=pa=null};this.setTexture=function(a,b){if(a.needsUpdate){a.__webglInit||(a.__webglInit=!0,a.addEventListener("dispose",Pc),a.__webglTexture=k.createTexture(),O.info.memory.textures++);k.activeTexture(k.TEXTURE0+b);k.bindTexture(k.TEXTURE_2D,a.__webglTexture);k.pixelStorei(k.UNPACK_FLIP_Y_WEBGL,a.flipY);k.pixelStorei(k.UNPACK_PREMULTIPLY_ALPHA_WEBGL,a.premultiplyAlpha);k.pixelStorei(k.UNPACK_ALIGNMENT,a.unpackAlignment);var c=a.image,d=0===(c.width&c.width-1)&&0===(c.height&c.height-1),e=M(a.format),
f=M(a.type);X(k.TEXTURE_2D,a,d);var g=a.mipmaps;if(a instanceof THREE.DataTexture)if(0<g.length&&d){for(var j=0,h=g.length;j<h;j++)c=g[j],k.texImage2D(k.TEXTURE_2D,j,e,c.width,c.height,0,e,f,c.data);a.generateMipmaps=!1}else k.texImage2D(k.TEXTURE_2D,0,e,c.width,c.height,0,e,f,c.data);else if(a instanceof THREE.CompressedTexture){j=0;for(h=g.length;j<h;j++)c=g[j],k.compressedTexImage2D(k.TEXTURE_2D,j,e,c.width,c.height,0,c.data)}else if(0<g.length&&d){j=0;for(h=g.length;j<h;j++)c=g[j],k.texImage2D(k.TEXTURE_2D,
j,e,e,f,c);a.generateMipmaps=!1}else k.texImage2D(k.TEXTURE_2D,0,e,e,f,a.image);a.generateMipmaps&&d&&k.generateMipmap(k.TEXTURE_2D);a.needsUpdate=!1;if(a.onUpdate)a.onUpdate()}else k.activeTexture(k.TEXTURE0+b),k.bindTexture(k.TEXTURE_2D,a.__webglTexture)};this.setRenderTarget=function(a){var b=a instanceof THREE.WebGLRenderTargetCube;if(a&&!a.__webglFramebuffer){void 0===a.depthBuffer&&(a.depthBuffer=!0);void 0===a.stencilBuffer&&(a.stencilBuffer=!0);a.addEventListener("dispose",Q);a.__webglTexture=
k.createTexture();O.info.memory.textures++;var c=0===(a.width&a.width-1)&&0===(a.height&a.height-1),d=M(a.format),e=M(a.type);if(b){a.__webglFramebuffer=[];a.__webglRenderbuffer=[];k.bindTexture(k.TEXTURE_CUBE_MAP,a.__webglTexture);X(k.TEXTURE_CUBE_MAP,a,c);for(var f=0;6>f;f++){a.__webglFramebuffer[f]=k.createFramebuffer();a.__webglRenderbuffer[f]=k.createRenderbuffer();k.texImage2D(k.TEXTURE_CUBE_MAP_POSITIVE_X+f,0,d,a.width,a.height,0,d,e,null);var g=a,j=k.TEXTURE_CUBE_MAP_POSITIVE_X+f;k.bindFramebuffer(k.FRAMEBUFFER,
a.__webglFramebuffer[f]);k.framebufferTexture2D(k.FRAMEBUFFER,k.COLOR_ATTACHMENT0,j,g.__webglTexture,0);F(a.__webglRenderbuffer[f],a)}c&&k.generateMipmap(k.TEXTURE_CUBE_MAP)}else a.__webglFramebuffer=k.createFramebuffer(),a.__webglRenderbuffer=a.shareDepthFrom?a.shareDepthFrom.__webglRenderbuffer:k.createRenderbuffer(),k.bindTexture(k.TEXTURE_2D,a.__webglTexture),X(k.TEXTURE_2D,a,c),k.texImage2D(k.TEXTURE_2D,0,d,a.width,a.height,0,d,e,null),d=k.TEXTURE_2D,k.bindFramebuffer(k.FRAMEBUFFER,a.__webglFramebuffer),
k.framebufferTexture2D(k.FRAMEBUFFER,k.COLOR_ATTACHMENT0,d,a.__webglTexture,0),a.shareDepthFrom?a.depthBuffer&&!a.stencilBuffer?k.framebufferRenderbuffer(k.FRAMEBUFFER,k.DEPTH_ATTACHMENT,k.RENDERBUFFER,a.__webglRenderbuffer):a.depthBuffer&&a.stencilBuffer&&k.framebufferRenderbuffer(k.FRAMEBUFFER,k.DEPTH_STENCIL_ATTACHMENT,k.RENDERBUFFER,a.__webglRenderbuffer):F(a.__webglRenderbuffer,a),c&&k.generateMipmap(k.TEXTURE_2D);b?k.bindTexture(k.TEXTURE_CUBE_MAP,null):k.bindTexture(k.TEXTURE_2D,null);k.bindRenderbuffer(k.RENDERBUFFER,
null);k.bindFramebuffer(k.FRAMEBUFFER,null)}a?(b=b?a.__webglFramebuffer[a.activeCubeFace]:a.__webglFramebuffer,c=a.width,a=a.height,e=d=0):(b=null,c=gc,a=Ab,d=Jb,e=Kb);b!==Qa&&(k.bindFramebuffer(k.FRAMEBUFFER,b),k.viewport(d,e,c,a),Qa=b);nc=c;pb=a};this.shadowMapPlugin=new THREE.ShadowMapPlugin;this.addPrePlugin(this.shadowMapPlugin);this.addPostPlugin(new THREE.SpritePlugin);this.addPostPlugin(new THREE.LensFlarePlugin)};
THREE.WebGLRenderTarget=function(a,b,c){THREE.EventDispatcher.call(this);this.width=a;this.height=b;c=c||{};this.wrapS=void 0!==c.wrapS?c.wrapS:THREE.ClampToEdgeWrapping;this.wrapT=void 0!==c.wrapT?c.wrapT:THREE.ClampToEdgeWrapping;this.magFilter=void 0!==c.magFilter?c.magFilter:THREE.LinearFilter;this.minFilter=void 0!==c.minFilter?c.minFilter:THREE.LinearMipMapLinearFilter;this.anisotropy=void 0!==c.anisotropy?c.anisotropy:1;this.offset=new THREE.Vector2(0,0);this.repeat=new THREE.Vector2(1,1);
this.format=void 0!==c.format?c.format:THREE.RGBAFormat;this.type=void 0!==c.type?c.type:THREE.UnsignedByteType;this.depthBuffer=void 0!==c.depthBuffer?c.depthBuffer:!0;this.stencilBuffer=void 0!==c.stencilBuffer?c.stencilBuffer:!0;this.generateMipmaps=!0;this.shareDepthFrom=null};
THREE.WebGLRenderTarget.prototype.clone=function(){var a=new THREE.WebGLRenderTarget(this.width,this.height);a.wrapS=this.wrapS;a.wrapT=this.wrapT;a.magFilter=this.magFilter;a.minFilter=this.minFilter;a.anisotropy=this.anisotropy;a.offset.copy(this.offset);a.repeat.copy(this.repeat);a.format=this.format;a.type=this.type;a.depthBuffer=this.depthBuffer;a.stencilBuffer=this.stencilBuffer;a.generateMipmaps=this.generateMipmaps;a.shareDepthFrom=this.shareDepthFrom;return a};
THREE.WebGLRenderTarget.prototype.dispose=function(){this.dispatchEvent({type:"dispose"})};THREE.WebGLRenderTargetCube=function(a,b,c){THREE.WebGLRenderTarget.call(this,a,b,c);this.activeCubeFace=0};THREE.WebGLRenderTargetCube.prototype=Object.create(THREE.WebGLRenderTarget.prototype);THREE.RenderableVertex=function(){this.positionWorld=new THREE.Vector3;this.positionScreen=new THREE.Vector4;this.visible=!0};
THREE.RenderableVertex.prototype.copy=function(a){this.positionWorld.copy(a.positionWorld);this.positionScreen.copy(a.positionScreen)};
THREE.RenderableFace3=function(){this.v1=new THREE.RenderableVertex;this.v2=new THREE.RenderableVertex;this.v3=new THREE.RenderableVertex;this.centroidModel=new THREE.Vector3;this.normalModel=new THREE.Vector3;this.normalModelView=new THREE.Vector3;this.vertexNormalsLength=0;this.vertexNormalsModel=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3];this.vertexNormalsModelView=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3];this.material=this.color=null;this.uvs=[[]];this.z=null};
THREE.RenderableFace4=function(){this.v1=new THREE.RenderableVertex;this.v2=new THREE.RenderableVertex;this.v3=new THREE.RenderableVertex;this.v4=new THREE.RenderableVertex;this.centroidModel=new THREE.Vector3;this.normalModel=new THREE.Vector3;this.normalModelView=new THREE.Vector3;this.vertexNormalsLength=0;this.vertexNormalsModel=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3];this.vertexNormalsModelView=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3];
this.material=this.color=null;this.uvs=[[]];this.z=null};THREE.RenderableObject=function(){this.z=this.object=null};THREE.RenderableParticle=function(){this.rotation=this.z=this.y=this.x=this.object=null;this.scale=new THREE.Vector2;this.material=null};THREE.RenderableLine=function(){this.z=null;this.v1=new THREE.RenderableVertex;this.v2=new THREE.RenderableVertex;this.material=null};
THREE.GeometryUtils={merge:function(a,b){var c,d,f=a.vertices.length,e=b instanceof THREE.Mesh?b.geometry:b,g=a.vertices,h=e.vertices,j=a.faces,l=e.faces,n=a.faceVertexUvs[0],e=e.faceVertexUvs[0];b instanceof THREE.Mesh&&(b.matrixAutoUpdate&&b.updateMatrix(),c=b.matrix,d=new THREE.Matrix3,d.getInverse(c),d.transpose());for(var r=0,p=h.length;r<p;r++){var s=h[r].clone();c&&s.applyMatrix4(c);g.push(s)}r=0;for(p=l.length;r<p;r++){var s=l[r],t,m,v=s.vertexNormals,B=s.vertexColors;s instanceof THREE.Face3?
t=new THREE.Face3(s.a+f,s.b+f,s.c+f):s instanceof THREE.Face4&&(t=new THREE.Face4(s.a+f,s.b+f,s.c+f,s.d+f));t.normal.copy(s.normal);d&&t.normal.applyMatrix3(d).normalize();g=0;for(h=v.length;g<h;g++)m=v[g].clone(),d&&m.applyMatrix3(d).normalize(),t.vertexNormals.push(m);t.color.copy(s.color);g=0;for(h=B.length;g<h;g++)m=B[g],t.vertexColors.push(m.clone());t.materialIndex=s.materialIndex;t.centroid.copy(s.centroid);c&&t.centroid.applyMatrix4(c);j.push(t)}r=0;for(p=e.length;r<p;r++){c=e[r];d=[];g=0;
for(h=c.length;g<h;g++)d.push(new THREE.Vector2(c[g].x,c[g].y));n.push(d)}},removeMaterials:function(a,b){for(var c={},d=0,f=b.length;d<f;d++)c[b[d]]=!0;for(var e,g=[],d=0,f=a.faces.length;d<f;d++)e=a.faces[d],e.materialIndex in c||g.push(e);a.faces=g},randomPointInTriangle:function(a,b,c){var d,f,e,g=new THREE.Vector3,h=THREE.GeometryUtils.__v1;d=THREE.GeometryUtils.random();f=THREE.GeometryUtils.random();1<d+f&&(d=1-d,f=1-f);e=1-d-f;g.copy(a);g.multiplyScalar(d);h.copy(b);h.multiplyScalar(f);g.add(h);
h.copy(c);h.multiplyScalar(e);g.add(h);return g},randomPointInFace:function(a,b,c){var d,f,e;if(a instanceof THREE.Face3)return d=b.vertices[a.a],f=b.vertices[a.b],e=b.vertices[a.c],THREE.GeometryUtils.randomPointInTriangle(d,f,e);if(a instanceof THREE.Face4){d=b.vertices[a.a];f=b.vertices[a.b];e=b.vertices[a.c];var b=b.vertices[a.d],g;c?a._area1&&a._area2?(c=a._area1,g=a._area2):(c=THREE.GeometryUtils.triangleArea(d,f,b),g=THREE.GeometryUtils.triangleArea(f,e,b),a._area1=c,a._area2=g):(c=THREE.GeometryUtils.triangleArea(d,
f,b),g=THREE.GeometryUtils.triangleArea(f,e,b));return THREE.GeometryUtils.random()*(c+g)<c?THREE.GeometryUtils.randomPointInTriangle(d,f,b):THREE.GeometryUtils.randomPointInTriangle(f,e,b)}},randomPointsInGeometry:function(a,b){function c(a){function b(c,d){if(d<c)return c;var e=c+Math.floor((d-c)/2);return l[e]>a?b(c,e-1):l[e]<a?b(e+1,d):e}return b(0,l.length-1)}var d,f,e=a.faces,g=a.vertices,h=e.length,j=0,l=[],n,r,p,s;for(f=0;f<h;f++)d=e[f],d instanceof THREE.Face3?(n=g[d.a],r=g[d.b],p=g[d.c],
d._area=THREE.GeometryUtils.triangleArea(n,r,p)):d instanceof THREE.Face4&&(n=g[d.a],r=g[d.b],p=g[d.c],s=g[d.d],d._area1=THREE.GeometryUtils.triangleArea(n,r,s),d._area2=THREE.GeometryUtils.triangleArea(r,p,s),d._area=d._area1+d._area2),j+=d._area,l[f]=j;d=[];for(f=0;f<b;f++)g=THREE.GeometryUtils.random()*j,g=c(g),d[f]=THREE.GeometryUtils.randomPointInFace(e[g],a,!0);return d},triangleArea:function(a,b,c){var d=THREE.GeometryUtils.__v1,f=THREE.GeometryUtils.__v2;d.subVectors(b,a);f.subVectors(c,a);
d.cross(f);return 0.5*d.length()},center:function(a){a.computeBoundingBox();var b=a.boundingBox,c=new THREE.Vector3;c.addVectors(b.min,b.max);c.multiplyScalar(-0.5);a.applyMatrix((new THREE.Matrix4).makeTranslation(c.x,c.y,c.z));a.computeBoundingBox();return c},normalizeUVs:function(a){for(var a=a.faceVertexUvs[0],b=0,c=a.length;b<c;b++)for(var d=a[b],f=0,e=d.length;f<e;f++)1!==d[f].x&&(d[f].x-=Math.floor(d[f].x)),1!==d[f].y&&(d[f].y-=Math.floor(d[f].y))},triangulateQuads:function(a){var b,c,d,f,
e=[],g=[],h=[];b=0;for(c=a.faceUvs.length;b<c;b++)g[b]=[];b=0;for(c=a.faceVertexUvs.length;b<c;b++)h[b]=[];b=0;for(c=a.faces.length;b<c;b++)if(d=a.faces[b],d instanceof THREE.Face4){f=d.a;var j=d.b,l=d.c,n=d.d,r=new THREE.Face3,p=new THREE.Face3;r.color.copy(d.color);p.color.copy(d.color);r.materialIndex=d.materialIndex;p.materialIndex=d.materialIndex;r.a=f;r.b=j;r.c=n;p.a=j;p.b=l;p.c=n;4===d.vertexColors.length&&(r.vertexColors[0]=d.vertexColors[0].clone(),r.vertexColors[1]=d.vertexColors[1].clone(),
r.vertexColors[2]=d.vertexColors[3].clone(),p.vertexColors[0]=d.vertexColors[1].clone(),p.vertexColors[1]=d.vertexColors[2].clone(),p.vertexColors[2]=d.vertexColors[3].clone());e.push(r,p);d=0;for(f=a.faceVertexUvs.length;d<f;d++)a.faceVertexUvs[d].length&&(r=a.faceVertexUvs[d][b],j=r[1],l=r[2],n=r[3],r=[r[0].clone(),j.clone(),n.clone()],j=[j.clone(),l.clone(),n.clone()],h[d].push(r,j));d=0;for(f=a.faceUvs.length;d<f;d++)a.faceUvs[d].length&&(j=a.faceUvs[d][b],g[d].push(j,j))}else{e.push(d);d=0;for(f=
a.faceUvs.length;d<f;d++)g[d].push(a.faceUvs[d][b]);d=0;for(f=a.faceVertexUvs.length;d<f;d++)h[d].push(a.faceVertexUvs[d][b])}a.faces=e;a.faceUvs=g;a.faceVertexUvs=h;a.computeCentroids();a.computeFaceNormals();a.computeVertexNormals();a.hasTangents&&a.computeTangents()},setMaterialIndex:function(a,b,c,d){a=a.faces;d=d||a.length-1;for(c=c||0;c<=d;c++)a[c].materialIndex=b}};THREE.GeometryUtils.random=THREE.Math.random16;THREE.GeometryUtils.__v1=new THREE.Vector3;THREE.GeometryUtils.__v2=new THREE.Vector3;
THREE.ImageUtils={crossOrigin:"anonymous",loadTexture:function(a,b,c,d){var f=new Image,e=new THREE.Texture(f,b),b=new THREE.ImageLoader;b.addEventListener("load",function(a){e.image=a.content;e.needsUpdate=!0;c&&c(e)});b.addEventListener("error",function(a){d&&d(a.message)});b.crossOrigin=this.crossOrigin;b.load(a,f);e.sourceFile=a;return e},loadCompressedTexture:function(a,b,c,d){var f=new THREE.CompressedTexture;f.mapping=b;var e=new XMLHttpRequest;e.onload=function(){var a=THREE.ImageUtils.parseDDS(e.response,
!0);f.format=a.format;f.mipmaps=a.mipmaps;f.image.width=a.width;f.image.height=a.height;f.generateMipmaps=!1;f.needsUpdate=!0;c&&c(f)};e.onerror=d;e.open("GET",a,!0);e.responseType="arraybuffer";e.send(null);return f},loadTextureCube:function(a,b,c,d){var f=[];f.loadCount=0;var e=new THREE.Texture;e.image=f;void 0!==b&&(e.mapping=b);e.flipY=!1;for(var b=0,g=a.length;b<g;++b){var h=new Image;f[b]=h;h.onload=function(){f.loadCount+=1;6===f.loadCount&&(e.needsUpdate=!0,c&&c(e))};h.onerror=d;h.crossOrigin=
this.crossOrigin;h.src=a[b]}return e},loadCompressedTextureCube:function(a,b,c,d){var f=[];f.loadCount=0;var e=new THREE.CompressedTexture;e.image=f;void 0!==b&&(e.mapping=b);e.flipY=!1;e.generateMipmaps=!1;b=function(a,b){return function(){var d=THREE.ImageUtils.parseDDS(a.response,!0);b.format=d.format;b.mipmaps=d.mipmaps;b.width=d.width;b.height=d.height;f.loadCount+=1;6===f.loadCount&&(e.format=d.format,e.needsUpdate=!0,c&&c(e))}};if(a instanceof Array)for(var g=0,h=a.length;g<h;++g){var j={};
f[g]=j;var l=new XMLHttpRequest;l.onload=b(l,j);l.onerror=d;j=a[g];l.open("GET",j,!0);l.responseType="arraybuffer";l.send(null)}else l=new XMLHttpRequest,l.onload=function(){var a=THREE.ImageUtils.parseDDS(l.response,!0);if(a.isCubemap){for(var b=a.mipmaps.length/a.mipmapCount,d=0;d<b;d++){f[d]={mipmaps:[]};for(var g=0;g<a.mipmapCount;g++)f[d].mipmaps.push(a.mipmaps[d*a.mipmapCount+g]),f[d].format=a.format,f[d].width=a.width,f[d].height=a.height}e.format=a.format;e.needsUpdate=!0;c&&c(e)}},l.onerror=
d,l.open("GET",a,!0),l.responseType="arraybuffer",l.send(null);return e},parseDDS:function(a,b){function c(a){return a.charCodeAt(0)+(a.charCodeAt(1)<<8)+(a.charCodeAt(2)<<16)+(a.charCodeAt(3)<<24)}var d={mipmaps:[],width:0,height:0,format:null,mipmapCount:1},f=c("DXT1"),e=c("DXT3"),g=c("DXT5"),h=new Int32Array(a,0,31);if(542327876!==h[0])return console.error("ImageUtils.parseDDS(): Invalid magic number in DDS header"),d;if(!h[20]&4)return console.error("ImageUtils.parseDDS(): Unsupported format, must contain a FourCC code"),
d;var j=h[21];switch(j){case f:f=8;d.format=THREE.RGB_S3TC_DXT1_Format;break;case e:f=16;d.format=THREE.RGBA_S3TC_DXT3_Format;break;case g:f=16;d.format=THREE.RGBA_S3TC_DXT5_Format;break;default:return console.error("ImageUtils.parseDDS(): Unsupported FourCC code: ",String.fromCharCode(j&255,j>>8&255,j>>16&255,j>>24&255)),d}d.mipmapCount=1;h[2]&131072&&!1!==b&&(d.mipmapCount=Math.max(1,h[7]));d.isCubemap=h[28]&512?!0:!1;d.width=h[4];d.height=h[3];for(var h=h[1]+4,e=d.width,g=d.height,j=d.isCubemap?
6:1,l=0;l<j;l++){for(var n=0;n<d.mipmapCount;n++){var r=Math.max(4,e)/4*Math.max(4,g)/4*f,p={data:new Uint8Array(a,h,r),width:e,height:g};d.mipmaps.push(p);h+=r;e=Math.max(0.5*e,1);g=Math.max(0.5*g,1)}e=d.width;g=d.height}return d},getNormalMap:function(a,b){var c=function(a){var b=Math.sqrt(a[0]*a[0]+a[1]*a[1]+a[2]*a[2]);return[a[0]/b,a[1]/b,a[2]/b]},b=b|1,d=a.width,f=a.height,e=document.createElement("canvas");e.width=d;e.height=f;var g=e.getContext("2d");g.drawImage(a,0,0);for(var h=g.getImageData(0,
0,d,f).data,j=g.createImageData(d,f),l=j.data,n=0;n<d;n++)for(var r=0;r<f;r++){var p=0>r-1?0:r-1,s=r+1>f-1?f-1:r+1,t=0>n-1?0:n-1,m=n+1>d-1?d-1:n+1,v=[],B=[0,0,h[4*(r*d+n)]/255*b];v.push([-1,0,h[4*(r*d+t)]/255*b]);v.push([-1,-1,h[4*(p*d+t)]/255*b]);v.push([0,-1,h[4*(p*d+n)]/255*b]);v.push([1,-1,h[4*(p*d+m)]/255*b]);v.push([1,0,h[4*(r*d+m)]/255*b]);v.push([1,1,h[4*(s*d+m)]/255*b]);v.push([0,1,h[4*(s*d+n)]/255*b]);v.push([-1,1,h[4*(s*d+t)]/255*b]);p=[];t=v.length;for(s=0;s<t;s++){var m=v[s],q=v[(s+1)%
t],m=[m[0]-B[0],m[1]-B[1],m[2]-B[2]],q=[q[0]-B[0],q[1]-B[1],q[2]-B[2]];p.push(c([m[1]*q[2]-m[2]*q[1],m[2]*q[0]-m[0]*q[2],m[0]*q[1]-m[1]*q[0]]))}v=[0,0,0];for(s=0;s<p.length;s++)v[0]+=p[s][0],v[1]+=p[s][1],v[2]+=p[s][2];v[0]/=p.length;v[1]/=p.length;v[2]/=p.length;B=4*(r*d+n);l[B]=255*((v[0]+1)/2)|0;l[B+1]=255*((v[1]+1)/2)|0;l[B+2]=255*v[2]|0;l[B+3]=255}g.putImageData(j,0,0);return e},generateDataTexture:function(a,b,c){for(var d=a*b,f=new Uint8Array(3*d),e=Math.floor(255*c.r),g=Math.floor(255*c.g),
c=Math.floor(255*c.b),h=0;h<d;h++)f[3*h]=e,f[3*h+1]=g,f[3*h+2]=c;a=new THREE.DataTexture(f,a,b,THREE.RGBFormat);a.needsUpdate=!0;return a}};THREE.SceneUtils={createMultiMaterialObject:function(a,b){for(var c=new THREE.Object3D,d=0,f=b.length;d<f;d++)c.add(new THREE.Mesh(a,b[d]));return c},detach:function(a,b,c){a.applyMatrix(b.matrixWorld);b.remove(a);c.add(a)},attach:function(a,b,c){var d=new THREE.Matrix4;d.getInverse(c.matrixWorld);a.applyMatrix(d);b.remove(a);c.add(a)}};
THREE.FontUtils={faces:{},face:"helvetiker",weight:"normal",style:"normal",size:150,divisions:10,getFace:function(){return this.faces[this.face][this.weight][this.style]},loadFace:function(a){var b=a.familyName.toLowerCase();this.faces[b]=this.faces[b]||{};this.faces[b][a.cssFontWeight]=this.faces[b][a.cssFontWeight]||{};this.faces[b][a.cssFontWeight][a.cssFontStyle]=a;return this.faces[b][a.cssFontWeight][a.cssFontStyle]=a},drawText:function(a){for(var b=this.getFace(),c=this.size/b.resolution,d=
0,f=String(a).split(""),e=f.length,g=[],a=0;a<e;a++){var h=new THREE.Path,h=this.extractGlyphPoints(f[a],b,c,d,h),d=d+h.offset;g.push(h.path)}return{paths:g,offset:d/2}},extractGlyphPoints:function(a,b,c,d,f){var e=[],g,h,j,l,n,r,p,s,t,m,v,B=b.glyphs[a]||b.glyphs["?"];if(B){if(B.o){b=B._cachedOutline||(B._cachedOutline=B.o.split(" "));l=b.length;for(a=0;a<l;)switch(j=b[a++],j){case "m":j=b[a++]*c+d;n=b[a++]*c;f.moveTo(j,n);break;case "l":j=b[a++]*c+d;n=b[a++]*c;f.lineTo(j,n);break;case "q":j=b[a++]*
c+d;n=b[a++]*c;s=b[a++]*c+d;t=b[a++]*c;f.quadraticCurveTo(s,t,j,n);if(g=e[e.length-1]){r=g.x;p=g.y;g=1;for(h=this.divisions;g<=h;g++){var q=g/h;THREE.Shape.Utils.b2(q,r,s,j);THREE.Shape.Utils.b2(q,p,t,n)}}break;case "b":if(j=b[a++]*c+d,n=b[a++]*c,s=b[a++]*c+d,t=b[a++]*-c,m=b[a++]*c+d,v=b[a++]*-c,f.bezierCurveTo(j,n,s,t,m,v),g=e[e.length-1]){r=g.x;p=g.y;g=1;for(h=this.divisions;g<=h;g++)q=g/h,THREE.Shape.Utils.b3(q,r,s,m,j),THREE.Shape.Utils.b3(q,p,t,v,n)}}}return{offset:B.ha*c,path:f}}}};
THREE.FontUtils.generateShapes=function(a,b){var b=b||{},c=void 0!==b.curveSegments?b.curveSegments:4,d=void 0!==b.font?b.font:"helvetiker",f=void 0!==b.weight?b.weight:"normal",e=void 0!==b.style?b.style:"normal";THREE.FontUtils.size=void 0!==b.size?b.size:100;THREE.FontUtils.divisions=c;THREE.FontUtils.face=d;THREE.FontUtils.weight=f;THREE.FontUtils.style=e;c=THREE.FontUtils.drawText(a).paths;d=[];f=0;for(e=c.length;f<e;f++)Array.prototype.push.apply(d,c[f].toShapes());return d};
(function(a){var b=function(a){for(var b=a.length,f=0,e=b-1,g=0;g<b;e=g++)f+=a[e].x*a[g].y-a[g].x*a[e].y;return 0.5*f};a.Triangulate=function(a,d){var f=a.length;if(3>f)return null;var e=[],g=[],h=[],j,l,n;if(0<b(a))for(l=0;l<f;l++)g[l]=l;else for(l=0;l<f;l++)g[l]=f-1-l;var r=2*f;for(l=f-1;2<f;){if(0>=r--){console.log("Warning, unable to triangulate polygon!");break}j=l;f<=j&&(j=0);l=j+1;f<=l&&(l=0);n=l+1;f<=n&&(n=0);var p;a:{var s=void 0,t=void 0,m=void 0,v=void 0,B=void 0,q=void 0,A=void 0,u=void 0,
s=a[g[j]].x,t=a[g[j]].y,m=a[g[l]].x,v=a[g[l]].y,B=a[g[n]].x,q=a[g[n]].y;if(1E-10>(m-s)*(q-t)-(v-t)*(B-s))p=!1;else{var x=void 0,I=void 0,C=void 0,z=void 0,J=void 0,K=void 0,G=void 0,H=void 0,D=void 0,X=void 0,D=H=G=u=A=void 0,x=B-m,I=q-v,C=s-B,z=t-q,J=m-s,K=v-t;for(p=0;p<f;p++)if(!(p===j||p===l||p===n))if(A=a[g[p]].x,u=a[g[p]].y,G=A-s,H=u-t,D=A-m,X=u-v,A-=B,u-=q,D=x*X-I*D,G=J*H-K*G,H=C*u-z*A,0<=D&&0<=H&&0<=G){p=!1;break a}p=!0}}if(p){e.push([a[g[j]],a[g[l]],a[g[n]]]);h.push([g[j],g[l],g[n]]);j=l;
for(n=l+1;n<f;j++,n++)g[j]=g[n];f--;r=2*f}}return d?h:e};a.Triangulate.area=b;return a})(THREE.FontUtils);self._typeface_js={faces:THREE.FontUtils.faces,loadFace:THREE.FontUtils.loadFace};THREE.Curve=function(){};THREE.Curve.prototype.getPoint=function(){console.log("Warning, getPoint() not implemented!");return null};THREE.Curve.prototype.getPointAt=function(a){a=this.getUtoTmapping(a);return this.getPoint(a)};
THREE.Curve.prototype.getPoints=function(a){a||(a=5);var b,c=[];for(b=0;b<=a;b++)c.push(this.getPoint(b/a));return c};THREE.Curve.prototype.getSpacedPoints=function(a){a||(a=5);var b,c=[];for(b=0;b<=a;b++)c.push(this.getPointAt(b/a));return c};THREE.Curve.prototype.getLength=function(){var a=this.getLengths();return a[a.length-1]};
THREE.Curve.prototype.getLengths=function(a){a||(a=this.__arcLengthDivisions?this.__arcLengthDivisions:200);if(this.cacheArcLengths&&this.cacheArcLengths.length==a+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;var b=[],c,d=this.getPoint(0),f,e=0;b.push(0);for(f=1;f<=a;f++)c=this.getPoint(f/a),e+=c.distanceTo(d),b.push(e),d=c;return this.cacheArcLengths=b};THREE.Curve.prototype.updateArcLengths=function(){this.needsUpdate=!0;this.getLengths()};
THREE.Curve.prototype.getUtoTmapping=function(a,b){var c=this.getLengths(),d=0,f=c.length,e;e=b?b:a*c[f-1];for(var g=0,h=f-1,j;g<=h;)if(d=Math.floor(g+(h-g)/2),j=c[d]-e,0>j)g=d+1;else if(0<j)h=d-1;else{h=d;break}d=h;if(c[d]==e)return d/(f-1);g=c[d];return(d+(e-g)/(c[d+1]-g))/(f-1)};THREE.Curve.prototype.getTangent=function(a){var b=a-1E-4,a=a+1E-4;0>b&&(b=0);1<a&&(a=1);b=this.getPoint(b);return this.getPoint(a).clone().sub(b).normalize()};
THREE.Curve.prototype.getTangentAt=function(a){a=this.getUtoTmapping(a);return this.getTangent(a)};THREE.LineCurve=function(a,b){this.v1=a;this.v2=b};THREE.LineCurve.prototype=Object.create(THREE.Curve.prototype);THREE.LineCurve.prototype.getPoint=function(a){var b=this.v2.clone().sub(this.v1);b.multiplyScalar(a).add(this.v1);return b};THREE.LineCurve.prototype.getPointAt=function(a){return this.getPoint(a)};THREE.LineCurve.prototype.getTangent=function(){return this.v2.clone().sub(this.v1).normalize()};
THREE.QuadraticBezierCurve=function(a,b,c){this.v0=a;this.v1=b;this.v2=c};THREE.QuadraticBezierCurve.prototype=Object.create(THREE.Curve.prototype);THREE.QuadraticBezierCurve.prototype.getPoint=function(a){var b;b=THREE.Shape.Utils.b2(a,this.v0.x,this.v1.x,this.v2.x);a=THREE.Shape.Utils.b2(a,this.v0.y,this.v1.y,this.v2.y);return new THREE.Vector2(b,a)};
THREE.QuadraticBezierCurve.prototype.getTangent=function(a){var b;b=THREE.Curve.Utils.tangentQuadraticBezier(a,this.v0.x,this.v1.x,this.v2.x);a=THREE.Curve.Utils.tangentQuadraticBezier(a,this.v0.y,this.v1.y,this.v2.y);b=new THREE.Vector2(b,a);b.normalize();return b};THREE.CubicBezierCurve=function(a,b,c,d){this.v0=a;this.v1=b;this.v2=c;this.v3=d};THREE.CubicBezierCurve.prototype=Object.create(THREE.Curve.prototype);
THREE.CubicBezierCurve.prototype.getPoint=function(a){var b;b=THREE.Shape.Utils.b3(a,this.v0.x,this.v1.x,this.v2.x,this.v3.x);a=THREE.Shape.Utils.b3(a,this.v0.y,this.v1.y,this.v2.y,this.v3.y);return new THREE.Vector2(b,a)};THREE.CubicBezierCurve.prototype.getTangent=function(a){var b;b=THREE.Curve.Utils.tangentCubicBezier(a,this.v0.x,this.v1.x,this.v2.x,this.v3.x);a=THREE.Curve.Utils.tangentCubicBezier(a,this.v0.y,this.v1.y,this.v2.y,this.v3.y);b=new THREE.Vector2(b,a);b.normalize();return b};
THREE.SplineCurve=function(a){this.points=void 0==a?[]:a};THREE.SplineCurve.prototype=Object.create(THREE.Curve.prototype);THREE.SplineCurve.prototype.getPoint=function(a){var b=new THREE.Vector2,c=[],d=this.points,f;f=(d.length-1)*a;a=Math.floor(f);f-=a;c[0]=0==a?a:a-1;c[1]=a;c[2]=a>d.length-2?d.length-1:a+1;c[3]=a>d.length-3?d.length-1:a+2;b.x=THREE.Curve.Utils.interpolate(d[c[0]].x,d[c[1]].x,d[c[2]].x,d[c[3]].x,f);b.y=THREE.Curve.Utils.interpolate(d[c[0]].y,d[c[1]].y,d[c[2]].y,d[c[3]].y,f);return b};
THREE.EllipseCurve=function(a,b,c,d,f,e,g){this.aX=a;this.aY=b;this.xRadius=c;this.yRadius=d;this.aStartAngle=f;this.aEndAngle=e;this.aClockwise=g};THREE.EllipseCurve.prototype=Object.create(THREE.Curve.prototype);THREE.EllipseCurve.prototype.getPoint=function(a){var b=this.aEndAngle-this.aStartAngle;this.aClockwise||(a=1-a);b=this.aStartAngle+a*b;a=this.aX+this.xRadius*Math.cos(b);b=this.aY+this.yRadius*Math.sin(b);return new THREE.Vector2(a,b)};
THREE.ArcCurve=function(a,b,c,d,f,e){THREE.EllipseCurve.call(this,a,b,c,c,d,f,e)};THREE.ArcCurve.prototype=Object.create(THREE.EllipseCurve.prototype);
THREE.Curve.Utils={tangentQuadraticBezier:function(a,b,c,d){return 2*(1-a)*(c-b)+2*a*(d-c)},tangentCubicBezier:function(a,b,c,d,f){return-3*b*(1-a)*(1-a)+3*c*(1-a)*(1-a)-6*a*c*(1-a)+6*a*d*(1-a)-3*a*a*d+3*a*a*f},tangentSpline:function(a){return 6*a*a-6*a+(3*a*a-4*a+1)+(-6*a*a+6*a)+(3*a*a-2*a)},interpolate:function(a,b,c,d,f){var a=0.5*(c-a),d=0.5*(d-b),e=f*f;return(2*b-2*c+a+d)*f*e+(-3*b+3*c-2*a-d)*e+a*f+b}};
THREE.Curve.create=function(a,b){a.prototype=Object.create(THREE.Curve.prototype);a.prototype.getPoint=b;return a};THREE.LineCurve3=THREE.Curve.create(function(a,b){this.v1=a;this.v2=b},function(a){var b=new THREE.Vector3;b.subVectors(this.v2,this.v1);b.multiplyScalar(a);b.add(this.v1);return b});
THREE.QuadraticBezierCurve3=THREE.Curve.create(function(a,b,c){this.v0=a;this.v1=b;this.v2=c},function(a){var b,c;b=THREE.Shape.Utils.b2(a,this.v0.x,this.v1.x,this.v2.x);c=THREE.Shape.Utils.b2(a,this.v0.y,this.v1.y,this.v2.y);a=THREE.Shape.Utils.b2(a,this.v0.z,this.v1.z,this.v2.z);return new THREE.Vector3(b,c,a)});
THREE.CubicBezierCurve3=THREE.Curve.create(function(a,b,c,d){this.v0=a;this.v1=b;this.v2=c;this.v3=d},function(a){var b,c;b=THREE.Shape.Utils.b3(a,this.v0.x,this.v1.x,this.v2.x,this.v3.x);c=THREE.Shape.Utils.b3(a,this.v0.y,this.v1.y,this.v2.y,this.v3.y);a=THREE.Shape.Utils.b3(a,this.v0.z,this.v1.z,this.v2.z,this.v3.z);return new THREE.Vector3(b,c,a)});
THREE.SplineCurve3=THREE.Curve.create(function(a){this.points=void 0==a?[]:a},function(a){var b=new THREE.Vector3,c=[],d=this.points,f,a=(d.length-1)*a;f=Math.floor(a);a-=f;c[0]=0==f?f:f-1;c[1]=f;c[2]=f>d.length-2?d.length-1:f+1;c[3]=f>d.length-3?d.length-1:f+2;f=d[c[0]];var e=d[c[1]],g=d[c[2]],c=d[c[3]];b.x=THREE.Curve.Utils.interpolate(f.x,e.x,g.x,c.x,a);b.y=THREE.Curve.Utils.interpolate(f.y,e.y,g.y,c.y,a);b.z=THREE.Curve.Utils.interpolate(f.z,e.z,g.z,c.z,a);return b});
THREE.ClosedSplineCurve3=THREE.Curve.create(function(a){this.points=void 0==a?[]:a},function(a){var b=new THREE.Vector3,c=[],d=this.points,f;f=(d.length-0)*a;a=Math.floor(f);f-=a;a+=0<a?0:(Math.floor(Math.abs(a)/d.length)+1)*d.length;c[0]=(a-1)%d.length;c[1]=a%d.length;c[2]=(a+1)%d.length;c[3]=(a+2)%d.length;b.x=THREE.Curve.Utils.interpolate(d[c[0]].x,d[c[1]].x,d[c[2]].x,d[c[3]].x,f);b.y=THREE.Curve.Utils.interpolate(d[c[0]].y,d[c[1]].y,d[c[2]].y,d[c[3]].y,f);b.z=THREE.Curve.Utils.interpolate(d[c[0]].z,
d[c[1]].z,d[c[2]].z,d[c[3]].z,f);return b});THREE.CurvePath=function(){this.curves=[];this.bends=[];this.autoClose=!1};THREE.CurvePath.prototype=Object.create(THREE.Curve.prototype);THREE.CurvePath.prototype.add=function(a){this.curves.push(a)};THREE.CurvePath.prototype.checkConnection=function(){};THREE.CurvePath.prototype.closePath=function(){var a=this.curves[0].getPoint(0),b=this.curves[this.curves.length-1].getPoint(1);a.equals(b)||this.curves.push(new THREE.LineCurve(b,a))};
THREE.CurvePath.prototype.getPoint=function(a){for(var b=a*this.getLength(),c=this.getCurveLengths(),a=0;a<c.length;){if(c[a]>=b)return b=c[a]-b,a=this.curves[a],b=1-b/a.getLength(),a.getPointAt(b);a++}return null};THREE.CurvePath.prototype.getLength=function(){var a=this.getCurveLengths();return a[a.length-1]};
THREE.CurvePath.prototype.getCurveLengths=function(){if(this.cacheLengths&&this.cacheLengths.length==this.curves.length)return this.cacheLengths;var a=[],b=0,c,d=this.curves.length;for(c=0;c<d;c++)b+=this.curves[c].getLength(),a.push(b);return this.cacheLengths=a};
THREE.CurvePath.prototype.getBoundingBox=function(){var a=this.getPoints(),b,c,d,f,e,g;b=c=Number.NEGATIVE_INFINITY;f=e=Number.POSITIVE_INFINITY;var h,j,l,n,r=a[0]instanceof THREE.Vector3;n=r?new THREE.Vector3:new THREE.Vector2;j=0;for(l=a.length;j<l;j++)h=a[j],h.x>b?b=h.x:h.x<f&&(f=h.x),h.y>c?c=h.y:h.y<e&&(e=h.y),r&&(h.z>d?d=h.z:h.z<g&&(g=h.z)),n.add(h);a={minX:f,minY:e,maxX:b,maxY:c,centroid:n.divideScalar(l)};r&&(a.maxZ=d,a.minZ=g);return a};
THREE.CurvePath.prototype.createPointsGeometry=function(a){a=this.getPoints(a,!0);return this.createGeometry(a)};THREE.CurvePath.prototype.createSpacedPointsGeometry=function(a){a=this.getSpacedPoints(a,!0);return this.createGeometry(a)};THREE.CurvePath.prototype.createGeometry=function(a){for(var b=new THREE.Geometry,c=0;c<a.length;c++)b.vertices.push(new THREE.Vector3(a[c].x,a[c].y,a[c].z||0));return b};THREE.CurvePath.prototype.addWrapPath=function(a){this.bends.push(a)};
THREE.CurvePath.prototype.getTransformedPoints=function(a,b){var c=this.getPoints(a),d,f;b||(b=this.bends);d=0;for(f=b.length;d<f;d++)c=this.getWrapPoints(c,b[d]);return c};THREE.CurvePath.prototype.getTransformedSpacedPoints=function(a,b){var c=this.getSpacedPoints(a),d,f;b||(b=this.bends);d=0;for(f=b.length;d<f;d++)c=this.getWrapPoints(c,b[d]);return c};
THREE.CurvePath.prototype.getWrapPoints=function(a,b){var c=this.getBoundingBox(),d,f,e,g,h,j;d=0;for(f=a.length;d<f;d++)e=a[d],g=e.x,h=e.y,j=g/c.maxX,j=b.getUtoTmapping(j,g),g=b.getPoint(j),h=b.getNormalVector(j).multiplyScalar(h),e.x=g.x+h.x,e.y=g.y+h.y;return a};THREE.Gyroscope=function(){THREE.Object3D.call(this)};THREE.Gyroscope.prototype=Object.create(THREE.Object3D.prototype);
THREE.Gyroscope.prototype.updateMatrixWorld=function(a){this.matrixAutoUpdate&&this.updateMatrix();if(this.matrixWorldNeedsUpdate||a)this.parent?(this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorld.decompose(this.translationWorld,this.rotationWorld,this.scaleWorld),this.matrix.decompose(this.translationObject,this.rotationObject,this.scaleObject),this.matrixWorld.compose(this.translationWorld,this.rotationObject,this.scaleWorld)):this.matrixWorld.copy(this.matrix),
this.matrixWorldNeedsUpdate=!1,a=!0;for(var b=0,c=this.children.length;b<c;b++)this.children[b].updateMatrixWorld(a)};THREE.Gyroscope.prototype.translationWorld=new THREE.Vector3;THREE.Gyroscope.prototype.translationObject=new THREE.Vector3;THREE.Gyroscope.prototype.rotationWorld=new THREE.Quaternion;THREE.Gyroscope.prototype.rotationObject=new THREE.Quaternion;THREE.Gyroscope.prototype.scaleWorld=new THREE.Vector3;THREE.Gyroscope.prototype.scaleObject=new THREE.Vector3;
THREE.Path=function(a){THREE.CurvePath.call(this);this.actions=[];a&&this.fromPoints(a)};THREE.Path.prototype=Object.create(THREE.CurvePath.prototype);THREE.PathActions={MOVE_TO:"moveTo",LINE_TO:"lineTo",QUADRATIC_CURVE_TO:"quadraticCurveTo",BEZIER_CURVE_TO:"bezierCurveTo",CSPLINE_THRU:"splineThru",ARC:"arc",ELLIPSE:"ellipse"};THREE.Path.prototype.fromPoints=function(a){this.moveTo(a[0].x,a[0].y);for(var b=1,c=a.length;b<c;b++)this.lineTo(a[b].x,a[b].y)};
THREE.Path.prototype.moveTo=function(a,b){var c=Array.prototype.slice.call(arguments);this.actions.push({action:THREE.PathActions.MOVE_TO,args:c})};THREE.Path.prototype.lineTo=function(a,b){var c=Array.prototype.slice.call(arguments),d=this.actions[this.actions.length-1].args,d=new THREE.LineCurve(new THREE.Vector2(d[d.length-2],d[d.length-1]),new THREE.Vector2(a,b));this.curves.push(d);this.actions.push({action:THREE.PathActions.LINE_TO,args:c})};
THREE.Path.prototype.quadraticCurveTo=function(a,b,c,d){var f=Array.prototype.slice.call(arguments),e=this.actions[this.actions.length-1].args,e=new THREE.QuadraticBezierCurve(new THREE.Vector2(e[e.length-2],e[e.length-1]),new THREE.Vector2(a,b),new THREE.Vector2(c,d));this.curves.push(e);this.actions.push({action:THREE.PathActions.QUADRATIC_CURVE_TO,args:f})};
THREE.Path.prototype.bezierCurveTo=function(a,b,c,d,f,e){var g=Array.prototype.slice.call(arguments),h=this.actions[this.actions.length-1].args,h=new THREE.CubicBezierCurve(new THREE.Vector2(h[h.length-2],h[h.length-1]),new THREE.Vector2(a,b),new THREE.Vector2(c,d),new THREE.Vector2(f,e));this.curves.push(h);this.actions.push({action:THREE.PathActions.BEZIER_CURVE_TO,args:g})};
THREE.Path.prototype.splineThru=function(a){var b=Array.prototype.slice.call(arguments),c=this.actions[this.actions.length-1].args,c=[new THREE.Vector2(c[c.length-2],c[c.length-1])];Array.prototype.push.apply(c,a);c=new THREE.SplineCurve(c);this.curves.push(c);this.actions.push({action:THREE.PathActions.CSPLINE_THRU,args:b})};THREE.Path.prototype.arc=function(a,b,c,d,f,e){var g=this.actions[this.actions.length-1].args;this.absarc(a+g[g.length-2],b+g[g.length-1],c,d,f,e)};
THREE.Path.prototype.absarc=function(a,b,c,d,f,e){this.absellipse(a,b,c,c,d,f,e)};THREE.Path.prototype.ellipse=function(a,b,c,d,f,e,g){var h=this.actions[this.actions.length-1].args;this.absellipse(a+h[h.length-2],b+h[h.length-1],c,d,f,e,g)};THREE.Path.prototype.absellipse=function(a,b,c,d,f,e,g){var h=Array.prototype.slice.call(arguments),j=new THREE.EllipseCurve(a,b,c,d,f,e,g);this.curves.push(j);j=j.getPoint(g?1:0);h.push(j.x);h.push(j.y);this.actions.push({action:THREE.PathActions.ELLIPSE,args:h})};
THREE.Path.prototype.getSpacedPoints=function(a){a||(a=40);for(var b=[],c=0;c<a;c++)b.push(this.getPoint(c/a));return b};
THREE.Path.prototype.getPoints=function(a,b){if(this.useSpacedPoints)return console.log("tata"),this.getSpacedPoints(a,b);var a=a||12,c=[],d,f,e,g,h,j,l,n,r,p,s,t,m;d=0;for(f=this.actions.length;d<f;d++)switch(e=this.actions[d],g=e.action,e=e.args,g){case THREE.PathActions.MOVE_TO:c.push(new THREE.Vector2(e[0],e[1]));break;case THREE.PathActions.LINE_TO:c.push(new THREE.Vector2(e[0],e[1]));break;case THREE.PathActions.QUADRATIC_CURVE_TO:h=e[2];j=e[3];r=e[0];p=e[1];0<c.length?(g=c[c.length-1],s=g.x,
t=g.y):(g=this.actions[d-1].args,s=g[g.length-2],t=g[g.length-1]);for(e=1;e<=a;e++)m=e/a,g=THREE.Shape.Utils.b2(m,s,r,h),m=THREE.Shape.Utils.b2(m,t,p,j),c.push(new THREE.Vector2(g,m));break;case THREE.PathActions.BEZIER_CURVE_TO:h=e[4];j=e[5];r=e[0];p=e[1];l=e[2];n=e[3];0<c.length?(g=c[c.length-1],s=g.x,t=g.y):(g=this.actions[d-1].args,s=g[g.length-2],t=g[g.length-1]);for(e=1;e<=a;e++)m=e/a,g=THREE.Shape.Utils.b3(m,s,r,l,h),m=THREE.Shape.Utils.b3(m,t,p,n,j),c.push(new THREE.Vector2(g,m));break;case THREE.PathActions.CSPLINE_THRU:g=
this.actions[d-1].args;m=[new THREE.Vector2(g[g.length-2],g[g.length-1])];g=a*e[0].length;m=m.concat(e[0]);m=new THREE.SplineCurve(m);for(e=1;e<=g;e++)c.push(m.getPointAt(e/g));break;case THREE.PathActions.ARC:h=e[0];j=e[1];p=e[2];l=e[3];g=e[4];r=!!e[5];s=g-l;t=2*a;for(e=1;e<=t;e++)m=e/t,r||(m=1-m),m=l+m*s,g=h+p*Math.cos(m),m=j+p*Math.sin(m),c.push(new THREE.Vector2(g,m));break;case THREE.PathActions.ELLIPSE:h=e[0];j=e[1];p=e[2];n=e[3];l=e[4];g=e[5];r=!!e[6];s=g-l;t=2*a;for(e=1;e<=t;e++)m=e/t,r||
(m=1-m),m=l+m*s,g=h+p*Math.cos(m),m=j+n*Math.sin(m),c.push(new THREE.Vector2(g,m))}d=c[c.length-1];1E-10>Math.abs(d.x-c[0].x)&&1E-10>Math.abs(d.y-c[0].y)&&c.splice(c.length-1,1);b&&c.push(c[0]);return c};
THREE.Path.prototype.toShapes=function(){var a,b,c,d,f=[],e=new THREE.Path;a=0;for(b=this.actions.length;a<b;a++)c=this.actions[a],d=c.args,c=c.action,c==THREE.PathActions.MOVE_TO&&0!=e.actions.length&&(f.push(e),e=new THREE.Path),e[c].apply(e,d);0!=e.actions.length&&f.push(e);if(0==f.length)return[];var g;d=[];a=!THREE.Shape.Utils.isClockWise(f[0].getPoints());if(1==f.length)return e=f[0],g=new THREE.Shape,g.actions=e.actions,g.curves=e.curves,d.push(g),d;if(a){g=new THREE.Shape;a=0;for(b=f.length;a<
b;a++)e=f[a],THREE.Shape.Utils.isClockWise(e.getPoints())?(g.actions=e.actions,g.curves=e.curves,d.push(g),g=new THREE.Shape):g.holes.push(e)}else{a=0;for(b=f.length;a<b;a++)e=f[a],THREE.Shape.Utils.isClockWise(e.getPoints())?(g&&d.push(g),g=new THREE.Shape,g.actions=e.actions,g.curves=e.curves):g.holes.push(e);d.push(g)}return d};THREE.Shape=function(){THREE.Path.apply(this,arguments);this.holes=[]};THREE.Shape.prototype=Object.create(THREE.Path.prototype);
THREE.Shape.prototype.extrude=function(a){return new THREE.ExtrudeGeometry(this,a)};THREE.Shape.prototype.makeGeometry=function(a){return new THREE.ShapeGeometry(this,a)};THREE.Shape.prototype.getPointsHoles=function(a){var b,c=this.holes.length,d=[];for(b=0;b<c;b++)d[b]=this.holes[b].getTransformedPoints(a,this.bends);return d};THREE.Shape.prototype.getSpacedPointsHoles=function(a){var b,c=this.holes.length,d=[];for(b=0;b<c;b++)d[b]=this.holes[b].getTransformedSpacedPoints(a,this.bends);return d};
THREE.Shape.prototype.extractAllPoints=function(a){return{shape:this.getTransformedPoints(a),holes:this.getPointsHoles(a)}};THREE.Shape.prototype.extractPoints=function(a){return this.useSpacedPoints?this.extractAllSpacedPoints(a):this.extractAllPoints(a)};THREE.Shape.prototype.extractAllSpacedPoints=function(a){return{shape:this.getTransformedSpacedPoints(a),holes:this.getSpacedPointsHoles(a)}};
THREE.Shape.Utils={removeHoles:function(a,b){var c=a.concat(),d=c.concat(),f,e,g,h,j,l,n,r,p,s,t=[];for(j=0;j<b.length;j++){l=b[j];Array.prototype.push.apply(d,l);e=Number.POSITIVE_INFINITY;for(f=0;f<l.length;f++){p=l[f];s=[];for(r=0;r<c.length;r++)n=c[r],n=p.distanceToSquared(n),s.push(n),n<e&&(e=n,g=f,h=r)}f=0<=h-1?h-1:c.length-1;e=0<=g-1?g-1:l.length-1;var m=[l[g],c[h],c[f]];r=THREE.FontUtils.Triangulate.area(m);var v=[l[g],l[e],c[h]];p=THREE.FontUtils.Triangulate.area(v);s=h;n=g;h+=1;g+=-1;0>
h&&(h+=c.length);h%=c.length;0>g&&(g+=l.length);g%=l.length;f=0<=h-1?h-1:c.length-1;e=0<=g-1?g-1:l.length-1;m=[l[g],c[h],c[f]];m=THREE.FontUtils.Triangulate.area(m);v=[l[g],l[e],c[h]];v=THREE.FontUtils.Triangulate.area(v);r+p>m+v&&(h=s,g=n,0>h&&(h+=c.length),h%=c.length,0>g&&(g+=l.length),g%=l.length,f=0<=h-1?h-1:c.length-1,e=0<=g-1?g-1:l.length-1);r=c.slice(0,h);p=c.slice(h);s=l.slice(g);n=l.slice(0,g);e=[l[g],l[e],c[h]];t.push([l[g],c[h],c[f]]);t.push(e);c=r.concat(s).concat(n).concat(p)}return{shape:c,
isolatedPts:t,allpoints:d}},triangulateShape:function(a,b){var c=THREE.Shape.Utils.removeHoles(a,b),d=c.allpoints,f=c.isolatedPts,c=THREE.FontUtils.Triangulate(c.shape,!1),e,g,h,j,l={};e=0;for(g=d.length;e<g;e++)j=d[e].x+":"+d[e].y,void 0!==l[j]&&console.log("Duplicate point",j),l[j]=e;e=0;for(g=c.length;e<g;e++){h=c[e];for(d=0;3>d;d++)j=h[d].x+":"+h[d].y,j=l[j],void 0!==j&&(h[d]=j)}e=0;for(g=f.length;e<g;e++){h=f[e];for(d=0;3>d;d++)j=h[d].x+":"+h[d].y,j=l[j],void 0!==j&&(h[d]=j)}return c.concat(f)},
isClockWise:function(a){return 0>THREE.FontUtils.Triangulate.area(a)},b2p0:function(a,b){var c=1-a;return c*c*b},b2p1:function(a,b){return 2*(1-a)*a*b},b2p2:function(a,b){return a*a*b},b2:function(a,b,c,d){return this.b2p0(a,b)+this.b2p1(a,c)+this.b2p2(a,d)},b3p0:function(a,b){var c=1-a;return c*c*c*b},b3p1:function(a,b){var c=1-a;return 3*c*c*a*b},b3p2:function(a,b){return 3*(1-a)*a*a*b},b3p3:function(a,b){return a*a*a*b},b3:function(a,b,c,d,f){return this.b3p0(a,b)+this.b3p1(a,c)+this.b3p2(a,d)+
this.b3p3(a,f)}};
THREE.AnimationHandler=function(){var a=[],b={},c={update:function(b){for(var c=0;c<a.length;c++)a[c].update(b)},addToUpdate:function(b){-1===a.indexOf(b)&&a.push(b)},removeFromUpdate:function(b){b=a.indexOf(b);-1!==b&&a.splice(b,1)},add:function(a){void 0!==b[a.name]&&console.log("THREE.AnimationHandler.add: Warning! "+a.name+" already exists in library. Overwriting.");b[a.name]=a;if(!0!==a.initialized){for(var c=0;c<a.hierarchy.length;c++){for(var d=0;d<a.hierarchy[c].keys.length;d++)if(0>a.hierarchy[c].keys[d].time&&
(a.hierarchy[c].keys[d].time=0),void 0!==a.hierarchy[c].keys[d].rot&&!(a.hierarchy[c].keys[d].rot instanceof THREE.Quaternion)){var h=a.hierarchy[c].keys[d].rot;a.hierarchy[c].keys[d].rot=new THREE.Quaternion(h[0],h[1],h[2],h[3])}if(a.hierarchy[c].keys.length&&void 0!==a.hierarchy[c].keys[0].morphTargets){h={};for(d=0;d<a.hierarchy[c].keys.length;d++)for(var j=0;j<a.hierarchy[c].keys[d].morphTargets.length;j++){var l=a.hierarchy[c].keys[d].morphTargets[j];h[l]=-1}a.hierarchy[c].usedMorphTargets=h;
for(d=0;d<a.hierarchy[c].keys.length;d++){var n={};for(l in h){for(j=0;j<a.hierarchy[c].keys[d].morphTargets.length;j++)if(a.hierarchy[c].keys[d].morphTargets[j]===l){n[l]=a.hierarchy[c].keys[d].morphTargetsInfluences[j];break}j===a.hierarchy[c].keys[d].morphTargets.length&&(n[l]=0)}a.hierarchy[c].keys[d].morphTargetsInfluences=n}}for(d=1;d<a.hierarchy[c].keys.length;d++)a.hierarchy[c].keys[d].time===a.hierarchy[c].keys[d-1].time&&(a.hierarchy[c].keys.splice(d,1),d--);for(d=0;d<a.hierarchy[c].keys.length;d++)a.hierarchy[c].keys[d].index=
d}d=parseInt(a.length*a.fps,10);a.JIT={};a.JIT.hierarchy=[];for(c=0;c<a.hierarchy.length;c++)a.JIT.hierarchy.push(Array(d));a.initialized=!0}},get:function(a){if("string"===typeof a){if(b[a])return b[a];console.log("THREE.AnimationHandler.get: Couldn't find animation "+a);return null}},parse:function(a){var b=[];if(a instanceof THREE.SkinnedMesh)for(var c=0;c<a.bones.length;c++)b.push(a.bones[c]);else d(a,b);return b}},d=function(a,b){b.push(a);for(var c=0;c<a.children.length;c++)d(a.children[c],
b)};c.LINEAR=0;c.CATMULLROM=1;c.CATMULLROM_FORWARD=2;return c}();THREE.Animation=function(a,b,c){this.root=a;this.data=THREE.AnimationHandler.get(b);this.hierarchy=THREE.AnimationHandler.parse(a);this.currentTime=0;this.timeScale=1;this.isPlaying=!1;this.loop=this.isPaused=!0;this.interpolationType=void 0!==c?c:THREE.AnimationHandler.LINEAR;this.points=[];this.target=new THREE.Vector3};
THREE.Animation.prototype.play=function(a,b){if(!1===this.isPlaying){this.isPlaying=!0;this.loop=void 0!==a?a:!0;this.currentTime=void 0!==b?b:0;var c,d=this.hierarchy.length,f;for(c=0;c<d;c++){f=this.hierarchy[c];this.interpolationType!==THREE.AnimationHandler.CATMULLROM_FORWARD&&(f.useQuaternion=!0);f.matrixAutoUpdate=!0;void 0===f.animationCache&&(f.animationCache={},f.animationCache.prevKey={pos:0,rot:0,scl:0},f.animationCache.nextKey={pos:0,rot:0,scl:0},f.animationCache.originalMatrix=f instanceof
THREE.Bone?f.skinMatrix:f.matrix);var e=f.animationCache.prevKey;f=f.animationCache.nextKey;e.pos=this.data.hierarchy[c].keys[0];e.rot=this.data.hierarchy[c].keys[0];e.scl=this.data.hierarchy[c].keys[0];f.pos=this.getNextKeyWith("pos",c,1);f.rot=this.getNextKeyWith("rot",c,1);f.scl=this.getNextKeyWith("scl",c,1)}this.update(0)}this.isPaused=!1;THREE.AnimationHandler.addToUpdate(this)};
THREE.Animation.prototype.pause=function(){!0===this.isPaused?THREE.AnimationHandler.addToUpdate(this):THREE.AnimationHandler.removeFromUpdate(this);this.isPaused=!this.isPaused};THREE.Animation.prototype.stop=function(){this.isPaused=this.isPlaying=!1;THREE.AnimationHandler.removeFromUpdate(this)};
THREE.Animation.prototype.update=function(a){if(!1!==this.isPlaying){var b=["pos","rot","scl"],c,d,f,e,g,h,j,l,n;n=this.currentTime+=a*this.timeScale;l=this.currentTime%=this.data.length;parseInt(Math.min(l*this.data.fps,this.data.length*this.data.fps),10);for(var r=0,p=this.hierarchy.length;r<p;r++){a=this.hierarchy[r];j=a.animationCache;for(var s=0;3>s;s++){c=b[s];g=j.prevKey[c];h=j.nextKey[c];if(h.time<=n){if(l<n)if(this.loop){g=this.data.hierarchy[r].keys[0];for(h=this.getNextKeyWith(c,r,1);h.time<
l;)g=h,h=this.getNextKeyWith(c,r,h.index+1)}else{this.stop();return}else{do g=h,h=this.getNextKeyWith(c,r,h.index+1);while(h.time<l)}j.prevKey[c]=g;j.nextKey[c]=h}a.matrixAutoUpdate=!0;a.matrixWorldNeedsUpdate=!0;d=(l-g.time)/(h.time-g.time);f=g[c];e=h[c];if(0>d||1<d)console.log("THREE.Animation.update: Warning! Scale out of bounds:"+d+" on bone "+r),d=0>d?0:1;if("pos"===c)if(c=a.position,this.interpolationType===THREE.AnimationHandler.LINEAR)c.x=f[0]+(e[0]-f[0])*d,c.y=f[1]+(e[1]-f[1])*d,c.z=f[2]+
(e[2]-f[2])*d;else{if(this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD)this.points[0]=this.getPrevKeyWith("pos",r,g.index-1).pos,this.points[1]=f,this.points[2]=e,this.points[3]=this.getNextKeyWith("pos",r,h.index+1).pos,d=0.33*d+0.33,f=this.interpolateCatmullRom(this.points,d),c.x=f[0],c.y=f[1],c.z=f[2],this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD&&(d=this.interpolateCatmullRom(this.points,1.01*d),
this.target.set(d[0],d[1],d[2]),this.target.sub(c),this.target.y=0,this.target.normalize(),d=Math.atan2(this.target.x,this.target.z),a.rotation.set(0,d,0))}else"rot"===c?THREE.Quaternion.slerp(f,e,a.quaternion,d):"scl"===c&&(c=a.scale,c.x=f[0]+(e[0]-f[0])*d,c.y=f[1]+(e[1]-f[1])*d,c.z=f[2]+(e[2]-f[2])*d)}}}};
THREE.Animation.prototype.interpolateCatmullRom=function(a,b){var c=[],d=[],f,e,g,h,j,l;f=(a.length-1)*b;e=Math.floor(f);f-=e;c[0]=0===e?e:e-1;c[1]=e;c[2]=e>a.length-2?e:e+1;c[3]=e>a.length-3?e:e+2;e=a[c[0]];h=a[c[1]];j=a[c[2]];l=a[c[3]];c=f*f;g=f*c;d[0]=this.interpolate(e[0],h[0],j[0],l[0],f,c,g);d[1]=this.interpolate(e[1],h[1],j[1],l[1],f,c,g);d[2]=this.interpolate(e[2],h[2],j[2],l[2],f,c,g);return d};
THREE.Animation.prototype.interpolate=function(a,b,c,d,f,e,g){a=0.5*(c-a);d=0.5*(d-b);return(2*(b-c)+a+d)*g+(-3*(b-c)-2*a-d)*e+a*f+b};THREE.Animation.prototype.getNextKeyWith=function(a,b,c){for(var d=this.data.hierarchy[b].keys,c=this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD?c<d.length-1?c:d.length-1:c%d.length;c<d.length;c++)if(void 0!==d[c][a])return d[c];return this.data.hierarchy[b].keys[0]};
THREE.Animation.prototype.getPrevKeyWith=function(a,b,c){for(var d=this.data.hierarchy[b].keys,c=this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD?0<c?c:0:0<=c?c:c+d.length;0<=c;c--)if(void 0!==d[c][a])return d[c];return this.data.hierarchy[b].keys[d.length-1]};
THREE.KeyFrameAnimation=function(a,b,c){this.root=a;this.data=THREE.AnimationHandler.get(b);this.hierarchy=THREE.AnimationHandler.parse(a);this.currentTime=0;this.timeScale=0.0010;this.isPlaying=!1;this.loop=this.isPaused=!0;this.JITCompile=void 0!==c?c:!0;a=0;for(b=this.hierarchy.length;a<b;a++){var c=this.data.hierarchy[a].sids,d=this.hierarchy[a];if(this.data.hierarchy[a].keys.length&&c){for(var f=0;f<c.length;f++){var e=c[f],g=this.getNextKeyWith(e,a,0);g&&g.apply(e)}d.matrixAutoUpdate=!1;this.data.hierarchy[a].node.updateMatrix();
d.matrixWorldNeedsUpdate=!0}}};
THREE.KeyFrameAnimation.prototype.play=function(a,b){if(!this.isPlaying){this.isPlaying=!0;this.loop=void 0!==a?a:!0;this.currentTime=void 0!==b?b:0;this.startTimeMs=b;this.startTime=1E7;this.endTime=-this.startTime;var c,d=this.hierarchy.length,f,e;for(c=0;c<d;c++)f=this.hierarchy[c],e=this.data.hierarchy[c],f.useQuaternion=!0,void 0===e.animationCache&&(e.animationCache={},e.animationCache.prevKey=null,e.animationCache.nextKey=null,e.animationCache.originalMatrix=f instanceof THREE.Bone?f.skinMatrix:
f.matrix),f=this.data.hierarchy[c].keys,f.length&&(e.animationCache.prevKey=f[0],e.animationCache.nextKey=f[1],this.startTime=Math.min(f[0].time,this.startTime),this.endTime=Math.max(f[f.length-1].time,this.endTime));this.update(0)}this.isPaused=!1;THREE.AnimationHandler.addToUpdate(this)};THREE.KeyFrameAnimation.prototype.pause=function(){this.isPaused?THREE.AnimationHandler.addToUpdate(this):THREE.AnimationHandler.removeFromUpdate(this);this.isPaused=!this.isPaused};
THREE.KeyFrameAnimation.prototype.stop=function(){this.isPaused=this.isPlaying=!1;THREE.AnimationHandler.removeFromUpdate(this);for(var a=0;a<this.data.hierarchy.length;a++){var b=this.hierarchy[a],c=this.data.hierarchy[a];if(void 0!==c.animationCache){var d=c.animationCache.originalMatrix;b instanceof THREE.Bone?(d.copy(b.skinMatrix),b.skinMatrix=d):(d.copy(b.matrix),b.matrix=d);delete c.animationCache}}};
THREE.KeyFrameAnimation.prototype.update=function(a){if(this.isPlaying){var b,c,d,f,e=this.data.JIT.hierarchy,g,h,j;h=this.currentTime+=a*this.timeScale;g=this.currentTime%=this.data.length;g<this.startTimeMs&&(g=this.currentTime=this.startTimeMs+g);f=parseInt(Math.min(g*this.data.fps,this.data.length*this.data.fps),10);if((j=g<h)&&!this.loop){for(var a=0,l=this.hierarchy.length;a<l;a++){var n=this.data.hierarchy[a].keys,e=this.data.hierarchy[a].sids;d=n.length-1;f=this.hierarchy[a];if(n.length){for(n=
0;n<e.length;n++)g=e[n],(h=this.getPrevKeyWith(g,a,d))&&h.apply(g);this.data.hierarchy[a].node.updateMatrix();f.matrixWorldNeedsUpdate=!0}}this.stop()}else if(!(g<this.startTime)){a=0;for(l=this.hierarchy.length;a<l;a++){d=this.hierarchy[a];b=this.data.hierarchy[a];var n=b.keys,r=b.animationCache;if(this.JITCompile&&void 0!==e[a][f])d instanceof THREE.Bone?(d.skinMatrix=e[a][f],d.matrixWorldNeedsUpdate=!1):(d.matrix=e[a][f],d.matrixWorldNeedsUpdate=!0);else if(n.length){this.JITCompile&&r&&(d instanceof
THREE.Bone?d.skinMatrix=r.originalMatrix:d.matrix=r.originalMatrix);b=r.prevKey;c=r.nextKey;if(b&&c){if(c.time<=h){if(j&&this.loop){b=n[0];for(c=n[1];c.time<g;)b=c,c=n[b.index+1]}else if(!j)for(var p=n.length-1;c.time<g&&c.index!==p;)b=c,c=n[b.index+1];r.prevKey=b;r.nextKey=c}c.time>=g?b.interpolate(c,g):b.interpolate(c,c.time)}this.data.hierarchy[a].node.updateMatrix();d.matrixWorldNeedsUpdate=!0}}if(this.JITCompile&&void 0===e[0][f]){this.hierarchy[0].updateMatrixWorld(!0);for(a=0;a<this.hierarchy.length;a++)e[a][f]=
this.hierarchy[a]instanceof THREE.Bone?this.hierarchy[a].skinMatrix.clone():this.hierarchy[a].matrix.clone()}}}};THREE.KeyFrameAnimation.prototype.getNextKeyWith=function(a,b,c){b=this.data.hierarchy[b].keys;for(c%=b.length;c<b.length;c++)if(b[c].hasTarget(a))return b[c];return b[0]};THREE.KeyFrameAnimation.prototype.getPrevKeyWith=function(a,b,c){b=this.data.hierarchy[b].keys;for(c=0<=c?c:c+b.length;0<=c;c--)if(b[c].hasTarget(a))return b[c];return b[b.length-1]};
THREE.CubeCamera=function(a,b,c){THREE.Object3D.call(this);var d=new THREE.PerspectiveCamera(90,1,a,b);d.up.set(0,-1,0);d.lookAt(new THREE.Vector3(1,0,0));this.add(d);var f=new THREE.PerspectiveCamera(90,1,a,b);f.up.set(0,-1,0);f.lookAt(new THREE.Vector3(-1,0,0));this.add(f);var e=new THREE.PerspectiveCamera(90,1,a,b);e.up.set(0,0,1);e.lookAt(new THREE.Vector3(0,1,0));this.add(e);var g=new THREE.PerspectiveCamera(90,1,a,b);g.up.set(0,0,-1);g.lookAt(new THREE.Vector3(0,-1,0));this.add(g);var h=new THREE.PerspectiveCamera(90,
1,a,b);h.up.set(0,-1,0);h.lookAt(new THREE.Vector3(0,0,1));this.add(h);var j=new THREE.PerspectiveCamera(90,1,a,b);j.up.set(0,-1,0);j.lookAt(new THREE.Vector3(0,0,-1));this.add(j);this.renderTarget=new THREE.WebGLRenderTargetCube(c,c,{format:THREE.RGBFormat,magFilter:THREE.LinearFilter,minFilter:THREE.LinearFilter});this.updateCubeMap=function(a,b){var c=this.renderTarget,p=c.generateMipmaps;c.generateMipmaps=!1;c.activeCubeFace=0;a.render(b,d,c);c.activeCubeFace=1;a.render(b,f,c);c.activeCubeFace=
2;a.render(b,e,c);c.activeCubeFace=3;a.render(b,g,c);c.activeCubeFace=4;a.render(b,h,c);c.generateMipmaps=p;c.activeCubeFace=5;a.render(b,j,c)}};THREE.CubeCamera.prototype=Object.create(THREE.Object3D.prototype);THREE.CombinedCamera=function(a,b,c,d,f,e,g){THREE.Camera.call(this);this.fov=c;this.left=-a/2;this.right=a/2;this.top=b/2;this.bottom=-b/2;this.cameraO=new THREE.OrthographicCamera(a/-2,a/2,b/2,b/-2,e,g);this.cameraP=new THREE.PerspectiveCamera(c,a/b,d,f);this.zoom=1;this.toPerspective()};
THREE.CombinedCamera.prototype=Object.create(THREE.Camera.prototype);THREE.CombinedCamera.prototype.toPerspective=function(){this.near=this.cameraP.near;this.far=this.cameraP.far;this.cameraP.fov=this.fov/this.zoom;this.cameraP.updateProjectionMatrix();this.projectionMatrix=this.cameraP.projectionMatrix;this.inPerspectiveMode=!0;this.inOrthographicMode=!1};
THREE.CombinedCamera.prototype.toOrthographic=function(){var a=this.cameraP.aspect,b=(this.cameraP.near+this.cameraP.far)/2,b=Math.tan(this.fov/2)*b,a=2*b*a/2,b=b/this.zoom,a=a/this.zoom;this.cameraO.left=-a;this.cameraO.right=a;this.cameraO.top=b;this.cameraO.bottom=-b;this.cameraO.updateProjectionMatrix();this.near=this.cameraO.near;this.far=this.cameraO.far;this.projectionMatrix=this.cameraO.projectionMatrix;this.inPerspectiveMode=!1;this.inOrthographicMode=!0};
THREE.CombinedCamera.prototype.setSize=function(a,b){this.cameraP.aspect=a/b;this.left=-a/2;this.right=a/2;this.top=b/2;this.bottom=-b/2};THREE.CombinedCamera.prototype.setFov=function(a){this.fov=a;this.inPerspectiveMode?this.toPerspective():this.toOrthographic()};THREE.CombinedCamera.prototype.updateProjectionMatrix=function(){this.inPerspectiveMode?this.toPerspective():(this.toPerspective(),this.toOrthographic())};
THREE.CombinedCamera.prototype.setLens=function(a,b){void 0===b&&(b=24);var c=2*THREE.Math.radToDeg(Math.atan(b/(2*a)));this.setFov(c);return c};THREE.CombinedCamera.prototype.setZoom=function(a){this.zoom=a;this.inPerspectiveMode?this.toPerspective():this.toOrthographic()};THREE.CombinedCamera.prototype.toFrontView=function(){this.rotation.x=0;this.rotation.y=0;this.rotation.z=0;this.rotationAutoUpdate=!1};
THREE.CombinedCamera.prototype.toBackView=function(){this.rotation.x=0;this.rotation.y=Math.PI;this.rotation.z=0;this.rotationAutoUpdate=!1};THREE.CombinedCamera.prototype.toLeftView=function(){this.rotation.x=0;this.rotation.y=-Math.PI/2;this.rotation.z=0;this.rotationAutoUpdate=!1};THREE.CombinedCamera.prototype.toRightView=function(){this.rotation.x=0;this.rotation.y=Math.PI/2;this.rotation.z=0;this.rotationAutoUpdate=!1};
THREE.CombinedCamera.prototype.toTopView=function(){this.rotation.x=-Math.PI/2;this.rotation.y=0;this.rotation.z=0;this.rotationAutoUpdate=!1};THREE.CombinedCamera.prototype.toBottomView=function(){this.rotation.x=Math.PI/2;this.rotation.y=0;this.rotation.z=0;this.rotationAutoUpdate=!1};
THREE.AsteriskGeometry=function(a,b){THREE.Geometry.call(this);for(var c=0.707*a,d=0.707*b,c=[[a,0,0],[b,0,0],[-a,0,0],[-b,0,0],[0,a,0],[0,b,0],[0,-a,0],[0,-b,0],[0,0,a],[0,0,b],[0,0,-a],[0,0,-b],[c,c,0],[d,d,0],[-c,-c,0],[-d,-d,0],[c,-c,0],[d,-d,0],[-c,c,0],[-d,d,0],[c,0,c],[d,0,d],[-c,0,-c],[-d,0,-d],[c,0,-c],[d,0,-d],[-c,0,c],[-d,0,d],[0,c,c],[0,d,d],[0,-c,-c],[0,-d,-d],[0,c,-c],[0,d,-d],[0,-c,c],[0,-d,d]],d=0,f=c.length;d<f;d++)this.vertices.push(new THREE.Vector3(c[d][0],c[d][1],c[d][2]))};
THREE.AsteriskGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.CircleGeometry=function(a,b,c,d){THREE.Geometry.call(this);var a=a||50,c=void 0!==c?c:0,d=void 0!==d?d:2*Math.PI,b=void 0!==b?Math.max(3,b):8,f,e=[];f=new THREE.Vector3;var g=new THREE.Vector2(0.5,0.5);this.vertices.push(f);e.push(g);for(f=0;f<=b;f++){var h=new THREE.Vector3;h.x=a*Math.cos(c+f/b*d);h.y=a*Math.sin(c+f/b*d);this.vertices.push(h);e.push(new THREE.Vector2((h.x/a+1)/2,-(h.y/a+1)/2+1))}c=new THREE.Vector3(0,0,-1);for(f=1;f<=b;f++)this.faces.push(new THREE.Face3(f,f+1,0,[c,c,c])),
this.faceVertexUvs[0].push([e[f],e[f+1],g]);this.computeCentroids();this.computeFaceNormals();this.boundingSphere=new THREE.Sphere(new THREE.Vector3,a)};THREE.CircleGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.CubeGeometry=function(a,b,c,d,f,e){function g(a,b,c,d,e,f,g,m){var v,B=h.widthSegments,q=h.heightSegments,A=e/2,u=f/2,x=h.vertices.length;if("x"===a&&"y"===b||"y"===a&&"x"===b)v="z";else if("x"===a&&"z"===b||"z"===a&&"x"===b)v="y",q=h.depthSegments;else if("z"===a&&"y"===b||"y"===a&&"z"===b)v="x",B=h.depthSegments;var I=B+1,C=q+1,z=e/B,J=f/q,K=new THREE.Vector3;K[v]=0<g?1:-1;for(e=0;e<C;e++)for(f=0;f<I;f++){var G=new THREE.Vector3;G[a]=(f*z-A)*c;G[b]=(e*J-u)*d;G[v]=g;h.vertices.push(G)}for(e=
0;e<q;e++)for(f=0;f<B;f++)a=new THREE.Face4(f+I*e+x,f+I*(e+1)+x,f+1+I*(e+1)+x,f+1+I*e+x),a.normal.copy(K),a.vertexNormals.push(K.clone(),K.clone(),K.clone(),K.clone()),a.materialIndex=m,h.faces.push(a),h.faceVertexUvs[0].push([new THREE.Vector2(f/B,1-e/q),new THREE.Vector2(f/B,1-(e+1)/q),new THREE.Vector2((f+1)/B,1-(e+1)/q),new THREE.Vector2((f+1)/B,1-e/q)])}THREE.Geometry.call(this);var h=this;this.width=a;this.height=b;this.depth=c;this.widthSegments=d||1;this.heightSegments=f||1;this.depthSegments=
e||1;a=this.width/2;b=this.height/2;c=this.depth/2;g("z","y",-1,-1,this.depth,this.height,a,0);g("z","y",1,-1,this.depth,this.height,-a,1);g("x","z",1,1,this.width,this.depth,b,2);g("x","z",1,-1,this.width,this.depth,-b,3);g("x","y",1,-1,this.width,this.height,c,4);g("x","y",-1,-1,this.width,this.height,-c,5);this.computeCentroids();this.mergeVertices()};THREE.CubeGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.CylinderGeometry=function(a,b,c,d,f,e){THREE.Geometry.call(this);var a=void 0!==a?a:20,b=void 0!==b?b:20,c=void 0!==c?c:100,g=c/2,d=d||8,f=f||1,h,j,l=[],n=[];for(j=0;j<=f;j++){var r=[],p=[],s=j/f,t=s*(b-a)+a;for(h=0;h<=d;h++){var m=h/d,v=new THREE.Vector3;v.x=t*Math.sin(2*m*Math.PI);v.y=-s*c+g;v.z=t*Math.cos(2*m*Math.PI);this.vertices.push(v);r.push(this.vertices.length-1);p.push(new THREE.Vector2(m,1-s))}l.push(r);n.push(p)}c=(b-a)/c;for(h=0;h<d;h++){0!==a?(r=this.vertices[l[0][h]].clone(),
p=this.vertices[l[0][h+1]].clone()):(r=this.vertices[l[1][h]].clone(),p=this.vertices[l[1][h+1]].clone());r.setY(Math.sqrt(r.x*r.x+r.z*r.z)*c).normalize();p.setY(Math.sqrt(p.x*p.x+p.z*p.z)*c).normalize();for(j=0;j<f;j++){var s=l[j][h],t=l[j+1][h],m=l[j+1][h+1],v=l[j][h+1],B=r.clone(),q=r.clone(),A=p.clone(),u=p.clone(),x=n[j][h].clone(),I=n[j+1][h].clone(),C=n[j+1][h+1].clone(),z=n[j][h+1].clone();this.faces.push(new THREE.Face4(s,t,m,v,[B,q,A,u]));this.faceVertexUvs[0].push([x,I,C,z])}}if(!e&&0<
a){this.vertices.push(new THREE.Vector3(0,g,0));for(h=0;h<d;h++)s=l[0][h],t=l[0][h+1],m=this.vertices.length-1,B=new THREE.Vector3(0,1,0),q=new THREE.Vector3(0,1,0),A=new THREE.Vector3(0,1,0),x=n[0][h].clone(),I=n[0][h+1].clone(),C=new THREE.Vector2(I.u,0),this.faces.push(new THREE.Face3(s,t,m,[B,q,A])),this.faceVertexUvs[0].push([x,I,C])}if(!e&&0<b){this.vertices.push(new THREE.Vector3(0,-g,0));for(h=0;h<d;h++)s=l[j][h+1],t=l[j][h],m=this.vertices.length-1,B=new THREE.Vector3(0,-1,0),q=new THREE.Vector3(0,
-1,0),A=new THREE.Vector3(0,-1,0),x=n[j][h+1].clone(),I=n[j][h].clone(),C=new THREE.Vector2(I.u,1),this.faces.push(new THREE.Face3(s,t,m,[B,q,A])),this.faceVertexUvs[0].push([x,I,C])}this.computeCentroids();this.computeFaceNormals()};THREE.CylinderGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.ExtrudeGeometry=function(a,b){"undefined"!==typeof a&&(THREE.Geometry.call(this),a=a instanceof Array?a:[a],this.shapebb=a[a.length-1].getBoundingBox(),this.addShapeList(a,b),this.computeCentroids(),this.computeFaceNormals())};THREE.ExtrudeGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.ExtrudeGeometry.prototype.addShapeList=function(a,b){for(var c=a.length,d=0;d<c;d++)this.addShape(a[d],b)};
THREE.ExtrudeGeometry.prototype.addShape=function(a,b){function c(a,b,c){b||console.log("die");return b.clone().multiplyScalar(c).add(a)}function d(a,b,c){var d=THREE.ExtrudeGeometry.__v1,e=THREE.ExtrudeGeometry.__v2,f=THREE.ExtrudeGeometry.__v3,g=THREE.ExtrudeGeometry.__v4,j=THREE.ExtrudeGeometry.__v5,h=THREE.ExtrudeGeometry.__v6;d.set(a.x-b.x,a.y-b.y);e.set(a.x-c.x,a.y-c.y);d=d.normalize();e=e.normalize();f.set(-d.y,d.x);g.set(e.y,-e.x);j.copy(a).add(f);h.copy(a).add(g);if(j.equals(h))return g.clone();
j.copy(b).add(f);h.copy(c).add(g);f=d.dot(g);g=h.sub(j).dot(g);0===f&&(console.log("Either infinite or no solutions!"),0===g?console.log("Its finite solutions."):console.log("Too bad, no solutions."));g/=f;return 0>g?(b=Math.atan2(b.y-a.y,b.x-a.x),a=Math.atan2(c.y-a.y,c.x-a.x),b>a&&(a+=2*Math.PI),c=(b+a)/2,a=-Math.cos(c),c=-Math.sin(c),new THREE.Vector2(a,c)):d.multiplyScalar(g).add(j).sub(a).clone()}function f(c,d){var e,f;for(N=c.length;0<=--N;){e=N;f=N-1;0>f&&(f=c.length-1);for(var g=0,j=s+2*n,
g=0;g<j;g++){var h=ga*g,l=ga*(g+1),m=d+e+h,h=d+f+h,p=d+f+l,l=d+e+l,u=c,r=g,x=j,t=e,v=f,m=m+H,h=h+H,p=p+H,l=l+H;G.faces.push(new THREE.Face4(m,h,p,l,null,null,q));m=A.generateSideWallUV(G,a,u,b,m,h,p,l,r,x,t,v);G.faceVertexUvs[0].push(m)}}}function e(a,b,c){G.vertices.push(new THREE.Vector3(a,b,c))}function g(c,d,e,f){c+=H;d+=H;e+=H;G.faces.push(new THREE.Face3(c,d,e,null,null,B));c=f?A.generateBottomUV(G,a,b,c,d,e):A.generateTopUV(G,a,b,c,d,e);G.faceVertexUvs[0].push(c)}var h=void 0!==b.amount?b.amount:
100,j=void 0!==b.bevelThickness?b.bevelThickness:6,l=void 0!==b.bevelSize?b.bevelSize:j-2,n=void 0!==b.bevelSegments?b.bevelSegments:3,r=void 0!==b.bevelEnabled?b.bevelEnabled:!0,p=void 0!==b.curveSegments?b.curveSegments:12,s=void 0!==b.steps?b.steps:1,t=b.extrudePath,m,v=!1,B=b.material,q=b.extrudeMaterial,A=void 0!==b.UVGenerator?b.UVGenerator:THREE.ExtrudeGeometry.WorldUVGenerator,u,x,I,C;t&&(m=t.getSpacedPoints(s),v=!0,r=!1,u=void 0!==b.frames?b.frames:new THREE.TubeGeometry.FrenetFrames(t,s,
!1),x=new THREE.Vector3,I=new THREE.Vector3,C=new THREE.Vector3);r||(l=j=n=0);var z,J,K,G=this,H=this.vertices.length,p=a.extractPoints(p),D=p.shape,p=p.holes;if(t=!THREE.Shape.Utils.isClockWise(D)){D=D.reverse();J=0;for(K=p.length;J<K;J++)z=p[J],THREE.Shape.Utils.isClockWise(z)&&(p[J]=z.reverse());t=!1}var X=THREE.Shape.Utils.triangulateShape(D,p),t=D;J=0;for(K=p.length;J<K;J++)z=p[J],D=D.concat(z);var F,L,M,V,ga=D.length,Da=X.length,ab=[],N=0,da=t.length;F=da-1;for(L=N+1;N<da;N++,F++,L++)F===da&&
(F=0),L===da&&(L=0),ab[N]=d(t[N],t[F],t[L]);var ra=[],ia,sa=ab.concat();J=0;for(K=p.length;J<K;J++){z=p[J];ia=[];N=0;da=z.length;F=da-1;for(L=N+1;N<da;N++,F++,L++)F===da&&(F=0),L===da&&(L=0),ia[N]=d(z[N],z[F],z[L]);ra.push(ia);sa=sa.concat(ia)}for(F=0;F<n;F++){z=F/n;M=j*(1-z);L=l*Math.sin(z*Math.PI/2);N=0;for(da=t.length;N<da;N++)V=c(t[N],ab[N],L),e(V.x,V.y,-M);J=0;for(K=p.length;J<K;J++){z=p[J];ia=ra[J];N=0;for(da=z.length;N<da;N++)V=c(z[N],ia[N],L),e(V.x,V.y,-M)}}L=l;for(N=0;N<ga;N++)V=r?c(D[N],
sa[N],L):D[N],v?(I.copy(u.normals[0]).multiplyScalar(V.x),x.copy(u.binormals[0]).multiplyScalar(V.y),C.copy(m[0]).add(I).add(x),e(C.x,C.y,C.z)):e(V.x,V.y,0);for(z=1;z<=s;z++)for(N=0;N<ga;N++)V=r?c(D[N],sa[N],L):D[N],v?(I.copy(u.normals[z]).multiplyScalar(V.x),x.copy(u.binormals[z]).multiplyScalar(V.y),C.copy(m[z]).add(I).add(x),e(C.x,C.y,C.z)):e(V.x,V.y,h/s*z);for(F=n-1;0<=F;F--){z=F/n;M=j*(1-z);L=l*Math.sin(z*Math.PI/2);N=0;for(da=t.length;N<da;N++)V=c(t[N],ab[N],L),e(V.x,V.y,h+M);J=0;for(K=p.length;J<
K;J++){z=p[J];ia=ra[J];N=0;for(da=z.length;N<da;N++)V=c(z[N],ia[N],L),v?e(V.x,V.y+m[s-1].y,m[s-1].x+M):e(V.x,V.y,h+M)}}if(r){j=0*ga;for(N=0;N<Da;N++)h=X[N],g(h[2]+j,h[1]+j,h[0]+j,!0);j=ga*(s+2*n);for(N=0;N<Da;N++)h=X[N],g(h[0]+j,h[1]+j,h[2]+j,!1)}else{for(N=0;N<Da;N++)h=X[N],g(h[2],h[1],h[0],!0);for(N=0;N<Da;N++)h=X[N],g(h[0]+ga*s,h[1]+ga*s,h[2]+ga*s,!1)}h=0;f(t,h);h+=t.length;J=0;for(K=p.length;J<K;J++)z=p[J],f(z,h),h+=z.length};
THREE.ExtrudeGeometry.WorldUVGenerator={generateTopUV:function(a,b,c,d,f,e){b=a.vertices[f].x;f=a.vertices[f].y;c=a.vertices[e].x;e=a.vertices[e].y;return[new THREE.Vector2(a.vertices[d].x,a.vertices[d].y),new THREE.Vector2(b,f),new THREE.Vector2(c,e)]},generateBottomUV:function(a,b,c,d,f,e){return this.generateTopUV(a,b,c,d,f,e)},generateSideWallUV:function(a,b,c,d,f,e,g,h){var b=a.vertices[f].x,c=a.vertices[f].y,f=a.vertices[f].z,d=a.vertices[e].x,j=a.vertices[e].y,e=a.vertices[e].z,l=a.vertices[g].x,
n=a.vertices[g].y,g=a.vertices[g].z,r=a.vertices[h].x,p=a.vertices[h].y,a=a.vertices[h].z;return 0.01>Math.abs(c-j)?[new THREE.Vector2(b,1-f),new THREE.Vector2(d,1-e),new THREE.Vector2(l,1-g),new THREE.Vector2(r,1-a)]:[new THREE.Vector2(c,1-f),new THREE.Vector2(j,1-e),new THREE.Vector2(n,1-g),new THREE.Vector2(p,1-a)]}};THREE.ExtrudeGeometry.__v1=new THREE.Vector2;THREE.ExtrudeGeometry.__v2=new THREE.Vector2;THREE.ExtrudeGeometry.__v3=new THREE.Vector2;THREE.ExtrudeGeometry.__v4=new THREE.Vector2;
THREE.ExtrudeGeometry.__v5=new THREE.Vector2;THREE.ExtrudeGeometry.__v6=new THREE.Vector2;THREE.ShapeGeometry=function(a,b){THREE.Geometry.call(this);!1===a instanceof Array&&(a=[a]);this.shapebb=a[a.length-1].getBoundingBox();this.addShapeList(a,b);this.computeCentroids();this.computeFaceNormals()};THREE.ShapeGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.ShapeGeometry.prototype.addShapeList=function(a,b){for(var c=0,d=a.length;c<d;c++)this.addShape(a[c],b);return this};
THREE.ShapeGeometry.prototype.addShape=function(a,b){void 0===b&&(b={});var c=b.material,d=void 0===b.UVGenerator?THREE.ExtrudeGeometry.WorldUVGenerator:b.UVGenerator,f,e,g,h=this.vertices.length;f=a.extractPoints(void 0!==b.curveSegments?b.curveSegments:12);var j=f.shape,l=f.holes;if(!THREE.Shape.Utils.isClockWise(j)){j=j.reverse();f=0;for(e=l.length;f<e;f++)g=l[f],THREE.Shape.Utils.isClockWise(g)&&(l[f]=g.reverse())}var n=THREE.Shape.Utils.triangulateShape(j,l);f=0;for(e=l.length;f<e;f++)g=l[f],
j=j.concat(g);l=j.length;e=n.length;for(f=0;f<l;f++)g=j[f],this.vertices.push(new THREE.Vector3(g.x,g.y,0));for(f=0;f<e;f++)l=n[f],j=l[0]+h,g=l[1]+h,l=l[2]+h,this.faces.push(new THREE.Face3(j,g,l,null,null,c)),this.faceVertexUvs[0].push(d.generateBottomUV(this,a,b,j,g,l))};
THREE.LatheGeometry=function(a,b,c,d){THREE.Geometry.call(this);for(var b=b||12,c=c||0,d=d||2*Math.PI,f=1/(a.length-1),e=1/b,g=0,h=b;g<=h;g++)for(var j=c+g*e*d,l=Math.cos(j),n=Math.sin(j),j=0,r=a.length;j<r;j++){var p=a[j],s=new THREE.Vector3;s.x=l*p.x-n*p.y;s.y=n*p.x+l*p.y;s.z=p.z;this.vertices.push(s)}c=a.length;g=0;for(h=b;g<h;g++){j=0;for(r=a.length-1;j<r;j++)d=b=j+c*g,n=b+c,l=b+1+c,this.faces.push(new THREE.Face4(d,n,l,b+1)),l=g*e,b=j*f,d=l+e,n=b+f,this.faceVertexUvs[0].push([new THREE.Vector2(l,
b),new THREE.Vector2(d,b),new THREE.Vector2(d,n),new THREE.Vector2(l,n)])}this.mergeVertices();this.computeCentroids();this.computeFaceNormals();this.computeVertexNormals()};THREE.LatheGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.PlaneGeometry=function(a,b,c,d){THREE.Geometry.call(this);this.width=a;this.height=b;this.widthSegments=c||1;this.heightSegments=d||1;for(var c=a/2,f=b/2,d=this.widthSegments,e=this.heightSegments,g=d+1,h=e+1,j=this.width/d,l=this.height/e,n=new THREE.Vector3(0,0,1),a=0;a<h;a++)for(b=0;b<g;b++)this.vertices.push(new THREE.Vector3(b*j-c,-(a*l-f),0));for(a=0;a<e;a++)for(b=0;b<d;b++)c=new THREE.Face4(b+g*a,b+g*(a+1),b+1+g*(a+1),b+1+g*a),c.normal.copy(n),c.vertexNormals.push(n.clone(),n.clone(),
n.clone(),n.clone()),this.faces.push(c),this.faceVertexUvs[0].push([new THREE.Vector2(b/d,1-a/e),new THREE.Vector2(b/d,1-(a+1)/e),new THREE.Vector2((b+1)/d,1-(a+1)/e),new THREE.Vector2((b+1)/d,1-a/e)]);this.computeCentroids()};THREE.PlaneGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.SphereGeometry=function(a,b,c,d,f,e,g){THREE.Geometry.call(this);this.radius=a||50;this.widthSegments=Math.max(3,Math.floor(b)||8);this.heightSegments=Math.max(2,Math.floor(c)||6);for(var d=void 0!==d?d:0,f=void 0!==f?f:2*Math.PI,e=void 0!==e?e:0,g=void 0!==g?g:Math.PI,h=[],j=[],c=0;c<=this.heightSegments;c++){for(var l=[],n=[],b=0;b<=this.widthSegments;b++){var r=b/this.widthSegments,p=c/this.heightSegments,s=new THREE.Vector3;s.x=-this.radius*Math.cos(d+r*f)*Math.sin(e+p*g);s.y=this.radius*
Math.cos(e+p*g);s.z=this.radius*Math.sin(d+r*f)*Math.sin(e+p*g);this.vertices.push(s);l.push(this.vertices.length-1);n.push(new THREE.Vector2(r,1-p))}h.push(l);j.push(n)}for(c=0;c<this.heightSegments;c++)for(b=0;b<this.widthSegments;b++){var d=h[c][b+1],f=h[c][b],e=h[c+1][b],g=h[c+1][b+1],l=this.vertices[d].clone().normalize(),n=this.vertices[f].clone().normalize(),r=this.vertices[e].clone().normalize(),p=this.vertices[g].clone().normalize(),s=j[c][b+1].clone(),t=j[c][b].clone(),m=j[c+1][b].clone(),
v=j[c+1][b+1].clone();Math.abs(this.vertices[d].y)===this.radius?(this.faces.push(new THREE.Face3(d,e,g,[l,r,p])),this.faceVertexUvs[0].push([s,m,v])):Math.abs(this.vertices[e].y)===this.radius?(this.faces.push(new THREE.Face3(d,f,e,[l,n,r])),this.faceVertexUvs[0].push([s,t,m])):(this.faces.push(new THREE.Face4(d,f,e,g,[l,n,r,p])),this.faceVertexUvs[0].push([s,t,m,v]))}this.computeCentroids();this.computeFaceNormals();this.boundingSphere=new THREE.Sphere(new THREE.Vector3,a)};
THREE.SphereGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.TextGeometry=function(a,b){var c=THREE.FontUtils.generateShapes(a,b);b.amount=void 0!==b.height?b.height:50;void 0===b.bevelThickness&&(b.bevelThickness=10);void 0===b.bevelSize&&(b.bevelSize=8);void 0===b.bevelEnabled&&(b.bevelEnabled=!1);THREE.ExtrudeGeometry.call(this,c,b)};THREE.TextGeometry.prototype=Object.create(THREE.ExtrudeGeometry.prototype);
THREE.TorusGeometry=function(a,b,c,d,f){THREE.Geometry.call(this);this.radius=a||100;this.tube=b||40;this.radialSegments=c||8;this.tubularSegments=d||6;this.arc=f||2*Math.PI;f=new THREE.Vector3;a=[];b=[];for(c=0;c<=this.radialSegments;c++)for(d=0;d<=this.tubularSegments;d++){var e=d/this.tubularSegments*this.arc,g=2*c/this.radialSegments*Math.PI;f.x=this.radius*Math.cos(e);f.y=this.radius*Math.sin(e);var h=new THREE.Vector3;h.x=(this.radius+this.tube*Math.cos(g))*Math.cos(e);h.y=(this.radius+this.tube*
Math.cos(g))*Math.sin(e);h.z=this.tube*Math.sin(g);this.vertices.push(h);a.push(new THREE.Vector2(d/this.tubularSegments,c/this.radialSegments));b.push(h.clone().sub(f).normalize())}for(c=1;c<=this.radialSegments;c++)for(d=1;d<=this.tubularSegments;d++){var f=(this.tubularSegments+1)*c+d-1,e=(this.tubularSegments+1)*(c-1)+d-1,g=(this.tubularSegments+1)*(c-1)+d,h=(this.tubularSegments+1)*c+d,j=new THREE.Face4(f,e,g,h,[b[f],b[e],b[g],b[h]]);j.normal.add(b[f]);j.normal.add(b[e]);j.normal.add(b[g]);j.normal.add(b[h]);
j.normal.normalize();this.faces.push(j);this.faceVertexUvs[0].push([a[f].clone(),a[e].clone(),a[g].clone(),a[h].clone()])}this.computeCentroids()};THREE.TorusGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.TorusKnotGeometry=function(a,b,c,d,f,e,g){function h(a,b,c,d,e,f){var g=Math.cos(a);Math.cos(b);b=Math.sin(a);a*=c/d;c=Math.cos(a);g*=0.5*e*(2+c);b*=0.5*e*(2+c);e=0.5*f*e*Math.sin(a);return new THREE.Vector3(g,b,e)}THREE.Geometry.call(this);this.radius=a||100;this.tube=b||40;this.radialSegments=c||64;this.tubularSegments=d||8;this.p=f||2;this.q=e||3;this.heightScale=g||1;this.grid=Array(this.radialSegments);c=new THREE.Vector3;d=new THREE.Vector3;f=new THREE.Vector3;for(a=0;a<this.radialSegments;++a){this.grid[a]=
Array(this.tubularSegments);for(b=0;b<this.tubularSegments;++b){var j=2*(a/this.radialSegments)*this.p*Math.PI,g=2*(b/this.tubularSegments)*Math.PI,e=h(j,g,this.q,this.p,this.radius,this.heightScale),j=h(j+0.01,g,this.q,this.p,this.radius,this.heightScale);c.subVectors(j,e);d.addVectors(j,e);f.crossVectors(c,d);d.crossVectors(f,c);f.normalize();d.normalize();j=-this.tube*Math.cos(g);g=this.tube*Math.sin(g);e.x+=j*d.x+g*f.x;e.y+=j*d.y+g*f.y;e.z+=j*d.z+g*f.z;this.grid[a][b]=this.vertices.push(new THREE.Vector3(e.x,
e.y,e.z))-1}}for(a=0;a<this.radialSegments;++a)for(b=0;b<this.tubularSegments;++b){var f=(a+1)%this.radialSegments,e=(b+1)%this.tubularSegments,c=this.grid[a][b],d=this.grid[f][b],f=this.grid[f][e],e=this.grid[a][e],g=new THREE.Vector2(a/this.radialSegments,b/this.tubularSegments),j=new THREE.Vector2((a+1)/this.radialSegments,b/this.tubularSegments),l=new THREE.Vector2((a+1)/this.radialSegments,(b+1)/this.tubularSegments),n=new THREE.Vector2(a/this.radialSegments,(b+1)/this.tubularSegments);this.faces.push(new THREE.Face4(c,
d,f,e));this.faceVertexUvs[0].push([g,j,l,n])}this.computeCentroids();this.computeFaceNormals();this.computeVertexNormals()};THREE.TorusKnotGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.TubeGeometry=function(a,b,c,d,f,e){THREE.Geometry.call(this);this.path=a;this.segments=b||64;this.radius=c||1;this.radiusSegments=d||8;this.closed=f||!1;e&&(this.debug=new THREE.Object3D);this.grid=[];var g,h,f=this.segments+1,j,l,n,e=new THREE.Vector3,r,p,s,b=new THREE.TubeGeometry.FrenetFrames(this.path,this.segments,this.closed);r=b.tangents;p=b.normals;s=b.binormals;this.tangents=r;this.normals=p;this.binormals=s;for(b=0;b<f;b++){this.grid[b]=[];d=b/(f-1);n=a.getPointAt(d);d=r[b];g=p[b];
h=s[b];this.debug&&(this.debug.add(new THREE.ArrowHelper(d,n,c,255)),this.debug.add(new THREE.ArrowHelper(g,n,c,16711680)),this.debug.add(new THREE.ArrowHelper(h,n,c,65280)));for(d=0;d<this.radiusSegments;d++)j=2*(d/this.radiusSegments)*Math.PI,l=-this.radius*Math.cos(j),j=this.radius*Math.sin(j),e.copy(n),e.x+=l*g.x+j*h.x,e.y+=l*g.y+j*h.y,e.z+=l*g.z+j*h.z,this.grid[b][d]=this.vertices.push(new THREE.Vector3(e.x,e.y,e.z))-1}for(b=0;b<this.segments;b++)for(d=0;d<this.radiusSegments;d++)f=this.closed?
(b+1)%this.segments:b+1,e=(d+1)%this.radiusSegments,a=this.grid[b][d],c=this.grid[f][d],f=this.grid[f][e],e=this.grid[b][e],r=new THREE.Vector2(b/this.segments,d/this.radiusSegments),p=new THREE.Vector2((b+1)/this.segments,d/this.radiusSegments),s=new THREE.Vector2((b+1)/this.segments,(d+1)/this.radiusSegments),g=new THREE.Vector2(b/this.segments,(d+1)/this.radiusSegments),this.faces.push(new THREE.Face4(a,c,f,e)),this.faceVertexUvs[0].push([r,p,s,g]);this.computeCentroids();this.computeFaceNormals();
this.computeVertexNormals()};THREE.TubeGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.TubeGeometry.FrenetFrames=function(a,b,c){new THREE.Vector3;var d=new THREE.Vector3;new THREE.Vector3;var f=[],e=[],g=[],h=new THREE.Vector3,j=new THREE.Matrix4,b=b+1,l,n,r;this.tangents=f;this.normals=e;this.binormals=g;for(l=0;l<b;l++)n=l/(b-1),f[l]=a.getTangentAt(n),f[l].normalize();e[0]=new THREE.Vector3;g[0]=new THREE.Vector3;a=Number.MAX_VALUE;l=Math.abs(f[0].x);n=Math.abs(f[0].y);r=Math.abs(f[0].z);l<=a&&(a=l,d.set(1,0,0));n<=a&&(a=n,d.set(0,1,0));r<=a&&d.set(0,0,1);h.crossVectors(f[0],
d).normalize();e[0].crossVectors(f[0],h);g[0].crossVectors(f[0],e[0]);for(l=1;l<b;l++)e[l]=e[l-1].clone(),g[l]=g[l-1].clone(),h.crossVectors(f[l-1],f[l]),1E-4<h.length()&&(h.normalize(),d=Math.acos(f[l-1].dot(f[l])),e[l].applyMatrix4(j.makeRotationAxis(h,d))),g[l].crossVectors(f[l],e[l]);if(c){d=Math.acos(e[0].dot(e[b-1]));d/=b-1;0<f[0].dot(h.crossVectors(e[0],e[b-1]))&&(d=-d);for(l=1;l<b;l++)e[l].applyMatrix4(j.makeRotationAxis(f[l],d*l)),g[l].crossVectors(f[l],e[l])}};
THREE.PolyhedronGeometry=function(a,b,c,d){function f(a){var b=a.normalize().clone();b.index=j.vertices.push(b)-1;var c=Math.atan2(a.z,-a.x)/2/Math.PI+0.5,a=Math.atan2(-a.y,Math.sqrt(a.x*a.x+a.z*a.z))/Math.PI+0.5;b.uv=new THREE.Vector2(c,1-a);return b}function e(a,b,c,d){1>d?(d=new THREE.Face3(a.index,b.index,c.index,[a.clone(),b.clone(),c.clone()]),d.centroid.add(a).add(b).add(c).divideScalar(3),d.normal=d.centroid.clone().normalize(),j.faces.push(d),d=Math.atan2(d.centroid.z,-d.centroid.x),j.faceVertexUvs[0].push([h(a.uv,
a,d),h(b.uv,b,d),h(c.uv,c,d)])):(d-=1,e(a,g(a,b),g(a,c),d),e(g(a,b),b,g(b,c),d),e(g(a,c),g(b,c),c,d),e(g(a,b),g(b,c),g(a,c),d))}function g(a,b){r[a.index]||(r[a.index]=[]);r[b.index]||(r[b.index]=[]);var c=r[a.index][b.index];void 0===c&&(r[a.index][b.index]=r[b.index][a.index]=c=f((new THREE.Vector3).addVectors(a,b).divideScalar(2)));return c}function h(a,b,c){0>c&&1===a.x&&(a=new THREE.Vector2(a.x-1,a.y));0===b.x&&0===b.z&&(a=new THREE.Vector2(c/2/Math.PI+0.5,a.y));return a}THREE.Geometry.call(this);
for(var c=c||1,d=d||0,j=this,l=0,n=a.length;l<n;l++)f(new THREE.Vector3(a[l][0],a[l][1],a[l][2]));for(var r=[],a=this.vertices,l=0,n=b.length;l<n;l++)e(a[b[l][0]],a[b[l][1]],a[b[l][2]],d);this.mergeVertices();l=0;for(n=this.vertices.length;l<n;l++)this.vertices[l].multiplyScalar(c);this.computeCentroids();this.boundingSphere=new THREE.Sphere(new THREE.Vector3,c)};THREE.PolyhedronGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.IcosahedronGeometry=function(a,b){var c=(1+Math.sqrt(5))/2;THREE.PolyhedronGeometry.call(this,[[-1,c,0],[1,c,0],[-1,-c,0],[1,-c,0],[0,-1,c],[0,1,c],[0,-1,-c],[0,1,-c],[c,0,-1],[c,0,1],[-c,0,-1],[-c,0,1]],[[0,11,5],[0,5,1],[0,1,7],[0,7,10],[0,10,11],[1,5,9],[5,11,4],[11,10,2],[10,7,6],[7,1,8],[3,9,4],[3,4,2],[3,2,6],[3,6,8],[3,8,9],[4,9,5],[2,4,11],[6,2,10],[8,6,7],[9,8,1]],a,b)};THREE.IcosahedronGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.OctahedronGeometry=function(a,b){THREE.PolyhedronGeometry.call(this,[[1,0,0],[-1,0,0],[0,1,0],[0,-1,0],[0,0,1],[0,0,-1]],[[0,2,4],[0,4,3],[0,3,5],[0,5,2],[1,2,5],[1,5,3],[1,3,4],[1,4,2]],a,b)};THREE.OctahedronGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.TetrahedronGeometry=function(a,b){THREE.PolyhedronGeometry.call(this,[[1,1,1],[-1,-1,1],[-1,1,-1],[1,-1,-1]],[[2,1,0],[0,3,2],[1,3,0],[2,3,1]],a,b)};THREE.TetrahedronGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.ParametricGeometry=function(a,b,c,d){THREE.Geometry.call(this);var f=this.vertices,e=this.faces,g=this.faceVertexUvs[0],d=void 0===d?!1:d,h,j,l,n,r=b+1;for(h=0;h<=c;h++){n=h/c;for(j=0;j<=b;j++)l=j/b,l=a(l,n),f.push(l)}var p,s,t,m;for(h=0;h<c;h++)for(j=0;j<b;j++)a=h*r+j,f=h*r+j+1,n=(h+1)*r+j,l=(h+1)*r+j+1,p=new THREE.Vector2(j/b,h/c),s=new THREE.Vector2((j+1)/b,h/c),t=new THREE.Vector2(j/b,(h+1)/c),m=new THREE.Vector2((j+1)/b,(h+1)/c),d?(e.push(new THREE.Face3(a,f,n)),e.push(new THREE.Face3(f,
l,n)),g.push([p,s,t]),g.push([s,m,t])):(e.push(new THREE.Face4(a,f,l,n)),g.push([p,s,m,t]));this.computeCentroids();this.computeFaceNormals();this.computeVertexNormals()};THREE.ParametricGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.ConvexGeometry=function(a){function b(a){var b=a.length();return new THREE.Vector2(a.x/b,a.y/b)}THREE.Geometry.call(this);for(var c=[[0,1,2],[0,2,1]],d=3;d<a.length;d++){var f=d,e=a[f].clone(),g=e.length();e.x+=2E-6*g*(Math.random()-0.5);e.y+=2E-6*g*(Math.random()-0.5);e.z+=2E-6*g*(Math.random()-0.5);for(var g=[],h=0;h<c.length;){var j=c[h],l=e,n=a[j[0]],r;r=n;var p=a[j[1]],s=a[j[2]],t=new THREE.Vector3,m=new THREE.Vector3;t.subVectors(s,p);m.subVectors(r,p);t.cross(m);t.normalize();r=t;n=r.dot(n);
if(r.dot(l)>=n){for(l=0;3>l;l++){n=[j[l],j[(l+1)%3]];r=!0;for(p=0;p<g.length;p++)if(g[p][0]===n[1]&&g[p][1]===n[0]){g[p]=g[g.length-1];g.pop();r=!1;break}r&&g.push(n)}c[h]=c[c.length-1];c.pop()}else h++}for(p=0;p<g.length;p++)c.push([g[p][0],g[p][1],f])}f=0;e=Array(a.length);for(d=0;d<c.length;d++){g=c[d];for(h=0;3>h;h++)void 0===e[g[h]]&&(e[g[h]]=f++,this.vertices.push(a[g[h]])),g[h]=e[g[h]]}for(d=0;d<c.length;d++)this.faces.push(new THREE.Face3(c[d][0],c[d][1],c[d][2]));for(d=0;d<this.faces.length;d++)g=
this.faces[d],this.faceVertexUvs[0].push([b(this.vertices[g.a]),b(this.vertices[g.b]),b(this.vertices[g.c])]);this.computeCentroids();this.computeFaceNormals();this.computeVertexNormals()};THREE.ConvexGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.AxisHelper=function(a){var b=new THREE.Geometry;b.vertices.push(new THREE.Vector3,new THREE.Vector3(a||1,0,0),new THREE.Vector3,new THREE.Vector3(0,a||1,0),new THREE.Vector3,new THREE.Vector3(0,0,a||1));b.colors.push(new THREE.Color(16711680),new THREE.Color(16755200),new THREE.Color(65280),new THREE.Color(11206400),new THREE.Color(255),new THREE.Color(43775));a=new THREE.LineBasicMaterial({vertexColors:THREE.VertexColors});THREE.Line.call(this,b,a,THREE.LinePieces)};
THREE.AxisHelper.prototype=Object.create(THREE.Line.prototype);
THREE.ArrowHelper=function(a,b,c,d){THREE.Object3D.call(this);void 0===c&&(c=20);void 0===d&&(d=16776960);var f=new THREE.Geometry;f.vertices.push(new THREE.Vector3(0,0,0));f.vertices.push(new THREE.Vector3(0,1,0));this.line=new THREE.Line(f,new THREE.LineBasicMaterial({color:d}));this.add(this.line);f=new THREE.CylinderGeometry(0,0.05,0.25,5,1);this.cone=new THREE.Mesh(f,new THREE.MeshBasicMaterial({color:d}));this.cone.position.set(0,1,0);this.add(this.cone);b instanceof THREE.Vector3&&(this.position=
b);this.setDirection(a);this.setLength(c)};THREE.ArrowHelper.prototype=Object.create(THREE.Object3D.prototype);THREE.ArrowHelper.prototype.setDirection=function(a){var b=THREE.ArrowHelper.__v1.copy(a).normalize();0.999<b.y?this.rotation.set(0,0,0):-0.999>b.y?this.rotation.set(Math.PI,0,0):(a=THREE.ArrowHelper.__v2.set(b.z,0,-b.x).normalize(),b=Math.acos(b.y),a=THREE.ArrowHelper.__q1.setFromAxisAngle(a,b),this.rotation.setEulerFromQuaternion(a,this.eulerOrder))};
THREE.ArrowHelper.prototype.setLength=function(a){this.scale.set(a,a,a)};THREE.ArrowHelper.prototype.setColor=function(a){this.line.material.color.setHex(a);this.cone.material.color.setHex(a)};THREE.ArrowHelper.__v1=new THREE.Vector3;THREE.ArrowHelper.__v2=new THREE.Vector3;THREE.ArrowHelper.__q1=new THREE.Quaternion;
THREE.CameraHelper=function(a){function b(a,b,d){c(a,d);c(b,d)}function c(a,b){d.geometry.vertices.push(new THREE.Vector3);d.geometry.colors.push(new THREE.Color(b));void 0===d.pointMap[a]&&(d.pointMap[a]=[]);d.pointMap[a].push(d.geometry.vertices.length-1)}THREE.Line.call(this);var d=this;this.geometry=new THREE.Geometry;this.material=new THREE.LineBasicMaterial({color:16777215,vertexColors:THREE.FaceColors});this.type=THREE.LinePieces;this.matrixWorld=a.matrixWorld;this.matrixAutoUpdate=!1;this.pointMap=
{};b("n1","n2",16755200);b("n2","n4",16755200);b("n4","n3",16755200);b("n3","n1",16755200);b("f1","f2",16755200);b("f2","f4",16755200);b("f4","f3",16755200);b("f3","f1",16755200);b("n1","f1",16755200);b("n2","f2",16755200);b("n3","f3",16755200);b("n4","f4",16755200);b("p","n1",16711680);b("p","n2",16711680);b("p","n3",16711680);b("p","n4",16711680);b("u1","u2",43775);b("u2","u3",43775);b("u3","u1",43775);b("c","t",16777215);b("p","c",3355443);b("cn1","cn2",3355443);b("cn3","cn4",3355443);b("cf1",
"cf2",3355443);b("cf3","cf4",3355443);this.camera=a;this.update(a)};THREE.CameraHelper.prototype=Object.create(THREE.Line.prototype);
THREE.CameraHelper.prototype.update=function(){function a(a,d,f,e){THREE.CameraHelper.__v.set(d,f,e);THREE.CameraHelper.__projector.unprojectVector(THREE.CameraHelper.__v,THREE.CameraHelper.__c);a=b.pointMap[a];if(void 0!==a){d=0;for(f=a.length;d<f;d++)b.geometry.vertices[a[d]].copy(THREE.CameraHelper.__v)}}var b=this;THREE.CameraHelper.__c.projectionMatrix.copy(this.camera.projectionMatrix);a("c",0,0,-1);a("t",0,0,1);a("n1",-1,-1,-1);a("n2",1,-1,-1);a("n3",-1,1,-1);a("n4",1,1,-1);a("f1",-1,-1,1);
a("f2",1,-1,1);a("f3",-1,1,1);a("f4",1,1,1);a("u1",0.7,1.1,-1);a("u2",-0.7,1.1,-1);a("u3",0,2,-1);a("cf1",-1,0,1);a("cf2",1,0,1);a("cf3",0,-1,1);a("cf4",0,1,1);a("cn1",-1,0,-1);a("cn2",1,0,-1);a("cn3",0,-1,-1);a("cn4",0,1,-1);this.geometry.verticesNeedUpdate=!0};THREE.CameraHelper.__projector=new THREE.Projector;THREE.CameraHelper.__v=new THREE.Vector3;THREE.CameraHelper.__c=new THREE.Camera;
THREE.DirectionalLightHelper=function(a,b){THREE.Object3D.call(this);this.light=a;this.position=a.position;this.direction=new THREE.Vector3;this.direction.subVectors(a.target.position,a.position);var c=THREE.Math.clamp(a.intensity,0,1);this.color=a.color.clone();this.color.multiplyScalar(c);var c=this.color.getHex(),d=new THREE.SphereGeometry(b,16,8),f=new THREE.AsteriskGeometry(1.25*b,2.25*b),e=new THREE.MeshBasicMaterial({color:c,fog:!1}),g=new THREE.LineBasicMaterial({color:c,fog:!1});this.lightSphere=
new THREE.Mesh(d,e);this.lightRays=new THREE.Line(f,g,THREE.LinePieces);this.add(this.lightSphere);this.add(this.lightRays);this.lightSphere.properties.isGizmo=!0;this.lightSphere.properties.gizmoSubject=a;this.lightSphere.properties.gizmoRoot=this;this.targetSphere=null;void 0!==a.target.properties.targetInverse&&(d=new THREE.SphereGeometry(b,8,4),f=new THREE.MeshBasicMaterial({color:c,wireframe:!0,fog:!1}),this.targetSphere=new THREE.Mesh(d,f),this.targetSphere.position=a.target.position,this.targetSphere.properties.isGizmo=
!0,this.targetSphere.properties.gizmoSubject=a.target,this.targetSphere.properties.gizmoRoot=this.targetSphere,c=new THREE.LineDashedMaterial({color:c,dashSize:4,gapSize:4,opacity:0.75,transparent:!0,fog:!1}),d=new THREE.Geometry,d.vertices.push(this.position.clone()),d.vertices.push(this.targetSphere.position.clone()),d.computeLineDistances(),this.targetLine=new THREE.Line(d,c),this.targetLine.properties.isGizmo=!0);this.properties.isGizmo=!0};THREE.DirectionalLightHelper.prototype=Object.create(THREE.Object3D.prototype);
THREE.DirectionalLightHelper.prototype.update=function(){this.direction.subVectors(this.light.target.position,this.light.position);var a=THREE.Math.clamp(this.light.intensity,0,1);this.color.copy(this.light.color);this.color.multiplyScalar(a);this.lightSphere.material.color.copy(this.color);this.lightRays.material.color.copy(this.color);null!==this.targetSphere&&(this.targetSphere.material.color.copy(this.color),this.targetLine.material.color.copy(this.color),this.targetLine.geometry.vertices[0].copy(this.light.position),
this.targetLine.geometry.vertices[1].copy(this.light.target.position),this.targetLine.geometry.computeLineDistances(),this.targetLine.geometry.verticesNeedUpdate=!0)};
THREE.HemisphereLightHelper=function(a,b,c){THREE.Object3D.call(this);this.light=a;this.position=a.position;var d=THREE.Math.clamp(a.intensity,0,1);this.color=a.color.clone();this.color.multiplyScalar(d);var f=this.color.getHex();this.groundColor=a.groundColor.clone();this.groundColor.multiplyScalar(d);for(var d=this.groundColor.getHex(),e=new THREE.SphereGeometry(b,16,8,0,2*Math.PI,0,0.5*Math.PI),g=new THREE.SphereGeometry(b,16,8,0,2*Math.PI,0.5*Math.PI,Math.PI),h=new THREE.MeshBasicMaterial({color:f,
fog:!1}),j=new THREE.MeshBasicMaterial({color:d,fog:!1}),l=0,n=e.faces.length;l<n;l++)e.faces[l].materialIndex=0;l=0;for(n=g.faces.length;l<n;l++)g.faces[l].materialIndex=1;THREE.GeometryUtils.merge(e,g);this.lightSphere=new THREE.Mesh(e,new THREE.MeshFaceMaterial([h,j]));this.lightArrow=new THREE.ArrowHelper(new THREE.Vector3(0,1,0),new THREE.Vector3(0,1.1*(b+c),0),c,f);this.lightArrow.rotation.x=Math.PI;this.lightArrowGround=new THREE.ArrowHelper(new THREE.Vector3(0,1,0),new THREE.Vector3(0,-1.1*
(b+c),0),c,d);b=new THREE.Object3D;b.rotation.x=0.5*-Math.PI;b.add(this.lightSphere);b.add(this.lightArrow);b.add(this.lightArrowGround);this.add(b);this.lightSphere.properties.isGizmo=!0;this.lightSphere.properties.gizmoSubject=a;this.lightSphere.properties.gizmoRoot=this;this.properties.isGizmo=!0;this.target=new THREE.Vector3;this.lookAt(this.target)};THREE.HemisphereLightHelper.prototype=Object.create(THREE.Object3D.prototype);
THREE.HemisphereLightHelper.prototype.update=function(){var a=THREE.Math.clamp(this.light.intensity,0,1);this.color.copy(this.light.color);this.color.multiplyScalar(a);this.groundColor.copy(this.light.groundColor);this.groundColor.multiplyScalar(a);this.lightSphere.material.materials[0].color.copy(this.color);this.lightSphere.material.materials[1].color.copy(this.groundColor);this.lightArrow.setColor(this.color.getHex());this.lightArrowGround.setColor(this.groundColor.getHex());this.lookAt(this.target)};
THREE.PointLightHelper=function(a,b){THREE.Object3D.call(this);this.light=a;this.position=a.position;var c=THREE.Math.clamp(a.intensity,0,1);this.color=a.color.clone();this.color.multiplyScalar(c);var d=this.color.getHex(),c=new THREE.SphereGeometry(b,16,8),f=new THREE.AsteriskGeometry(1.25*b,2.25*b),e=new THREE.IcosahedronGeometry(1,2),g=new THREE.MeshBasicMaterial({color:d,fog:!1}),h=new THREE.LineBasicMaterial({color:d,fog:!1}),d=new THREE.MeshBasicMaterial({color:d,fog:!1,wireframe:!0,opacity:0.1,
transparent:!0});this.lightSphere=new THREE.Mesh(c,g);this.lightRays=new THREE.Line(f,h,THREE.LinePieces);this.lightDistance=new THREE.Mesh(e,d);c=a.distance;0===c?this.lightDistance.visible=!1:this.lightDistance.scale.set(c,c,c);this.add(this.lightSphere);this.add(this.lightRays);this.add(this.lightDistance);this.lightSphere.properties.isGizmo=!0;this.lightSphere.properties.gizmoSubject=a;this.lightSphere.properties.gizmoRoot=this;this.properties.isGizmo=!0};THREE.PointLightHelper.prototype=Object.create(THREE.Object3D.prototype);
THREE.PointLightHelper.prototype.update=function(){var a=THREE.Math.clamp(this.light.intensity,0,1);this.color.copy(this.light.color);this.color.multiplyScalar(a);this.lightSphere.material.color.copy(this.color);this.lightRays.material.color.copy(this.color);this.lightDistance.material.color.copy(this.color);a=this.light.distance;0===a?this.lightDistance.visible=!1:(this.lightDistance.visible=!0,this.lightDistance.scale.set(a,a,a))};
THREE.SpotLightHelper=function(a,b){THREE.Object3D.call(this);this.light=a;this.position=a.position;this.direction=new THREE.Vector3;this.direction.subVectors(a.target.position,a.position);var c=THREE.Math.clamp(a.intensity,0,1);this.color=a.color.clone();this.color.multiplyScalar(c);var c=this.color.getHex(),d=new THREE.SphereGeometry(b,16,8),f=new THREE.AsteriskGeometry(1.25*b,2.25*b),e=new THREE.CylinderGeometry(1E-4,1,1,8,1,!0),g=new THREE.Matrix4;g.rotateX(-Math.PI/2);g.translate(new THREE.Vector3(0,
-0.5,0));e.applyMatrix(g);var h=new THREE.MeshBasicMaterial({color:c,fog:!1}),g=new THREE.LineBasicMaterial({color:c,fog:!1}),j=new THREE.MeshBasicMaterial({color:c,fog:!1,wireframe:!0,opacity:0.3,transparent:!0});this.lightSphere=new THREE.Mesh(d,h);this.lightCone=new THREE.Mesh(e,j);d=a.distance?a.distance:1E4;e=2*d*Math.tan(0.5*a.angle);this.lightCone.scale.set(e,e,d);this.lightRays=new THREE.Line(f,g,THREE.LinePieces);this.gyroscope=new THREE.Gyroscope;this.gyroscope.add(this.lightSphere);this.gyroscope.add(this.lightRays);
this.add(this.gyroscope);this.add(this.lightCone);this.lookAt(a.target.position);this.lightSphere.properties.isGizmo=!0;this.lightSphere.properties.gizmoSubject=a;this.lightSphere.properties.gizmoRoot=this;this.targetSphere=null;void 0!==a.target.properties.targetInverse&&(f=new THREE.SphereGeometry(b,8,4),g=new THREE.MeshBasicMaterial({color:c,wireframe:!0,fog:!1}),this.targetSphere=new THREE.Mesh(f,g),this.targetSphere.position=a.target.position,this.targetSphere.properties.isGizmo=!0,this.targetSphere.properties.gizmoSubject=
a.target,this.targetSphere.properties.gizmoRoot=this.targetSphere,c=new THREE.LineDashedMaterial({color:c,dashSize:4,gapSize:4,opacity:0.75,transparent:!0,fog:!1}),f=new THREE.Geometry,f.vertices.push(this.position.clone()),f.vertices.push(this.targetSphere.position.clone()),f.computeLineDistances(),this.targetLine=new THREE.Line(f,c),this.targetLine.properties.isGizmo=!0);this.properties.isGizmo=!0};THREE.SpotLightHelper.prototype=Object.create(THREE.Object3D.prototype);
THREE.SpotLightHelper.prototype.update=function(){this.direction.subVectors(this.light.target.position,this.light.position);this.lookAt(this.light.target.position);var a=this.light.distance?this.light.distance:1E4,b=2*a*Math.tan(0.5*this.light.angle);this.lightCone.scale.set(b,b,a);a=THREE.Math.clamp(this.light.intensity,0,1);this.color.copy(this.light.color);this.color.multiplyScalar(a);this.lightSphere.material.color.copy(this.color);this.lightRays.material.color.copy(this.color);this.lightCone.material.color.copy(this.color);
null!==this.targetSphere&&(this.targetSphere.material.color.copy(this.color),this.targetLine.material.color.copy(this.color),this.targetLine.geometry.vertices[0].copy(this.light.position),this.targetLine.geometry.vertices[1].copy(this.light.target.position),this.targetLine.geometry.computeLineDistances(),this.targetLine.geometry.verticesNeedUpdate=!0)};THREE.ImmediateRenderObject=function(){THREE.Object3D.call(this);this.render=function(){}};THREE.ImmediateRenderObject.prototype=Object.create(THREE.Object3D.prototype);
THREE.LensFlare=function(a,b,c,d,f){THREE.Object3D.call(this);this.lensFlares=[];this.positionScreen=new THREE.Vector3;this.customUpdateCallback=void 0;void 0!==a&&this.add(a,b,c,d,f)};THREE.LensFlare.prototype=Object.create(THREE.Object3D.prototype);
THREE.LensFlare.prototype.add=function(a,b,c,d,f,e){void 0===b&&(b=-1);void 0===c&&(c=0);void 0===e&&(e=1);void 0===f&&(f=new THREE.Color(16777215));void 0===d&&(d=THREE.NormalBlending);c=Math.min(c,Math.max(0,c));this.lensFlares.push({texture:a,size:b,distance:c,x:0,y:0,z:0,scale:1,rotation:1,opacity:e,color:f,blending:d})};
THREE.LensFlare.prototype.updateLensFlares=function(){var a,b=this.lensFlares.length,c,d=2*-this.positionScreen.x,f=2*-this.positionScreen.y;for(a=0;a<b;a++)c=this.lensFlares[a],c.x=this.positionScreen.x+d*c.distance,c.y=this.positionScreen.y+f*c.distance,c.wantedRotation=0.25*c.x*Math.PI,c.rotation+=0.25*(c.wantedRotation-c.rotation)};
THREE.MorphBlendMesh=function(a,b){THREE.Mesh.call(this,a,b);this.animationsMap={};this.animationsList=[];var c=this.geometry.morphTargets.length;this.createAnimation("__default",0,c-1,c/1);this.setAnimationWeight("__default",1)};THREE.MorphBlendMesh.prototype=Object.create(THREE.Mesh.prototype);
THREE.MorphBlendMesh.prototype.createAnimation=function(a,b,c,d){b={startFrame:b,endFrame:c,length:c-b+1,fps:d,duration:(c-b)/d,lastFrame:0,currentFrame:0,active:!1,time:0,direction:1,weight:1,directionBackwards:!1,mirroredLoop:!1};this.animationsMap[a]=b;this.animationsList.push(b)};
THREE.MorphBlendMesh.prototype.autoCreateAnimations=function(a){for(var b=/([a-z]+)(\d+)/,c,d={},f=this.geometry,e=0,g=f.morphTargets.length;e<g;e++){var h=f.morphTargets[e].name.match(b);if(h&&1<h.length){var j=h[1];d[j]||(d[j]={start:Infinity,end:-Infinity});h=d[j];e<h.start&&(h.start=e);e>h.end&&(h.end=e);c||(c=j)}}for(j in d)h=d[j],this.createAnimation(j,h.start,h.end,a);this.firstAnimation=c};
THREE.MorphBlendMesh.prototype.setAnimationDirectionForward=function(a){if(a=this.animationsMap[a])a.direction=1,a.directionBackwards=!1};THREE.MorphBlendMesh.prototype.setAnimationDirectionBackward=function(a){if(a=this.animationsMap[a])a.direction=-1,a.directionBackwards=!0};THREE.MorphBlendMesh.prototype.setAnimationFPS=function(a,b){var c=this.animationsMap[a];c&&(c.fps=b,c.duration=(c.end-c.start)/c.fps)};
THREE.MorphBlendMesh.prototype.setAnimationDuration=function(a,b){var c=this.animationsMap[a];c&&(c.duration=b,c.fps=(c.end-c.start)/c.duration)};THREE.MorphBlendMesh.prototype.setAnimationWeight=function(a,b){var c=this.animationsMap[a];c&&(c.weight=b)};THREE.MorphBlendMesh.prototype.setAnimationTime=function(a,b){var c=this.animationsMap[a];c&&(c.time=b)};THREE.MorphBlendMesh.prototype.getAnimationTime=function(a){var b=0;if(a=this.animationsMap[a])b=a.time;return b};
THREE.MorphBlendMesh.prototype.getAnimationDuration=function(a){var b=-1;if(a=this.animationsMap[a])b=a.duration;return b};THREE.MorphBlendMesh.prototype.playAnimation=function(a){var b=this.animationsMap[a];b?(b.time=0,b.active=!0):console.warn("animation["+a+"] undefined")};THREE.MorphBlendMesh.prototype.stopAnimation=function(a){if(a=this.animationsMap[a])a.active=!1};
THREE.MorphBlendMesh.prototype.update=function(a){for(var b=0,c=this.animationsList.length;b<c;b++){var d=this.animationsList[b];if(d.active){var f=d.duration/d.length;d.time+=d.direction*a;if(d.mirroredLoop){if(d.time>d.duration||0>d.time)d.direction*=-1,d.time>d.duration&&(d.time=d.duration,d.directionBackwards=!0),0>d.time&&(d.time=0,d.directionBackwards=!1)}else d.time%=d.duration,0>d.time&&(d.time+=d.duration);var e=d.startFrame+THREE.Math.clamp(Math.floor(d.time/f),0,d.length-1),g=d.weight;
e!==d.currentFrame&&(this.morphTargetInfluences[d.lastFrame]=0,this.morphTargetInfluences[d.currentFrame]=1*g,this.morphTargetInfluences[e]=0,d.lastFrame=d.currentFrame,d.currentFrame=e);f=d.time%f/f;d.directionBackwards&&(f=1-f);this.morphTargetInfluences[d.currentFrame]=f*g;this.morphTargetInfluences[d.lastFrame]=(1-f)*g}}};
THREE.LensFlarePlugin=function(){function a(a,c){var d=b.createProgram(),e=b.createShader(b.FRAGMENT_SHADER),f=b.createShader(b.VERTEX_SHADER),g="precision "+c+" float;\n";b.shaderSource(e,g+a.fragmentShader);b.shaderSource(f,g+a.vertexShader);b.compileShader(e);b.compileShader(f);b.attachShader(d,e);b.attachShader(d,f);b.linkProgram(d);return d}var b,c,d,f,e,g,h,j,l,n,r,p,s;this.init=function(t){b=t.context;c=t;d=t.getPrecision();f=new Float32Array(16);e=new Uint16Array(6);t=0;f[t++]=-1;f[t++]=-1;
f[t++]=0;f[t++]=0;f[t++]=1;f[t++]=-1;f[t++]=1;f[t++]=0;f[t++]=1;f[t++]=1;f[t++]=1;f[t++]=1;f[t++]=-1;f[t++]=1;f[t++]=0;f[t++]=1;t=0;e[t++]=0;e[t++]=1;e[t++]=2;e[t++]=0;e[t++]=2;e[t++]=3;g=b.createBuffer();h=b.createBuffer();b.bindBuffer(b.ARRAY_BUFFER,g);b.bufferData(b.ARRAY_BUFFER,f,b.STATIC_DRAW);b.bindBuffer(b.ELEMENT_ARRAY_BUFFER,h);b.bufferData(b.ELEMENT_ARRAY_BUFFER,e,b.STATIC_DRAW);j=b.createTexture();l=b.createTexture();b.bindTexture(b.TEXTURE_2D,j);b.texImage2D(b.TEXTURE_2D,0,b.RGB,16,16,
0,b.RGB,b.UNSIGNED_BYTE,null);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_WRAP_S,b.CLAMP_TO_EDGE);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_WRAP_T,b.CLAMP_TO_EDGE);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_MAG_FILTER,b.NEAREST);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_MIN_FILTER,b.NEAREST);b.bindTexture(b.TEXTURE_2D,l);b.texImage2D(b.TEXTURE_2D,0,b.RGBA,16,16,0,b.RGBA,b.UNSIGNED_BYTE,null);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_WRAP_S,b.CLAMP_TO_EDGE);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_WRAP_T,b.CLAMP_TO_EDGE);
b.texParameteri(b.TEXTURE_2D,b.TEXTURE_MAG_FILTER,b.NEAREST);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_MIN_FILTER,b.NEAREST);0>=b.getParameter(b.MAX_VERTEX_TEXTURE_IMAGE_UNITS)?(n=!1,r=a(THREE.ShaderFlares.lensFlare,d)):(n=!0,r=a(THREE.ShaderFlares.lensFlareVertexTexture,d));p={};s={};p.vertex=b.getAttribLocation(r,"position");p.uv=b.getAttribLocation(r,"uv");s.renderType=b.getUniformLocation(r,"renderType");s.map=b.getUniformLocation(r,"map");s.occlusionMap=b.getUniformLocation(r,"occlusionMap");s.opacity=
b.getUniformLocation(r,"opacity");s.color=b.getUniformLocation(r,"color");s.scale=b.getUniformLocation(r,"scale");s.rotation=b.getUniformLocation(r,"rotation");s.screenPosition=b.getUniformLocation(r,"screenPosition")};this.render=function(a,d,e,f){var a=a.__webglFlares,q=a.length;if(q){var A=new THREE.Vector3,u=f/e,x=0.5*e,I=0.5*f,C=16/f,z=new THREE.Vector2(C*u,C),J=new THREE.Vector3(1,1,0),K=new THREE.Vector2(1,1),G=s,C=p;b.useProgram(r);b.enableVertexAttribArray(p.vertex);b.enableVertexAttribArray(p.uv);
b.uniform1i(G.occlusionMap,0);b.uniform1i(G.map,1);b.bindBuffer(b.ARRAY_BUFFER,g);b.vertexAttribPointer(C.vertex,2,b.FLOAT,!1,16,0);b.vertexAttribPointer(C.uv,2,b.FLOAT,!1,16,8);b.bindBuffer(b.ELEMENT_ARRAY_BUFFER,h);b.disable(b.CULL_FACE);b.depthMask(!1);var H,D,X,F,L;for(H=0;H<q;H++)if(C=16/f,z.set(C*u,C),F=a[H],A.set(F.matrixWorld.elements[12],F.matrixWorld.elements[13],F.matrixWorld.elements[14]),A.applyMatrix4(d.matrixWorldInverse),A.applyProjection(d.projectionMatrix),J.copy(A),K.x=J.x*x+x,
K.y=J.y*I+I,n||0<K.x&&K.x<e&&0<K.y&&K.y<f){b.activeTexture(b.TEXTURE1);b.bindTexture(b.TEXTURE_2D,j);b.copyTexImage2D(b.TEXTURE_2D,0,b.RGB,K.x-8,K.y-8,16,16,0);b.uniform1i(G.renderType,0);b.uniform2f(G.scale,z.x,z.y);b.uniform3f(G.screenPosition,J.x,J.y,J.z);b.disable(b.BLEND);b.enable(b.DEPTH_TEST);b.drawElements(b.TRIANGLES,6,b.UNSIGNED_SHORT,0);b.activeTexture(b.TEXTURE0);b.bindTexture(b.TEXTURE_2D,l);b.copyTexImage2D(b.TEXTURE_2D,0,b.RGBA,K.x-8,K.y-8,16,16,0);b.uniform1i(G.renderType,1);b.disable(b.DEPTH_TEST);
b.activeTexture(b.TEXTURE1);b.bindTexture(b.TEXTURE_2D,j);b.drawElements(b.TRIANGLES,6,b.UNSIGNED_SHORT,0);F.positionScreen.copy(J);F.customUpdateCallback?F.customUpdateCallback(F):F.updateLensFlares();b.uniform1i(G.renderType,2);b.enable(b.BLEND);D=0;for(X=F.lensFlares.length;D<X;D++)L=F.lensFlares[D],0.0010<L.opacity&&0.0010<L.scale&&(J.x=L.x,J.y=L.y,J.z=L.z,C=L.size*L.scale/f,z.x=C*u,z.y=C,b.uniform3f(G.screenPosition,J.x,J.y,J.z),b.uniform2f(G.scale,z.x,z.y),b.uniform1f(G.rotation,L.rotation),
b.uniform1f(G.opacity,L.opacity),b.uniform3f(G.color,L.color.r,L.color.g,L.color.b),c.setBlending(L.blending,L.blendEquation,L.blendSrc,L.blendDst),c.setTexture(L.texture,1),b.drawElements(b.TRIANGLES,6,b.UNSIGNED_SHORT,0))}b.enable(b.CULL_FACE);b.enable(b.DEPTH_TEST);b.depthMask(!0)}}};
THREE.ShadowMapPlugin=function(){var a,b,c,d,f,e,g=new THREE.Frustum,h=new THREE.Matrix4,j=new THREE.Vector3,l=new THREE.Vector3,n=new THREE.Vector3;this.init=function(g){a=g.context;b=g;var g=THREE.ShaderLib.depthRGBA,j=THREE.UniformsUtils.clone(g.uniforms);c=new THREE.ShaderMaterial({fragmentShader:g.fragmentShader,vertexShader:g.vertexShader,uniforms:j});d=new THREE.ShaderMaterial({fragmentShader:g.fragmentShader,vertexShader:g.vertexShader,uniforms:j,morphTargets:!0});f=new THREE.ShaderMaterial({fragmentShader:g.fragmentShader,
vertexShader:g.vertexShader,uniforms:j,skinning:!0});e=new THREE.ShaderMaterial({fragmentShader:g.fragmentShader,vertexShader:g.vertexShader,uniforms:j,morphTargets:!0,skinning:!0});c._shadowPass=!0;d._shadowPass=!0;f._shadowPass=!0;e._shadowPass=!0};this.render=function(a,c){b.shadowMapEnabled&&b.shadowMapAutoUpdate&&this.update(a,c)};this.update=function(r,p){var s,t,m,v,B,q,A,u,x,I=[];v=0;a.clearColor(1,1,1,1);a.disable(a.BLEND);a.enable(a.CULL_FACE);a.frontFace(a.CCW);b.shadowMapCullFace===THREE.CullFaceFront?
a.cullFace(a.FRONT):a.cullFace(a.BACK);b.setDepthTest(!0);s=0;for(t=r.__lights.length;s<t;s++)if(m=r.__lights[s],m.castShadow)if(m instanceof THREE.DirectionalLight&&m.shadowCascade)for(B=0;B<m.shadowCascadeCount;B++){var C;if(m.shadowCascadeArray[B])C=m.shadowCascadeArray[B];else{x=m;A=B;C=new THREE.DirectionalLight;C.isVirtual=!0;C.onlyShadow=!0;C.castShadow=!0;C.shadowCameraNear=x.shadowCameraNear;C.shadowCameraFar=x.shadowCameraFar;C.shadowCameraLeft=x.shadowCameraLeft;C.shadowCameraRight=x.shadowCameraRight;
C.shadowCameraBottom=x.shadowCameraBottom;C.shadowCameraTop=x.shadowCameraTop;C.shadowCameraVisible=x.shadowCameraVisible;C.shadowDarkness=x.shadowDarkness;C.shadowBias=x.shadowCascadeBias[A];C.shadowMapWidth=x.shadowCascadeWidth[A];C.shadowMapHeight=x.shadowCascadeHeight[A];C.pointsWorld=[];C.pointsFrustum=[];u=C.pointsWorld;q=C.pointsFrustum;for(var z=0;8>z;z++)u[z]=new THREE.Vector3,q[z]=new THREE.Vector3;u=x.shadowCascadeNearZ[A];x=x.shadowCascadeFarZ[A];q[0].set(-1,-1,u);q[1].set(1,-1,u);q[2].set(-1,
1,u);q[3].set(1,1,u);q[4].set(-1,-1,x);q[5].set(1,-1,x);q[6].set(-1,1,x);q[7].set(1,1,x);C.originalCamera=p;q=new THREE.Gyroscope;q.position=m.shadowCascadeOffset;q.add(C);q.add(C.target);p.add(q);m.shadowCascadeArray[B]=C;console.log("Created virtualLight",C)}A=m;u=B;x=A.shadowCascadeArray[u];x.position.copy(A.position);x.target.position.copy(A.target.position);x.lookAt(x.target);x.shadowCameraVisible=A.shadowCameraVisible;x.shadowDarkness=A.shadowDarkness;x.shadowBias=A.shadowCascadeBias[u];q=A.shadowCascadeNearZ[u];
A=A.shadowCascadeFarZ[u];x=x.pointsFrustum;x[0].z=q;x[1].z=q;x[2].z=q;x[3].z=q;x[4].z=A;x[5].z=A;x[6].z=A;x[7].z=A;I[v]=C;v++}else I[v]=m,v++;s=0;for(t=I.length;s<t;s++){m=I[s];m.shadowMap||(B=THREE.LinearFilter,b.shadowMapType===THREE.PCFSoftShadowMap&&(B=THREE.NearestFilter),m.shadowMap=new THREE.WebGLRenderTarget(m.shadowMapWidth,m.shadowMapHeight,{minFilter:B,magFilter:B,format:THREE.RGBAFormat}),m.shadowMapSize=new THREE.Vector2(m.shadowMapWidth,m.shadowMapHeight),m.shadowMatrix=new THREE.Matrix4);
if(!m.shadowCamera){if(m instanceof THREE.SpotLight)m.shadowCamera=new THREE.PerspectiveCamera(m.shadowCameraFov,m.shadowMapWidth/m.shadowMapHeight,m.shadowCameraNear,m.shadowCameraFar);else if(m instanceof THREE.DirectionalLight)m.shadowCamera=new THREE.OrthographicCamera(m.shadowCameraLeft,m.shadowCameraRight,m.shadowCameraTop,m.shadowCameraBottom,m.shadowCameraNear,m.shadowCameraFar);else{console.error("Unsupported light type for shadow");continue}r.add(m.shadowCamera);b.autoUpdateScene&&r.updateMatrixWorld()}m.shadowCameraVisible&&
!m.cameraHelper&&(m.cameraHelper=new THREE.CameraHelper(m.shadowCamera),m.shadowCamera.add(m.cameraHelper));if(m.isVirtual&&C.originalCamera==p){B=p;v=m.shadowCamera;q=m.pointsFrustum;x=m.pointsWorld;j.set(Infinity,Infinity,Infinity);l.set(-Infinity,-Infinity,-Infinity);for(A=0;8>A;A++)u=x[A],u.copy(q[A]),THREE.ShadowMapPlugin.__projector.unprojectVector(u,B),u.applyMatrix4(v.matrixWorldInverse),u.x<j.x&&(j.x=u.x),u.x>l.x&&(l.x=u.x),u.y<j.y&&(j.y=u.y),u.y>l.y&&(l.y=u.y),u.z<j.z&&(j.z=u.z),u.z>l.z&&
(l.z=u.z);v.left=j.x;v.right=l.x;v.top=l.y;v.bottom=j.y;v.updateProjectionMatrix()}v=m.shadowMap;q=m.shadowMatrix;B=m.shadowCamera;B.position.getPositionFromMatrix(m.matrixWorld);n.getPositionFromMatrix(m.target.matrixWorld);B.lookAt(n);B.updateMatrixWorld();B.matrixWorldInverse.getInverse(B.matrixWorld);m.cameraHelper&&(m.cameraHelper.visible=m.shadowCameraVisible);m.shadowCameraVisible&&m.cameraHelper.update();q.set(0.5,0,0,0.5,0,0.5,0,0.5,0,0,0.5,0.5,0,0,0,1);q.multiply(B.projectionMatrix);q.multiply(B.matrixWorldInverse);
h.multiplyMatrices(B.projectionMatrix,B.matrixWorldInverse);g.setFromMatrix(h);b.setRenderTarget(v);b.clear();x=r.__webglObjects;m=0;for(v=x.length;m<v;m++)if(A=x[m],q=A.object,A.render=!1,q.visible&&q.castShadow&&(!(q instanceof THREE.Mesh||q instanceof THREE.ParticleSystem)||!q.frustumCulled||g.intersectsObject(q)))q._modelViewMatrix.multiplyMatrices(B.matrixWorldInverse,q.matrixWorld),A.render=!0;m=0;for(v=x.length;m<v;m++)A=x[m],A.render&&(q=A.object,A=A.buffer,z=q.material instanceof THREE.MeshFaceMaterial?
q.material.materials[0]:q.material,u=0<q.geometry.morphTargets.length&&z.morphTargets,z=q instanceof THREE.SkinnedMesh&&z.skinning,u=q.customDepthMaterial?q.customDepthMaterial:z?u?e:f:u?d:c,A instanceof THREE.BufferGeometry?b.renderBufferDirect(B,r.__lights,null,u,A,q):b.renderBuffer(B,r.__lights,null,u,A,q));x=r.__webglObjectsImmediate;m=0;for(v=x.length;m<v;m++)A=x[m],q=A.object,q.visible&&q.castShadow&&(q._modelViewMatrix.multiplyMatrices(B.matrixWorldInverse,q.matrixWorld),b.renderImmediateObject(B,
r.__lights,null,c,q))}s=b.getClearColor();t=b.getClearAlpha();a.clearColor(s.r,s.g,s.b,t);a.enable(a.BLEND);b.shadowMapCullFace===THREE.CullFaceFront&&a.cullFace(a.BACK)}};THREE.ShadowMapPlugin.__projector=new THREE.Projector;
THREE.SpritePlugin=function(){function a(a,b){return a.z!==b.z?b.z-a.z:b.id-a.id}var b,c,d,f,e,g,h,j,l,n;this.init=function(a){b=a.context;c=a;d=a.getPrecision();f=new Float32Array(16);e=new Uint16Array(6);a=0;f[a++]=-1;f[a++]=-1;f[a++]=0;f[a++]=0;f[a++]=1;f[a++]=-1;f[a++]=1;f[a++]=0;f[a++]=1;f[a++]=1;f[a++]=1;f[a++]=1;f[a++]=-1;f[a++]=1;f[a++]=0;f[a++]=1;a=0;e[a++]=0;e[a++]=1;e[a++]=2;e[a++]=0;e[a++]=2;e[a++]=3;g=b.createBuffer();h=b.createBuffer();b.bindBuffer(b.ARRAY_BUFFER,g);b.bufferData(b.ARRAY_BUFFER,
f,b.STATIC_DRAW);b.bindBuffer(b.ELEMENT_ARRAY_BUFFER,h);b.bufferData(b.ELEMENT_ARRAY_BUFFER,e,b.STATIC_DRAW);var a=THREE.ShaderSprite.sprite,p=b.createProgram(),s=b.createShader(b.FRAGMENT_SHADER),t=b.createShader(b.VERTEX_SHADER),m="precision "+d+" float;\n";b.shaderSource(s,m+a.fragmentShader);b.shaderSource(t,m+a.vertexShader);b.compileShader(s);b.compileShader(t);b.attachShader(p,s);b.attachShader(p,t);b.linkProgram(p);j=p;l={};n={};l.position=b.getAttribLocation(j,"position");l.uv=b.getAttribLocation(j,
"uv");n.uvOffset=b.getUniformLocation(j,"uvOffset");n.uvScale=b.getUniformLocation(j,"uvScale");n.rotation=b.getUniformLocation(j,"rotation");n.scale=b.getUniformLocation(j,"scale");n.alignment=b.getUniformLocation(j,"alignment");n.color=b.getUniformLocation(j,"color");n.map=b.getUniformLocation(j,"map");n.opacity=b.getUniformLocation(j,"opacity");n.useScreenCoordinates=b.getUniformLocation(j,"useScreenCoordinates");n.sizeAttenuation=b.getUniformLocation(j,"sizeAttenuation");n.screenPosition=b.getUniformLocation(j,
"screenPosition");n.modelViewMatrix=b.getUniformLocation(j,"modelViewMatrix");n.projectionMatrix=b.getUniformLocation(j,"projectionMatrix");n.fogType=b.getUniformLocation(j,"fogType");n.fogDensity=b.getUniformLocation(j,"fogDensity");n.fogNear=b.getUniformLocation(j,"fogNear");n.fogFar=b.getUniformLocation(j,"fogFar");n.fogColor=b.getUniformLocation(j,"fogColor");n.alphaTest=b.getUniformLocation(j,"alphaTest")};this.render=function(d,e,f,t){var m=d.__webglSprites,v=m.length;if(v){var B=l,q=n,A=t/
f,f=0.5*f,u=0.5*t;b.useProgram(j);b.enableVertexAttribArray(B.position);b.enableVertexAttribArray(B.uv);b.disable(b.CULL_FACE);b.enable(b.BLEND);b.bindBuffer(b.ARRAY_BUFFER,g);b.vertexAttribPointer(B.position,2,b.FLOAT,!1,16,0);b.vertexAttribPointer(B.uv,2,b.FLOAT,!1,16,8);b.bindBuffer(b.ELEMENT_ARRAY_BUFFER,h);b.uniformMatrix4fv(q.projectionMatrix,!1,e.projectionMatrix.elements);b.activeTexture(b.TEXTURE0);b.uniform1i(q.map,0);var x=B=0,I=d.fog;I?(b.uniform3f(q.fogColor,I.color.r,I.color.g,I.color.b),
I instanceof THREE.Fog?(b.uniform1f(q.fogNear,I.near),b.uniform1f(q.fogFar,I.far),b.uniform1i(q.fogType,1),x=B=1):I instanceof THREE.FogExp2&&(b.uniform1f(q.fogDensity,I.density),b.uniform1i(q.fogType,2),x=B=2)):(b.uniform1i(q.fogType,0),x=B=0);for(var C,z,J=[],I=0;I<v;I++)C=m[I],z=C.material,C.visible&&0!==z.opacity&&(z.useScreenCoordinates?C.z=-C.position.z:(C._modelViewMatrix.multiplyMatrices(e.matrixWorldInverse,C.matrixWorld),C.z=-C._modelViewMatrix.elements[14]));m.sort(a);for(I=0;I<v;I++)C=
m[I],z=C.material,C.visible&&0!==z.opacity&&z.map&&(z.map.image&&z.map.image.width)&&(b.uniform1f(q.alphaTest,z.alphaTest),!0===z.useScreenCoordinates?(b.uniform1i(q.useScreenCoordinates,1),b.uniform3f(q.screenPosition,(C.position.x*c.devicePixelRatio-f)/f,(u-C.position.y*c.devicePixelRatio)/u,Math.max(0,Math.min(1,C.position.z))),J[0]=c.devicePixelRatio,J[1]=c.devicePixelRatio):(b.uniform1i(q.useScreenCoordinates,0),b.uniform1i(q.sizeAttenuation,z.sizeAttenuation?1:0),b.uniformMatrix4fv(q.modelViewMatrix,
!1,C._modelViewMatrix.elements),J[0]=1,J[1]=1),e=d.fog&&z.fog?x:0,B!==e&&(b.uniform1i(q.fogType,e),B=e),e=1/(z.scaleByViewport?t:1),J[0]*=e*A*C.scale.x,J[1]*=e*C.scale.y,b.uniform2f(q.uvScale,z.uvScale.x,z.uvScale.y),b.uniform2f(q.uvOffset,z.uvOffset.x,z.uvOffset.y),b.uniform2f(q.alignment,z.alignment.x,z.alignment.y),b.uniform1f(q.opacity,z.opacity),b.uniform3f(q.color,z.color.r,z.color.g,z.color.b),b.uniform1f(q.rotation,C.rotation),b.uniform2fv(q.scale,J),c.setBlending(z.blending,z.blendEquation,
z.blendSrc,z.blendDst),c.setDepthTest(z.depthTest),c.setDepthWrite(z.depthWrite),c.setTexture(z.map,0),b.drawElements(b.TRIANGLES,6,b.UNSIGNED_SHORT,0));b.enable(b.CULL_FACE)}}};
THREE.DepthPassPlugin=function(){this.enabled=!1;this.renderTarget=null;var a,b,c,d,f,e,g=new THREE.Frustum,h=new THREE.Matrix4;this.init=function(g){a=g.context;b=g;var g=THREE.ShaderLib.depthRGBA,h=THREE.UniformsUtils.clone(g.uniforms);c=new THREE.ShaderMaterial({fragmentShader:g.fragmentShader,vertexShader:g.vertexShader,uniforms:h});d=new THREE.ShaderMaterial({fragmentShader:g.fragmentShader,vertexShader:g.vertexShader,uniforms:h,morphTargets:!0});f=new THREE.ShaderMaterial({fragmentShader:g.fragmentShader,
vertexShader:g.vertexShader,uniforms:h,skinning:!0});e=new THREE.ShaderMaterial({fragmentShader:g.fragmentShader,vertexShader:g.vertexShader,uniforms:h,morphTargets:!0,skinning:!0});c._shadowPass=!0;d._shadowPass=!0;f._shadowPass=!0;e._shadowPass=!0};this.render=function(a,b){this.enabled&&this.update(a,b)};this.update=function(j,l){var n,r,p,s,t,m;a.clearColor(1,1,1,1);a.disable(a.BLEND);b.setDepthTest(!0);b.autoUpdateScene&&j.updateMatrixWorld();l.matrixWorldInverse.getInverse(l.matrixWorld);h.multiplyMatrices(l.projectionMatrix,
l.matrixWorldInverse);g.setFromMatrix(h);b.setRenderTarget(this.renderTarget);b.clear();m=j.__webglObjects;n=0;for(r=m.length;n<r;n++)if(p=m[n],t=p.object,p.render=!1,t.visible&&(!(t instanceof THREE.Mesh||t instanceof THREE.ParticleSystem)||!t.frustumCulled||g.intersectsObject(t)))t._modelViewMatrix.multiplyMatrices(l.matrixWorldInverse,t.matrixWorld),p.render=!0;var v;n=0;for(r=m.length;n<r;n++)if(p=m[n],p.render&&(t=p.object,p=p.buffer,!(t instanceof THREE.ParticleSystem)||t.customDepthMaterial))(v=
t.material instanceof THREE.MeshFaceMaterial?t.material.materials[0]:t.material)&&b.setMaterialFaces(t.material),s=0<t.geometry.morphTargets.length&&v.morphTargets,v=t instanceof THREE.SkinnedMesh&&v.skinning,s=t.customDepthMaterial?t.customDepthMaterial:v?s?e:f:s?d:c,p instanceof THREE.BufferGeometry?b.renderBufferDirect(l,j.__lights,null,s,p,t):b.renderBuffer(l,j.__lights,null,s,p,t);m=j.__webglObjectsImmediate;n=0;for(r=m.length;n<r;n++)p=m[n],t=p.object,t.visible&&(t._modelViewMatrix.multiplyMatrices(l.matrixWorldInverse,
t.matrixWorld),b.renderImmediateObject(l,j.__lights,null,c,t));n=b.getClearColor();r=b.getClearAlpha();a.clearColor(n.r,n.g,n.b,r);a.enable(a.BLEND)}};
THREE.ShaderFlares={lensFlareVertexTexture:{vertexShader:"uniform lowp int renderType;\nuniform vec3 screenPosition;\nuniform vec2 scale;\nuniform float rotation;\nuniform sampler2D occlusionMap;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvarying float vVisibility;\nvoid main() {\nvUV = uv;\nvec2 pos = position;\nif( renderType == 2 ) {\nvec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) ) +\ntexture2D( occlusionMap, vec2( 0.5, 0.1 ) ) +\ntexture2D( occlusionMap, vec2( 0.9, 0.1 ) ) +\ntexture2D( occlusionMap, vec2( 0.9, 0.5 ) ) +\ntexture2D( occlusionMap, vec2( 0.9, 0.9 ) ) +\ntexture2D( occlusionMap, vec2( 0.5, 0.9 ) ) +\ntexture2D( occlusionMap, vec2( 0.1, 0.9 ) ) +\ntexture2D( occlusionMap, vec2( 0.1, 0.5 ) ) +\ntexture2D( occlusionMap, vec2( 0.5, 0.5 ) );\nvVisibility = (       visibility.r / 9.0 ) *\n( 1.0 - visibility.g / 9.0 ) *\n(       visibility.b / 9.0 ) *\n( 1.0 - visibility.a / 9.0 );\npos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\npos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\n}\ngl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\n}",fragmentShader:"uniform lowp int renderType;\nuniform sampler2D map;\nuniform float opacity;\nuniform vec3 color;\nvarying vec2 vUV;\nvarying float vVisibility;\nvoid main() {\nif( renderType == 0 ) {\ngl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );\n} else if( renderType == 1 ) {\ngl_FragColor = texture2D( map, vUV );\n} else {\nvec4 texture = texture2D( map, vUV );\ntexture.a *= opacity * vVisibility;\ngl_FragColor = texture;\ngl_FragColor.rgb *= color;\n}\n}"},
lensFlare:{vertexShader:"uniform lowp int renderType;\nuniform vec3 screenPosition;\nuniform vec2 scale;\nuniform float rotation;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvoid main() {\nvUV = uv;\nvec2 pos = position;\nif( renderType == 2 ) {\npos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\npos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\n}\ngl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\n}",
fragmentShader:"precision mediump float;\nuniform lowp int renderType;\nuniform sampler2D map;\nuniform sampler2D occlusionMap;\nuniform float opacity;\nuniform vec3 color;\nvarying vec2 vUV;\nvoid main() {\nif( renderType == 0 ) {\ngl_FragColor = vec4( texture2D( map, vUV ).rgb, 0.0 );\n} else if( renderType == 1 ) {\ngl_FragColor = texture2D( map, vUV );\n} else {\nfloat visibility = texture2D( occlusionMap, vec2( 0.5, 0.1 ) ).a +\ntexture2D( occlusionMap, vec2( 0.9, 0.5 ) ).a +\ntexture2D( occlusionMap, vec2( 0.5, 0.9 ) ).a +\ntexture2D( occlusionMap, vec2( 0.1, 0.5 ) ).a;\nvisibility = ( 1.0 - visibility / 4.0 );\nvec4 texture = texture2D( map, vUV );\ntexture.a *= opacity * visibility;\ngl_FragColor = texture;\ngl_FragColor.rgb *= color;\n}\n}"}};
THREE.ShaderSprite={sprite:{vertexShader:"uniform int useScreenCoordinates;\nuniform int sizeAttenuation;\nuniform vec3 screenPosition;\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform float rotation;\nuniform vec2 scale;\nuniform vec2 alignment;\nuniform vec2 uvOffset;\nuniform vec2 uvScale;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvoid main() {\nvUV = uvOffset + uv * uvScale;\nvec2 alignedPosition = position + alignment;\nvec2 rotatedPosition;\nrotatedPosition.x = ( cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y ) * scale.x;\nrotatedPosition.y = ( sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y ) * scale.y;\nvec4 finalPosition;\nif( useScreenCoordinates != 0 ) {\nfinalPosition = vec4( screenPosition.xy + rotatedPosition, screenPosition.z, 1.0 );\n} else {\nfinalPosition = projectionMatrix * modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\nfinalPosition.xy += rotatedPosition * ( sizeAttenuation == 1 ? 1.0 : finalPosition.z );\n}\ngl_Position = finalPosition;\n}",
fragmentShader:"uniform vec3 color;\nuniform sampler2D map;\nuniform float opacity;\nuniform int fogType;\nuniform vec3 fogColor;\nuniform float fogDensity;\nuniform float fogNear;\nuniform float fogFar;\nuniform float alphaTest;\nvarying vec2 vUV;\nvoid main() {\nvec4 texture = texture2D( map, vUV );\nif ( texture.a < alphaTest ) discard;\ngl_FragColor = vec4( color * texture.xyz, texture.a * opacity );\nif ( fogType > 0 ) {\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\nfloat fogFactor = 0.0;\nif ( fogType == 1 ) {\nfogFactor = smoothstep( fogNear, fogFar, depth );\n} else {\nconst float LOG2 = 1.442695;\nfloat fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );\nfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\n}\ngl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\n}\n}"}};window.Physijs=function(){var a=parseInt(THREE.REVISION,10),b,c=new THREE.Matrix4,d=!1,f=e,e={},g,h,j,l,n,r,p,s=new THREE.Vector3,t=new THREE.Vector3,m=new THREE.Matrix4,v=new THREE.Quaternion;e.scripts={};g=function(){this._eventListeners={}};g.prototype.addEventListener=function(a,b){this._eventListeners.hasOwnProperty(a)||(this._eventListeners[a]=[]);this._eventListeners[a].push(b)};g.prototype.removeEventListener=function(a,b){var c;return!this._eventListeners.hasOwnProperty(a)?!1:0<=(c=this._eventListeners[a].indexOf(b))?
(this._eventListeners[a].splice(c,1),!0):!1};g.prototype.dispatchEvent=function(a){var b,c=Array.prototype.splice.call(arguments,1);if(this._eventListeners.hasOwnProperty(a))for(b=0;b<this._eventListeners[a].length;b++)this._eventListeners[a][b].apply(this,c)};g.make=function(a){a.prototype.addEventListener=g.prototype.addEventListener;a.prototype.removeEventListener=g.prototype.removeEventListener;a.prototype.dispatchEvent=g.prototype.dispatchEvent};var B=1;h=function(){return B++};j=function(a,
b,c,d){return new THREE.Vector3(Math.atan2(2*(a*d-b*c),d*d-a*a-b*b+c*c),Math.asin(2*(a*c+b*d)),Math.atan2(2*(c*d-a*b),d*d+a*a-b*b-c*c))};l=function(a,b){m.identity();b.useQuaternion?m.identity().setRotationFromQuaternion(b.quaternion):m.identity().setRotationFromEuler(b.rotation);m.getInverse(m);s.copy(a);t.copy(b.position);return m.multiplyVector3(s.subSelf(t))};e.noConflict=function(){window.Physijs=f;return e};e.createMaterial=function(a,b,c){var d=function(){};d.prototype=a;d=new d;d._physijs=
{id:a.id,friction:void 0===b?0.8:b,restitution:void 0===c?0.2:c};return d};e.PointConstraint=function(a,b,c){void 0===c&&(c=b,b=void 0);this.type="point";this.appliedImpulse=0;this.id=h();this.objecta=a._physijs.id;this.positiona=l(c,a).clone();b&&(this.objectb=b._physijs.id,this.positionb=l(c,b).clone())};e.PointConstraint.prototype.getDefinition=function(){return{type:this.type,id:this.id,objecta:this.objecta,objectb:this.objectb,positiona:this.positiona,positionb:this.positionb}};e.HingeConstraint=
function(a,b,c,d){void 0===d&&(d=c,c=b,b=void 0);this.type="hinge";this.appliedImpulse=0;this.id=h();this.scene=a.parent;this.objecta=a._physijs.id;this.positiona=l(c,a).clone();this.position=c.clone();this.axis=d;b&&(this.objectb=b._physijs.id,this.positionb=l(c,b).clone())};e.HingeConstraint.prototype.getDefinition=function(){return{type:this.type,id:this.id,objecta:this.objecta,objectb:this.objectb,positiona:this.positiona,positionb:this.positionb,axis:this.axis}};e.HingeConstraint.prototype.setLimits=
function(a,b,c,d){this.scene.execute("hinge_setLimits",{constraint:this.id,low:a,high:b,bias_factor:c,relaxation_factor:d})};e.HingeConstraint.prototype.enableAngularMotor=function(a,b){this.scene.execute("hinge_enableAngularMotor",{constraint:this.id,velocity:a,acceleration:b})};e.HingeConstraint.prototype.disableMotor=function(){this.scene.execute("hinge_disableMotor",{constraint:this.id})};e.SliderConstraint=function(a,b,c,d){void 0===d&&(d=c,c=b,b=void 0);this.type="slider";this.appliedImpulse=
0;this.id=h();this.scene=a.parent;this.objecta=a._physijs.id;this.positiona=l(c,a).clone();this.axis=d;b&&(this.objectb=b._physijs.id,this.positionb=l(c,b).clone())};e.SliderConstraint.prototype.getDefinition=function(){return{type:this.type,id:this.id,objecta:this.objecta,objectb:this.objectb,positiona:this.positiona,positionb:this.positionb,axis:this.axis}};e.SliderConstraint.prototype.setLimits=function(a,b,c,d){this.scene.execute("slider_setLimits",{constraint:this.id,lin_lower:a,lin_upper:b,
ang_lower:c,ang_upper:d})};e.SliderConstraint.prototype.setRestitution=function(a,b){this.scene.execute("slider_setRestitution",{constraint:this.id,linear:a,angular:b})};e.SliderConstraint.prototype.enableLinearMotor=function(a,b){this.scene.execute("slider_enableLinearMotor",{constraint:this.id,velocity:a,acceleration:b})};e.SliderConstraint.prototype.disableLinearMotor=function(){this.scene.execute("slider_disableLinearMotor",{constraint:this.id})};e.SliderConstraint.prototype.enableAngularMotor=
function(a,b){this.scene.execute("slider_enableAngularMotor",{constraint:this.id,velocity:a,acceleration:b})};e.SliderConstraint.prototype.disableAngularMotor=function(){this.scene.execute("slider_disableAngularMotor",{constraint:this.id})};e.ConeTwistConstraint=function(a,b,c){if(void 0===c)throw"Both objects must be defined in a ConeTwistConstraint.";this.type="conetwist";this.appliedImpulse=0;this.id=h();this.scene=a.parent;this.objecta=a._physijs.id;this.positiona=l(c,a).clone();this.objectb=
b._physijs.id;this.positionb=l(c,b).clone();this.axisa={x:a.rotation.x,y:a.rotation.y,z:a.rotation.z};this.axisb={x:b.rotation.x,y:b.rotation.y,z:b.rotation.z}};e.ConeTwistConstraint.prototype.getDefinition=function(){return{type:this.type,id:this.id,objecta:this.objecta,objectb:this.objectb,positiona:this.positiona,positionb:this.positionb,axisa:this.axisa,axisb:this.axisb}};e.ConeTwistConstraint.prototype.setLimit=function(a,b,c){this.scene.execute("conetwist_setLimit",{constraint:this.id,x:a,y:b,
z:c})};e.ConeTwistConstraint.prototype.enableMotor=function(){this.scene.execute("conetwist_enableMotor",{constraint:this.id})};e.ConeTwistConstraint.prototype.setMaxMotorImpulse=function(a){this.scene.execute("conetwist_setMaxMotorImpulse",{constraint:this.id,max_impulse:a})};e.ConeTwistConstraint.prototype.setMotorTarget=function(a){if(a instanceof THREE.Vector3)throw"Wait for Three.js r50 to setMotorTarget from Vector3 - use Matrix4 or Quaternion instead";a instanceof THREE.Matrix4&&(a=(new THREE.Quaternion).setFromRotationMatrix(a));
this.scene.execute("conetwist_setMotorTarget",{constraint:this.id,x:a.x,y:a.y,z:a.z,w:a.w})};e.ConeTwistConstraint.prototype.disableMotor=function(){this.scene.execute("conetwist_disableMotor",{constraint:this.id})};e.DOFConstraint=function(a,b,c){void 0===c&&(c=b,b=void 0);this.type="dof";this.appliedImpulse=0;this.id=h();this.scene=a.parent;this.objecta=a._physijs.id;this.positiona=l(c,a).clone();this.axisa={x:a.rotation.x,y:a.rotation.y,z:a.rotation.z};b&&(this.objectb=b._physijs.id,this.positionb=
l(c,b).clone(),this.axisb={x:b.rotation.x,y:b.rotation.y,z:b.rotation.z})};e.DOFConstraint.prototype.getDefinition=function(){return{type:this.type,id:this.id,objecta:this.objecta,objectb:this.objectb,positiona:this.positiona,positionb:this.positionb,axisa:this.axisa,axisb:this.axisb}};e.DOFConstraint.prototype.setLinearLowerLimit=function(a){this.scene.execute("dof_setLinearLowerLimit",{constraint:this.id,x:a.x,y:a.y,z:a.z})};e.DOFConstraint.prototype.setLinearUpperLimit=function(a){this.scene.execute("dof_setLinearUpperLimit",
{constraint:this.id,x:a.x,y:a.y,z:a.z})};e.DOFConstraint.prototype.setAngularLowerLimit=function(a){this.scene.execute("dof_setAngularLowerLimit",{constraint:this.id,x:a.x,y:a.y,z:a.z})};e.DOFConstraint.prototype.setAngularUpperLimit=function(a){this.scene.execute("dof_setAngularUpperLimit",{constraint:this.id,x:a.x,y:a.y,z:a.z})};e.DOFConstraint.prototype.enableAngularMotor=function(a){this.scene.execute("dof_enableAngularMotor",{constraint:this.id,which:a})};e.DOFConstraint.prototype.configureAngularMotor=
function(a,b,c,d,e){this.scene.execute("dof_configureAngularMotor",{constraint:this.id,which:a,low_angle:b,high_angle:c,velocity:d,max_force:e})};e.DOFConstraint.prototype.disableAngularMotor=function(a){this.scene.execute("dof_disableAngularMotor",{constraint:this.id,which:a})};e.Scene=function(a){var c=this;g.call(this);THREE.Scene.call(this);this._worker=new Worker(e.scripts.worker||"physijs_worker.js");this._worker.transferableMessage=this._worker.webkitPostMessage||this._worker.postMessage;this._materials=
{};this._objects={};this._vehicles={};this._constraints={};var d=new ArrayBuffer(1);this._worker.transferableMessage(d,[d]);b=0===d.byteLength;this._worker.onmessage=function(a){a=a.data;a instanceof ArrayBuffer&&1!==a.byteLength&&(a=new Float32Array(a));if(a instanceof Float32Array)switch(a[0]){case 0:c._updateScene(a);break;case 1:c._updateCollisions(a);break;case 2:c._updateVehicles(a);break;case 3:c._updateConstraints(a)}else if(a.cmd)switch(a.cmd){case "objectReady":a=a.params;c._objects[a]&&
c._objects[a].dispatchEvent("ready");break;case "worldReady":c.dispatchEvent("ready");break;case "vehicle":window.test=a;break;default:console.debug("Received: "+a.cmd),console.dir(a.params)}else switch(a[0]){case 0:c._updateScene(a);break;case 1:c._updateCollisions(a);break;case 2:c._updateVehicles(a);break;case 3:c._updateConstraints(a)}};a=a||{};a.ammo=e.scripts.ammo||"ammo.js";a.fixedTimeStep=a.fixedTimeStep||1/60;a.rateLimit=a.rateLimit||!0;this.execute("init",a)};e.Scene.prototype=new THREE.Scene;
e.Scene.prototype.constructor=e.Scene;g.make(e.Scene);e.Scene.prototype._updateScene=function(a){var c=a[1],e,f,g;for(f=0;f<c;f++)g=2+14*f,e=this._objects[a[g]],void 0!==e&&(!1===e.__dirtyPosition&&e.position.set(a[g+1],a[g+2],a[g+3]),!1===e.__dirtyRotation&&(e.useQuaternion?e.quaternion.set(a[g+4],a[g+5],a[g+6],a[g+7]):e.rotation=j(a[g+4],a[g+5],a[g+6],a[g+7])),e._physijs.linearVelocity.set(a[g+8],a[g+9],a[g+10]),e._physijs.angularVelocity.set(a[g+11],a[g+12],a[g+13]));b&&this._worker.transferableMessage(a.buffer,
[a.buffer]);d=!1;this.dispatchEvent("update")};e.Scene.prototype._updateVehicles=function(a){var c,d,e;for(d=0;d<(a.length-1)/9;d++)e=1+9*d,c=this._vehicles[a[e]],void 0!==c&&(c=c.wheels[a[e+1]],c.position.set(a[e+2],a[e+3],a[e+4]),c.useQuaternion?c.quaternion.set(a[e+5],a[e+6],a[e+7],a[e+8]):c.rotation=j(a[e+5],a[e+6],a[e+7],a[e+8]));b&&this._worker.transferableMessage(a.buffer,[a.buffer])};e.Scene.prototype._updateConstraints=function(a){var c,d,e,f;for(e=0;e<(a.length-1)/6;e++)f=1+6*e,c=this._constraints[a[f]],
d=this._objects[a[f+1]],void 0===c||void 0===d||(s.set(a[f+2],a[f+3],a[f+4]),m.extractRotation(d.matrix),m.multiplyVector3(s),c.positiona.add(d.position,s),c.appliedImpulse=a[f+5]);b&&this._worker.transferableMessage(a.buffer,[a.buffer])};e.Scene.prototype._updateCollisions=function(a){var c,d,e,f={},g=[];for(c=0;c<a[1];c++)d=2+2*c,e=a[d],d=a[d+1],f[e]||(f[e]=[]),f[e].push(d);for(e in this._objects){if(!this._objects.hasOwnProperty(e))return;e=this._objects[e];if(f[e._physijs.id]){for(c=g.length=
0;c<f[e._physijs.id].length;c++)d=this._objects[f[e._physijs.id][c]],-1===e._physijs.touches.indexOf(d._physijs.id)&&(e._physijs.touches.push(d._physijs.id),s.subVectors(e.getLinearVelocity(),d.getLinearVelocity()),r=s.clone(),s.subVectors(e.getAngularVelocity(),d.getAngularVelocity()),p=s,e.dispatchEvent("collision",d,r,p),d.dispatchEvent("collision",e,r,p)),g.push(d._physijs.id);for(c=0;c<e._physijs.touches.length;c++)-1===g.indexOf(e._physijs.touches[c])&&e._physijs.touches.splice(c--,1)}else e._physijs.touches.length=
0}for(var h in f)if(f.hasOwnProperty(h)&&f[h])for(c=0;c<f[h].length;c++)f[h][c]&&(f[f[h][c]]=f[f[h][c]]||[],f[f[h][c]].push(h));this.collisions=f;b&&this._worker.transferableMessage(a.buffer,[a.buffer])};e.Scene.prototype.addConstraint=function(a,b){this._constraints[a.id]=a;this.execute("addConstraint",a.getDefinition());if(b){var c;switch(a.type){case "point":c=new THREE.Mesh(new THREE.SphereGeometry(1.5),new THREE.MeshNormalMaterial);c.position.copy(a.positiona);this._objects[a.objecta].add(c);
break;case "hinge":c=new THREE.Mesh(new THREE.SphereGeometry(1.5),new THREE.MeshNormalMaterial);c.position.copy(a.positiona);this._objects[a.objecta].add(c);break;case "slider":c=new THREE.Mesh(new THREE.CubeGeometry(10,1,1),new THREE.MeshNormalMaterial);c.position.copy(a.positiona);c.rotation.set(a.axis.y,a.axis.x,a.axis.z);this._objects[a.objecta].add(c);break;case "conetwist":c=new THREE.Mesh(new THREE.SphereGeometry(1.5),new THREE.MeshNormalMaterial);c.position.copy(a.positiona);this._objects[a.objecta].add(c);
break;case "dof":c=new THREE.Mesh(new THREE.SphereGeometry(1.5),new THREE.MeshNormalMaterial),c.position.copy(a.positiona),this._objects[a.objecta].add(c)}}return a};e.Scene.prototype.removeConstraint=function(a){void 0!==this._constraints[a.id]&&(this.execute("removeConstraint",{id:a.id}),delete this._constraints[a.id])};e.Scene.prototype.execute=function(a,b){this._worker.postMessage({cmd:a,params:b})};n=function(a,b){var c;for(c=0;c<b.children.length;c++)b.children[c]._physijs&&(b.children[c].updateMatrix(),
b.children[c].updateMatrixWorld(),s.getPositionFromMatrix(b.children[c].matrixWorld),v.setFromRotationMatrix(b.children[c].matrixWorld),b.children[c]._physijs.position_offset={x:s.x,y:s.y,z:s.z},b.children[c]._physijs.rotation={x:v.x,y:v.y,z:v.z,w:v.w},a._physijs.children.push(b.children[c]._physijs)),n(a,b.children[c])};e.Scene.prototype.add=function(a){THREE.Mesh.prototype.add.call(this,a);a._physijs&&(a.world=this,a instanceof e.Vehicle?(this.add(a.mesh),this._vehicles[a._physijs.id]=a,this.execute("addVehicle",
a._physijs)):(a.__dirtyPosition=!1,a.__dirtyRotation=!1,this._objects[a._physijs.id]=a,a.children.length&&(a._physijs.children=[],n(a,a)),a.material._physijs&&!this._materials.hasOwnProperty(a.material._physijs.id)&&(this.execute("registerMaterial",a.material._physijs),a._physijs.materialId=a.material._physijs.id),a._physijs.position={x:a.position.x,y:a.position.y,z:a.position.z},a.useQuaternion||(c.identity().setRotationFromEuler(a.rotation),a.quaternion.setFromRotationMatrix(c)),a._physijs.rotation=
{x:a.quaternion.x,y:a.quaternion.y,z:a.quaternion.z,w:a.quaternion.w},new THREE.Vector3(1,1,1),a._physijs.width&&(a._physijs.width*=a.scale.x),a._physijs.height&&(a._physijs.height*=a.scale.y),a._physijs.depth&&(a._physijs.depth*=a.scale.z),this.execute("addObject",a._physijs)))};e.Scene.prototype.remove=function(a){if(a instanceof e.Vehicle){for(this.execute("removeVehicle",{id:a._physijs.id});a.wheels.length;)this.remove(a.wheels.pop());this.remove(a.mesh);delete this._vehicles[a._physijs.id]}else THREE.Mesh.prototype.remove.call(this,
a),a._physijs&&(delete this._objects[a._physijs.id],this.execute("removeObject",{id:a._physijs.id}))};e.Scene.prototype.setFixedTimeStep=function(a){a&&this.execute("setFixedTimeStep",a)};e.Scene.prototype.setGravity=function(a){a&&this.execute("setGravity",a)};e.Scene.prototype.simulate=function(a,b){var e,f,g;if(d)return!1;d=!0;for(e in this._objects)if(this._objects.hasOwnProperty(e)&&(f=this._objects[e],f.__dirtyPosition||f.__dirtyRotation))g={id:f._physijs.id},f.__dirtyPosition&&(g.pos={x:f.position.x,
y:f.position.y,z:f.position.z},f.__dirtyPosition=!1),f.__dirtyRotation&&(f.useQuaternion||(c.identity().setRotationFromEuler(f.rotation),f.quaternion.setFromRotationMatrix(c)),g.quat={x:f.quaternion.x,y:f.quaternion.y,z:f.quaternion.z,w:f.quaternion.w},f.__dirtyRotation=!1),this.execute("updateTransform",g);this.execute("simulate",{timeStep:a,maxSubSteps:b});return!0};e.Mesh=function(a,b,c){a&&(g.call(this),THREE.Mesh.call(this,a,b),a.boundingBox||a.computeBoundingBox(),this._physijs={type:null,id:h(),
mass:c||0,touches:[],linearVelocity:new THREE.Vector3,angularVelocity:new THREE.Vector3})};e.Mesh.prototype=new THREE.Mesh;e.Mesh.prototype.constructor=e.Mesh;g.make(e.Mesh);e.Mesh.prototype.__defineGetter__("mass",function(){return this._physijs.mass});e.Mesh.prototype.__defineSetter__("mass",function(a){this._physijs.mass=a;this.world&&this.world.execute("updateMass",{id:this._physijs.id,mass:a})});e.Mesh.prototype.applyCentralImpulse=function(a){this.world&&this.world.execute("applyCentralImpulse",
{id:this._physijs.id,x:a.x,y:a.y,z:a.z})};e.Mesh.prototype.applyImpulse=function(a,b){this.world&&this.world.execute("applyImpulse",{id:this._physijs.id,impulse_x:a.x,impulse_y:a.y,impulse_z:a.z,x:b.x,y:b.y,z:b.z})};e.Mesh.prototype.applyCentralForce=function(a){this.world&&this.world.execute("applyCentralForce",{id:this._physijs.id,x:a.x,y:a.y,z:a.z})};e.Mesh.prototype.applyForce=function(a,b){this.world&&this.world.execute("applyForce",{id:this._physijs.id,force_x:a.x,force_y:a.y,force_z:a.z,x:b.x,
y:b.y,z:b.z})};e.Mesh.prototype.getAngularVelocity=function(){return this._physijs.angularVelocity};e.Mesh.prototype.setAngularVelocity=function(a){this.world&&this.world.execute("setAngularVelocity",{id:this._physijs.id,x:a.x,y:a.y,z:a.z})};e.Mesh.prototype.getLinearVelocity=function(){return this._physijs.linearVelocity};e.Mesh.prototype.setLinearVelocity=function(a){this.world&&this.world.execute("setLinearVelocity",{id:this._physijs.id,x:a.x,y:a.y,z:a.z})};e.Mesh.prototype.setAngularFactor=function(a){this.world&&
this.world.execute("setAngularFactor",{id:this._physijs.id,x:a.x,y:a.y,z:a.z})};e.Mesh.prototype.setLinearFactor=function(a){this.world&&this.world.execute("setLinearFactor",{id:this._physijs.id,x:a.x,y:a.y,z:a.z})};e.Mesh.prototype.setDamping=function(a,b){this.world&&this.world.execute("setDamping",{id:this._physijs.id,linear:a,angular:b})};e.Mesh.prototype.setCcdMotionThreshold=function(a){this.world&&this.world.execute("setCcdMotionThreshold",{id:this._physijs.id,threshold:a})};e.Mesh.prototype.setCcdSweptSphereRadius=
function(a){this.world&&this.world.execute("setCcdSweptSphereRadius",{id:this._physijs.id,radius:a})};e.PlaneMesh=function(a,b,c){var d;e.Mesh.call(this,a,b,c);a.boundingBox||a.computeBoundingBox();b=a.boundingBox.max.x-a.boundingBox.min.x;d=a.boundingBox.max.y-a.boundingBox.min.y;this._physijs.type="plane";this._physijs.normal=a.faces[0].normal.clone();this._physijs.mass="undefined"===typeof c?b*d:c};e.PlaneMesh.prototype=new e.Mesh;e.PlaneMesh.prototype.constructor=e.PlaneMesh;e.HeightfieldMesh=
function(a,b,c,d,f){e.Mesh.call(this,a,b,c);this._physijs.type="heightfield";this._physijs.xsize=a.boundingBox.max.x-a.boundingBox.min.x;this._physijs.ysize=a.boundingBox.max.y-a.boundingBox.min.y;this._physijs.xpts="undefined"===typeof d?Math.sqrt(a.vertices.length):d+1;this._physijs.ypts="undefined"===typeof f?Math.sqrt(a.vertices.length):f+1;this._physijs.absMaxHeight=Math.max(a.boundingBox.max.z,Math.abs(a.boundingBox.min.z));b=[];for(f=0;f<a.vertices.length;f++)c=f%this._physijs.xpts,d=Math.round(f/
this._physijs.xpts-f%this._physijs.xpts/this._physijs.xpts),b[f]=a.vertices[c+(this._physijs.ypts-d-1)*this._physijs.ypts].z;this._physijs.points=b};e.HeightfieldMesh.prototype=new e.Mesh;e.HeightfieldMesh.prototype.constructor=e.HeightfieldMesh;e.BoxMesh=function(a,b,c){var d;e.Mesh.call(this,a,b,c);a.boundingBox||a.computeBoundingBox();b=a.boundingBox.max.x-a.boundingBox.min.x;d=a.boundingBox.max.y-a.boundingBox.min.y;a=a.boundingBox.max.z-a.boundingBox.min.z;this._physijs.type="box";this._physijs.width=
b;this._physijs.height=d;this._physijs.depth=a;this._physijs.mass="undefined"===typeof c?b*d*a:c};e.BoxMesh.prototype=new e.Mesh;e.BoxMesh.prototype.constructor=e.BoxMesh;e.SphereMesh=function(a,b,c){e.Mesh.call(this,a,b,c);a.boundingSphere||a.computeBoundingSphere();this._physijs.type="sphere";this._physijs.radius=a.boundingSphere.radius;this._physijs.mass="undefined"===typeof c?4/3*Math.PI*Math.pow(this._physijs.radius,3):c};e.SphereMesh.prototype=new e.Mesh;e.SphereMesh.prototype.constructor=e.SphereMesh;
e.CylinderMesh=function(a,b,c){var d;e.Mesh.call(this,a,b,c);a.boundingBox||a.computeBoundingBox();b=a.boundingBox.max.x-a.boundingBox.min.x;d=a.boundingBox.max.y-a.boundingBox.min.y;a=a.boundingBox.max.z-a.boundingBox.min.z;this._physijs.type="cylinder";this._physijs.width=b;this._physijs.height=d;this._physijs.depth=a;this._physijs.mass="undefined"===typeof c?b*d*a:c};e.CylinderMesh.prototype=new e.Mesh;e.CylinderMesh.prototype.constructor=e.CylinderMesh;e.CapsuleMesh=function(a,b,c){var d;e.Mesh.call(this,
a,b,c);a.boundingBox||a.computeBoundingBox();b=a.boundingBox.max.x-a.boundingBox.min.x;d=a.boundingBox.max.y-a.boundingBox.min.y;a=a.boundingBox.max.z-a.boundingBox.min.z;this._physijs.type="capsule";this._physijs.radius=Math.max(b/2,a/2);this._physijs.height=d;this._physijs.mass="undefined"===typeof c?b*d*a:c};e.CapsuleMesh.prototype=new e.Mesh;e.CapsuleMesh.prototype.constructor=e.CapsuleMesh;e.ConeMesh=function(a,b,c){e.Mesh.call(this,a,b,c);a.boundingBox||a.computeBoundingBox();b=a.boundingBox.max.x-
a.boundingBox.min.x;a=a.boundingBox.max.y-a.boundingBox.min.y;this._physijs.type="cone";this._physijs.radius=b/2;this._physijs.height=a;this._physijs.mass="undefined"===typeof c?b*a:c};e.ConeMesh.prototype=new e.Mesh;e.ConeMesh.prototype.constructor=e.ConeMesh;e.ConcaveMesh=function(a,b,c){var d,f,g=[];e.Mesh.call(this,a,b,c);a.boundingBox||a.computeBoundingBox();d=a.vertices;for(b=0;b<a.faces.length;b++)f=a.faces[b],f instanceof THREE.Face3?g.push([{x:d[f.a].x,y:d[f.a].y,z:d[f.a].z},{x:d[f.b].x,
y:d[f.b].y,z:d[f.b].z},{x:d[f.c].x,y:d[f.c].y,z:d[f.c].z}]):f instanceof THREE.Face4&&(g.push([{x:d[f.a].x,y:d[f.a].y,z:d[f.a].z},{x:d[f.b].x,y:d[f.b].y,z:d[f.b].z},{x:d[f.d].x,y:d[f.d].y,z:d[f.d].z}]),g.push([{x:d[f.b].x,y:d[f.b].y,z:d[f.b].z},{x:d[f.c].x,y:d[f.c].y,z:d[f.c].z},{x:d[f.d].x,y:d[f.d].y,z:d[f.d].z}]));b=a.boundingBox.max.x-a.boundingBox.min.x;d=a.boundingBox.max.y-a.boundingBox.min.y;a=a.boundingBox.max.z-a.boundingBox.min.z;this._physijs.type="concave";this._physijs.triangles=g;this._physijs.mass=
"undefined"===typeof c?b*d*a:c};e.ConcaveMesh.prototype=new e.Mesh;e.ConcaveMesh.prototype.constructor=e.ConcaveMesh;e.ConvexMesh=function(b,c,d){var f,g=[];e.Mesh.call(this,b,c,d);b.boundingBox||b.computeBoundingBox();for(c=0;c<b.vertices.length;c++)49<=a?g.push({x:b.vertices[c].x,y:b.vertices[c].y,z:b.vertices[c].z}):g.push({x:b.vertices[c].position.x,y:b.vertices[c].position.y,z:b.vertices[c].position.z});c=b.boundingBox.max.x-b.boundingBox.min.x;f=b.boundingBox.max.y-b.boundingBox.min.y;b=b.boundingBox.max.z-
b.boundingBox.min.z;this._physijs.type="convex";this._physijs.points=g;this._physijs.mass="undefined"===typeof d?c*f*b:d};e.ConvexMesh.prototype=new e.Mesh;e.ConvexMesh.prototype.constructor=e.ConvexMesh;e.Vehicle=function(a,b){b=b||new e.VehicleTuning;this.mesh=a;this.wheels=[];this._physijs={id:h(),rigidBody:a._physijs.id,suspension_stiffness:b.suspension_stiffness,suspension_compression:b.suspension_compression,suspension_damping:b.suspension_damping,max_suspension_travel:b.max_suspension_travel,
friction_slip:b.friction_slip,max_suspension_force:b.max_suspension_force}};e.Vehicle.prototype.addWheel=function(a,b,c,d,e,f,g,h,j){a=new THREE.Mesh(a,b);a.castShadow=a.receiveShadow=!0;a.position.copy(d).multiplyScalar(f/100).add(c);this.world.add(a);this.wheels.push(a);this.world.execute("addWheel",{id:this._physijs.id,connection_point:{x:c.x,y:c.y,z:c.z},wheel_direction:{x:d.x,y:d.y,z:d.z},wheel_axle:{x:e.x,y:e.y,z:e.z},suspension_rest_length:f,wheel_radius:g,is_front_wheel:h,tuning:j})};e.Vehicle.prototype.setSteering=
function(a,b){if(void 0!==b&&void 0!==this.wheels[b])this.world.execute("setSteering",{id:this._physijs.id,wheel:b,steering:a});else if(0<this.wheels.length)for(var c=0;c<this.wheels.length;c++)this.world.execute("setSteering",{id:this._physijs.id,wheel:c,steering:a})};e.Vehicle.prototype.setBrake=function(a,b){if(void 0!==b&&void 0!==this.wheels[b])this.world.execute("setBrake",{id:this._physijs.id,wheel:b,brake:a});else if(0<this.wheels.length)for(var c=0;c<this.wheels.length;c++)this.world.execute("setBrake",
{id:this._physijs.id,wheel:c,brake:a})};e.Vehicle.prototype.applyEngineForce=function(a,b){if(void 0!==b&&void 0!==this.wheels[b])this.world.execute("applyEngineForce",{id:this._physijs.id,wheel:b,force:a});else if(0<this.wheels.length)for(var c=0;c<this.wheels.length;c++)this.world.execute("applyEngineForce",{id:this._physijs.id,wheel:c,force:a})};e.VehicleTuning=function(a,b,c,d,e,f){this.suspension_stiffness=void 0!==a?a:5.88;this.suspension_compression=void 0!==b?b:0.83;this.suspension_damping=
void 0!==c?c:0.88;this.max_suspension_travel=void 0!==d?d:500;this.friction_slip=void 0!==e?e:10.5;this.max_suspension_force=void 0!==f?f:6E3};return e}();Physijs.scripts.worker="physijs_worker.js";Physijs.scripts.ammo="ammo.js";
Glen={World:function(a){a=a||{};this._clock=new THREE.Clock;this._clock.start();this._entities={};this._eid=0;this._hooks={};this._hovering=void 0;Glen._world=this;var b=this;a.container?(this.container=a.container,this.canvasWidth=a.width||this.container.offsetWidth,this.canvasHeight=a.height||this.container.offsetHeight):(this.container=document.body,this.canvasWidth=a.width||window.innerWidth,this.canvasHeight=a.height||window.innerHeight-5);this.scene=new Physijs.Scene;this.scene.setGravity(a.gravity||
Glen.Vector(0,-30,0));this.renderer=new THREE.WebGLRenderer;this.renderer.shadowMapEnabled=!0;this.renderer.shadowMapSoft=!0;this.renderer.setSize(this.canvasWidth,this.canvasHeight);this.container.appendChild(this.renderer.domElement);this.camera=a.camera?-1==a.camera.constructor.toString().indexOf("Array")?a.camera:new THREE.PerspectiveCamera(a.camera.fov,a.camera.aspect,a.camera.near,a.camera.far):new THREE.PerspectiveCamera(60,this.canvasWidth/this.canvasHeight,1,1E5);this.camera.position=a.position||
Glen.Vector(0,0,0);if(a.controls){var c=new Glen.FPSControls(this.camera);c.movementSpeed=100;c.lookSpeed=0.125;c.lookVertical=!0;c.noFly=!0;c.constrainVertical=!0;c.constrainHorizontal="undefined"!=typeof a.constrainLook?a.constrainLook:!0;this.controls=c}else if(a.look){var d=0,f=0;document.addEventListener("mousemove",function(a){d=a.clientX-window.innerWidth/2;f=a.clientY-window.innerHeight/2},!1);this.addHook("Think","_CameraUpdate",function(){var a=this.camera;a.position.x+=0.01*(d-a.position.x);
a.position.y+=0.01*(-f-a.position.y);a.lookAt(this.scene.position)})}this.camera.lookAt(a.lookAt||this.scene.position);a.autoStart&&this.render();a.skybox&&this.setSkybox(a.skybox.path,a.skybox.ext);a.fog&&this.setFog(a.fog.color,a.fog.distance);a.fullscreen&&this.listenFullScreen("string"==typeof a.fullscreen?a.fullscreen:"dblclick");document.addEventListener("click",function(){var a=Glen.mouseTrace().object._entity;b.callHook("Click",a);a&&a.callHook("Click")});document.addEventListener("keypress",
function(a){b.callHook("KeyPress",a.which)})}};
Glen.World.prototype={render:function(){var a=this;requestAnimationFrame(function(){a.render()});this.controls&&this.controls.update(this._clock.getDelta());this.scene.simulate();this._think();this.renderer.render(this.scene,this.camera);this.callHook("render")},_think:function(){var a=Glen.mouseTrace();"undefined"!=typeof a&&"undefined"!=typeof a.object._entity?(a=a.object._entity,a!=this._hovering&&(world.callHook("MouseEnter",a),a.callHook("MouseEnter"),this._hovering=a),world.callHook("MouseHover",
a),a.callHook("MouseHover")):this._hovering=void 0;this.callHook("Think",this);for(var b in this._entities)this._entities[b].callHook("Think")},addHook:function(a,b,c){"undefined"==typeof this._hooks[a]&&(this._hooks[a]={});this._hooks[a][b]=c},callHook:function(a){var b=Array.prototype.slice.call(arguments);b.splice(0,1);if(this._hooks[a])for(i in this._hooks[a])this._hooks[a][i].apply(this,b)},removeHook:function(a,b){this._hooks[a]||(this._hooks[a]={});delete this._hooks[a][b]},addEntity:function(a){a.entType?
(this.scene.add(a.getMesh()),a._id=this._eid++,this._entities[a.ID()]=a):this.scene.add(a)},removeEntity:function(a){if(a){var b;a.entType?(b=a.getMesh(),delete this._entities[a.ID()]):b=a;this.scene.removeChildRecurse(b)}},listenFullScreen:function(a){document.addEvenetListener(a,function(){var a=this.documentElement;(a.requestFullScreen||a.webkitRequestFullScreen||a.mozRequestFullScreen).call(a,Element.ALLOW_KEYBOARD_INPUT);a.ALLOW_KEYBOARD_INPUT=1},!1);var b=this;document.addEventListener("webkitfullscreenchange",
function(){setTimeout(function(){document.webkitIsFullScreen?b.renderer.setSize(window.innerWidth,window.innerHeight):b.renderer.setSize(b.canvasWidth,b.canvasHeight)},100);document.webkitIsFullScreen&&document.body.webkitRequestPointerLock&&document.body.webkitRequestPointerLock()},!1)},setSkybox:function(a){var b=b||".jpg",a=THREE.ImageUtils.loadTextureCube([a+"px"+b,a+"nx"+b,a+"py"+b,a+"ny"+b,a+"pz"+b,a+"nz"+b],new THREE.CubeRefractionMapping),b=THREE.ShaderLib.cube;b.uniforms.tCube.value=a;a=
new THREE.ShaderMaterial({fragmentShader:b.fragmentShader,vertexShader:b.vertexShader,uniforms:b.uniforms,depthWrite:!1,side:THREE.BackSide});a=new THREE.Mesh(new THREE.CubeGeometry(1E5,1E5,1E5),a);a.castShadow=!1;a.name="skybox";this.addEntity(a)},setFog:function(a,b){a?(this.scene.fog=new THREE.FogExp2(a||16777215,b||1.5E-4),this._fog=this.scene.fog):this.scene.fog=this._fog},removeFog:function(){this.scene.fog=void 0}};window.requestAnimationFrame||(window.requestAnimationFrame=function(){return window.webkitRequestAnimationFrame||window.mozRequestAnimationFrame||window.oRequestAnimationFrame||window.msRequestAnimationFrame||function(a){window.setTimeout(a,1E3/60)}}());THREE.Vector3.prototype.toString=function(){return"("+this.x+", "+this.y+", "+this.z+")"};THREE.Vector3.prototype.equals=function(a){return this.x==a.x&&this.y==a.y&&this.z==a.z};THREE.Object3D.prototype.hasEntity=function(){return"undefined"!=typeof this.entity};
THREE.Object3D.prototype.getEntity=function(){return this.entity};Glen.Vector=function(a,b,c){return void 0==a?new THREE.Vector3:"string"==typeof a?(a=a.replace(/[()\s]/gi,"").split(","),new THREE.Vector3(a[0],a[1],a[2])):new THREE.Vector3(a,b,c)};Glen.VectorRandom=function(){return Vector((0.5<Math.random()?-1:1)*Math.random(),(0.5<Math.random()?-1:1)*Math.random(),(0.5<Math.random()?-1:1)*Math.random())};
Glen.Color=function(a,b,c){a=Math.floor(a);b=Math.floor(b);c=Math.floor(c);return parseInt((16>a?"0":"")+a.toString(16)+(16>b?"0":"")+b.toString(16)+(16>c?"0":"")+c.toString(16),16)};Glen.ColorRandom=function(){return Color(Math.floor(255*Math.random()),Math.floor(255*Math.random()),Math.floor(255*Math.random()))};
Glen.Material=function(a,b){var b=b||{},c=Physijs.createMaterial(new THREE.MeshLambertMaterial({map:THREE.ImageUtils.loadTexture(a)}),b.friction||0.4,b.restitution||0.6);c.map.wrapS=c.map.wrapT=THREE.RepeatWrapping;c.map.repeat.set(b.repeatX||2.5,b.repeatY||2.5);return c};Glen.ColorMaterial=function(a,b,c,d,f,e){a="number"!=typeof a?a:Glen.Color(a,b,c);return new Physijs.createMaterial(d?new THREE.MeshLambertMaterial({color:a}):new THREE.MeshPhongMaterial({color:a}),f||0.4,e||0.6)};
Glen.loadModel=function(a,b){(new THREE.JSONLoader).load({model:a,callback:b})};Glen._timers=[];Glen.createTimer=function(a,b,c,d){this._timers[a]={delay:b,reps:c,active:!1,func:d};this.runTimer(a)};Glen.singleTimer=function(a,b){var c=this.timers.push({reps:1,delay:a,active:!1,func:b});this.runTimer(c-1)};Glen.runTimer=function(a,b){var c=this._timers[a];if(c&&0<=c.reps){c.reps--;c.active=!0;b&&c.func();var d=this;setTimeout(function(){d.tunTimer(a,!0)},c.delay)}else c&&(c.active=!1)};
Glen.removeTimer=function(a){this._timers[a]=void 0};var _mouseX=0,_mouseY=0,_projector=new THREE.Projector;document.addEventListener("mousemove",function(a){_mouseX=2*(a.clientX/window.innerWidth)-1;_mouseY=2*-(a.clientY/window.innerHeight)+1});Glen.mouseTrace=function(){var a=new Glen.Vector(_mouseX,_mouseY,1);_projector.unprojectVector(a,Glen._world.camera);return(new THREE.Raycaster(Glen._world.camera.position,a.sub(Glen._world.camera.position).normalize())).intersectObjects(Glen._world.scene.children)[0]};THREE.FirstPersonControls=function(a,b){function c(a,b){return function(){b.apply(a,arguments)}}this.object=a;this.target=new THREE.Vector3(0,0,0);this.domElement=void 0!==b?b:document;this.movementSpeed=1;this.lookSpeed=0.0050;this.lookVertical=!0;this.autoForward=!1;this.activeLook=!0;this.heightSpeed=!1;this.heightCoef=1;this.heightMin=0;this.heightMax=1;this.constrainVertical=!1;this.verticalMin=0;this.verticalMax=Math.PI;this.theta=this.phi=this.lon=this.lat=this.mouseY=this.mouseX=this.autoSpeedFactor=
0;this.mouseDragOn=this.freeze=this.moveRight=this.moveLeft=this.moveBackward=this.moveForward=!1;this.viewHalfY=this.viewHalfX=0;this.domElement!==document&&this.domElement.setAttribute("tabindex",-1);this.handleResize=function(){this.domElement===document?(this.viewHalfX=window.innerWidth/2,this.viewHalfY=window.innerHeight/2):(this.viewHalfX=this.domElement.offsetWidth/2,this.viewHalfY=this.domElement.offsetHeight/2)};this.onMouseDown=function(a){this.domElement!==document&&this.domElement.focus();
a.preventDefault();a.stopPropagation();if(this.activeLook)switch(a.button){case 0:this.moveForward=!0;break;case 2:this.moveBackward=!0}this.mouseDragOn=!0};this.onMouseUp=function(a){a.preventDefault();a.stopPropagation();if(this.activeLook)switch(a.button){case 0:this.moveForward=!1;break;case 2:this.moveBackward=!1}this.mouseDragOn=!1};this.onMouseMove=function(a){this.domElement===document?(this.mouseX=a.pageX-this.viewHalfX,this.mouseY=a.pageY-this.viewHalfY):(this.mouseX=a.pageX-this.domElement.offsetLeft-
this.viewHalfX,this.mouseY=a.pageY-this.domElement.offsetTop-this.viewHalfY)};this.onKeyDown=function(a){switch(a.keyCode){case 38:case 87:this.moveForward=!0;break;case 37:case 65:this.moveLeft=!0;break;case 40:case 83:this.moveBackward=!0;break;case 39:case 68:this.moveRight=!0;break;case 82:this.moveUp=!0;break;case 70:this.moveDown=!0;break;case 81:this.freeze=!this.freeze}};this.onKeyUp=function(a){switch(a.keyCode){case 38:case 87:this.moveForward=!1;break;case 37:case 65:this.moveLeft=!1;break;
case 40:case 83:this.moveBackward=!1;break;case 39:case 68:this.moveRight=!1;break;case 82:this.moveUp=!1;break;case 70:this.moveDown=!1}};this.update=function(a){if(!this.freeze){if(this.heightSpeed){var b=THREE.Math.clamp(this.object.position.y,this.heightMin,this.heightMax)-this.heightMin;this.autoSpeedFactor=a*b*this.heightCoef}else this.autoSpeedFactor=0;b=a*this.movementSpeed;(this.moveForward||this.autoForward&&!this.moveBackward)&&this.object.translateZ(-(b+this.autoSpeedFactor));this.moveBackward&&
this.object.translateZ(b);this.moveLeft&&this.object.translateX(-b);this.moveRight&&this.object.translateX(b);this.moveUp&&this.object.translateY(b);this.moveDown&&this.object.translateY(-b);a*=this.lookSpeed;this.activeLook||(a=0);b=1;this.constrainVertical&&(b=Math.PI/(this.verticalMax-this.verticalMin));this.lon+=this.mouseX*a;this.lookVertical&&(this.lat-=this.mouseY*a*b);this.lat=Math.max(-85,Math.min(85,this.lat));this.phi=THREE.Math.degToRad(90-this.lat);this.theta=THREE.Math.degToRad(this.lon);
this.constrainVertical&&(this.phi=THREE.Math.mapLinear(this.phi,0,Math.PI,this.verticalMin,this.verticalMax));a=this.target;b=this.object.position;a.x=b.x+100*Math.sin(this.phi)*Math.cos(this.theta);a.y=b.y+100*Math.cos(this.phi);a.z=b.z+100*Math.sin(this.phi)*Math.sin(this.theta);this.object.lookAt(a)}};this.domElement.addEventListener("contextmenu",function(a){a.preventDefault()},!1);this.domElement.addEventListener("mousemove",c(this,this.onMouseMove),!1);this.domElement.addEventListener("mousedown",
c(this,this.onMouseDown),!1);this.domElement.addEventListener("mouseup",c(this,this.onMouseUp),!1);this.domElement.addEventListener("keydown",c(this,this.onKeyDown),!1);this.domElement.addEventListener("keyup",c(this,this.onKeyUp),!1);this.handleResize()};
Glen.FPSControls=function(a){THREE.FirstPersonControls.call(this,a);this.lastX=[];this.lastY=[];this.yDiff=this.xDiff=0;this.mouseSensitivity=5;this.constrainHorizontal=this.useTarget=!0;this.onMouseMove=function(a){this.domElement===document?(this.mouseX=a.pageX-this.viewHalfX,this.mouseY=a.pageY-this.viewHalfY):(this.mouseX=a.pageX-this.domElement.offsetLeft-this.viewHalfX,this.mouseY=a.pageY-this.domElement.offsetTop-this.viewHalfY);if(null!=document.webkitPointerLockElement)this.xDiff=a.webkitMovementX,
this.yDiff=a.webkitMovementY;else{var a=1<this.lastX.length?this.lastX.pop():0,c=1<this.lastY.length?this.lastY.pop():0;this.xDiff=this.mouseX-a;this.yDiff=this.mouseY-c;this.lastX.unshift(this.mouseX);this.lastY.unshift(this.mouseY)}};this.domElement.addEventListener("mousemove",function(a,c){return function(){c.apply(a,arguments)}}(this,this.onMouseMove),!1);this.update=function(a){if(!this.freeze){if(this.heightSpeed){var c=THREE.Math.clamp(this.object.position.y,this.heightMin,this.heightMax)-
this.heightMin;this.autoSpeedFactor=a*c*this.heightCoef}else this.autoSpeedFactor=0;c=a*this.movementSpeed;(this.moveForward||this.autoForward&&!this.moveBackward)&&this.object.translateZ(-(c+this.autoSpeedFactor));this.moveBackward&&this.object.translateZ(c);this.moveLeft&&this.object.translateX(-c);this.moveRight&&this.object.translateX(c);this.moveUp&&this.object.translateY(c);this.moveDown&&this.object.translateY(-c);a*=this.lookSpeed;this.activeLook||(a=0);c=1;this.constrainVertical&&(c=Math.PI/
(this.verticalMax-this.verticalMin));this.constrainHorizontal?(this.lon+=this.xDiff/this.mouseSensitivity,this.lat-=this.yDiff/this.mouseSensitivity):(this.lon+=this.mouseX*a,this.lookVertical&&(this.lat-=this.mouseY*a*c));this.lat=Math.max(-85,Math.min(85,this.lat));this.phi=THREE.Math.degToRad(90-this.lat);this.theta=THREE.Math.degToRad(this.lon);this.constrainVertical&&(this.phi=THREE.Math.mapLinear(this.phi,0,Math.PI,this.verticalMin,this.verticalMax));a=this.target;c=this.object.position;a.x=
c.x+100*Math.sin(this.phi)*Math.cos(this.theta);a.y=c.y+100*Math.cos(this.phi);a.z=c.z+100*Math.sin(this.phi)*Math.sin(this.theta);this.xDiff/=2;this.yDiff/=2;this.object.lookAt(a)}}};Glen.FPSControls.prototype=new THREE.FirstPersonControls;Glen.FPSControls.prototype.constructor=Glen.FPSControls;Glen._entities={};function _extend(a,b){for(var c in b)b.hasOwnProperty(c)&&(a[c]=b[c]);return a}Glen.registerEntity=function(a,b,c,d){Glen._entities[a]={construct:b,extender:c,extendArgs:d}};
Glen.Entity=function(a,b){this._id=-1;this.hooks={};this.entType=a;var c=Glen._entities[this.entType],d=void 0,f=b,e=[];do c.construct&&e.unshift(c.construct),f=_extend(f,"function"==typeof c.extendArgs?c.extendArgs(f):c.extendArgs),c=Glen._entities[c.extender];while("undefined"!=typeof c);for(c=0;c<e.length;c++){var g=e[c].call(d,f);void 0!=g&&(d=g)}this.setMesh(d);d._entity=this;Glen._world.addEntity(this)};
Glen.Entity.prototype={getType:function(){return this.entType},getMesh:function(){return this.mesh},getObject:function(){return this.mesh},setMesh:function(a){this.mesh&&(this.mesh.entity=void 0);this.mesh=a;a.entity=this},setObject:function(a){this.setMesh(a)},getPos:function(){return this.getMesh().position.clone()},setPos:function(a){this.getMesh().position=a.clone()},getRotation:function(){return this.getMesh().rotation.clone()},setRotation:function(a){this.getMesh().rotation=a.clone()},rotate:function(a){this.setRotation(this.getRotation().add(a))},
getMaterial:function(){return this.getMesh().materials[0]},setMaterial:function(a){this.getMesh().materials[0]=a},addHook:function(a,b){this.hooks[a]||(this.hooks[a]=[]);this.hooks[a].push(b)},callHook:function(a){var b=Array.prototype.slice.call(arguments);b.splice(0,1);if(this.hooks[a])for(i in this.hooks[a])this.hooks[a][i].apply(this,b)},remove:function(){Glen._world.removeEntity(this)},ID:function(){return this._id}};
Glen.registerEntity("basic",function(a){var b;b=a.material?a.material:a.color?Glen.ColorMaterial(a.color):new THREE.MeshFaceMaterial;if(!a.meshfn)throw Error("Basic entity type requires Physijs mesh constructor");if(!a.geometry)throw Error("Basic entity type requires some THREE.Geometry type");b=new a.meshfn(a.geometry,b,"undefined"==typeof a.mass?10:a.mass);a.rotation&&b.rotation.copy(a.rotation);b.position.copy(a.pos||Glen.Vector(0,0,0));b.castShadow=!0;return b});
Glen.registerEntity("block",void 0,"basic",function(a){return{geometry:new THREE.CubeGeometry(a.w||a.width,a.h||a.height,a.d||a.depth),meshfn:Physijs.BoxMesh}});Glen.registerEntity("floor",function(){this.castShadow=!1;this.receiveShadow=!0},"block",{h:1,mass:0});Glen.registerEntity("sphere",void 0,"basic",function(a){return{geometry:new THREE.SphereGeometry(a.radius,a.segments,a.rings),meshfn:Physijs.SphereMesh}});
Glen.registerEntity("text",void 0,"basic",function(a){return{geometry:new THREE.TextGeometry(a.text,a),meshfn:Physijs.ConvexMesh}});Glen.registerEntity("pointLight",function(a){var b=new THREE.PointLight(a.color||16777215);b.position.copy(a.position||Glen.Vector(0,0,0));b.intensity=a.intensity;return b});
Glen.registerEntity("directionalLight",function(a){var b=new THREE.DirectionalLight(a.color||16777215,a.intensity,a.distance);b.position.copy(a.position||Glen.Vector(0,0,0));b.target.position.copy(a.target||Glen._world.scene.position);b.castShadow=!0;b.shadowCameraLeft=-60;b.shadowCameraTop=-60;b.shadowCameraRight=60;b.shadowCameraBottom=60;b.shadowCameraNear=20;b.shadowCameraFar=200;b.shadowBias=-1E-4;b.shadowMapWidth=b.shadowMapHeight=2048;b.shadowDarkness=0.7;return b});
Glen.registerEntity("ambientLight",function(a){return new THREE.AmbientLight(a.color||16777215)});Glen.registerEntity("model",function(a){if("undefined"==typeof a.geometry){var b=this;(new THREE.JSONLoader).load({model:a.model,callback:function(a){a=new Physijs.ConvexMesh(a,new THREE.MeshLambertMaterial);b.setMesh(a);world.scene.Object(a)}})}else return new Physijs.ConvexMesh(a.geometry,new THREE.MeshLambertMaterial)});
